#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BadNetworkIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "NetUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BadNetworkIndicator.BadNetworkIndicator_C
// 0x0018 (0x02F8 - 0x02E0)
class UBadNetworkIndicator_C final : public UBadNetworkIndicator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Intro;                                             // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 NetworkIssueIndicator;                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void UpdateDisplay();
	void ExecuteUbergraph_BadNetworkIndicator(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BadNetworkIndicator_C">();
	}
	static class UBadNetworkIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBadNetworkIndicator_C>();
	}
};
static_assert(alignof(UBadNetworkIndicator_C) == 0x000008, "Wrong alignment on UBadNetworkIndicator_C");
static_assert(sizeof(UBadNetworkIndicator_C) == 0x0002F8, "Wrong size on UBadNetworkIndicator_C");
static_assert(offsetof(UBadNetworkIndicator_C, UberGraphFrame) == 0x0002E0, "Member 'UBadNetworkIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBadNetworkIndicator_C, Intro) == 0x0002E8, "Member 'UBadNetworkIndicator_C::Intro' has a wrong offset!");
static_assert(offsetof(UBadNetworkIndicator_C, NetworkIssueIndicator) == 0x0002F0, "Member 'UBadNetworkIndicator_C::NetworkIssueIndicator' has a wrong offset!");

}

