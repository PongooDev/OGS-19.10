#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Creative_UseRestriction_Component

#include "Basic.hpp"

#include "ECreativeClassSpecialCases_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.UnbindEventPawnPossesed
// 0x0028 (0x0028 - 0x0000)
struct Creative_UseRestriction_Component_C_UnbindEventPawnPossesed final
{
public:
	class AActor*                                 PlayerPawnToUnbind;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APawn* Pawn)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_UnbindEventPawnPossesed) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_UnbindEventPawnPossesed");
static_assert(sizeof(Creative_UseRestriction_Component_C_UnbindEventPawnPossesed) == 0x000028, "Wrong size on Creative_UseRestriction_Component_C_UnbindEventPawnPossesed");
static_assert(offsetof(Creative_UseRestriction_Component_C_UnbindEventPawnPossesed, PlayerPawnToUnbind) == 0x000000, "Member 'Creative_UseRestriction_Component_C_UnbindEventPawnPossesed::PlayerPawnToUnbind' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_UnbindEventPawnPossesed, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Creative_UseRestriction_Component_C_UnbindEventPawnPossesed::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_UnbindEventPawnPossesed, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000018, "Member 'Creative_UseRestriction_Component_C_UnbindEventPawnPossesed::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_UnbindEventPawnPossesed, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Creative_UseRestriction_Component_C_UnbindEventPawnPossesed::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.State Checks
// 0x0038 (0x0038 - 0x0000)
struct Creative_UseRestriction_Component_C_State_Checks final
{
public:
	const class AActor*                           Actor_to_Check;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AND;                                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidTeam_Valid;                        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_True;                        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHoldingItem_True;                       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IsHoldingItem_Item_Name;                  // 0x0010(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidPlayState_True;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnabled_True;                           // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_State_Checks) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_State_Checks");
static_assert(sizeof(Creative_UseRestriction_Component_C_State_Checks) == 0x000038, "Wrong size on Creative_UseRestriction_Component_C_State_Checks");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, Actor_to_Check) == 0x000000, "Member 'Creative_UseRestriction_Component_C_State_Checks::Actor_to_Check' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, AND) == 0x000008, "Member 'Creative_UseRestriction_Component_C_State_Checks::AND' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, ReturnValue) == 0x000009, "Member 'Creative_UseRestriction_Component_C_State_Checks::ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, CallFunc_IsValidTeam_Valid) == 0x00000A, "Member 'Creative_UseRestriction_Component_C_State_Checks::CallFunc_IsValidTeam_Valid' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, CallFunc_IsValidClass_True) == 0x00000B, "Member 'Creative_UseRestriction_Component_C_State_Checks::CallFunc_IsValidClass_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'Creative_UseRestriction_Component_C_State_Checks::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, CallFunc_IsHoldingItem_True) == 0x00000D, "Member 'Creative_UseRestriction_Component_C_State_Checks::CallFunc_IsHoldingItem_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, CallFunc_IsHoldingItem_Item_Name) == 0x000010, "Member 'Creative_UseRestriction_Component_C_State_Checks::CallFunc_IsHoldingItem_Item_Name' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'Creative_UseRestriction_Component_C_State_Checks::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, Temp_bool_Variable) == 0x000029, "Member 'Creative_UseRestriction_Component_C_State_Checks::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, CallFunc_IsValidPlayState_True) == 0x00002A, "Member 'Creative_UseRestriction_Component_C_State_Checks::CallFunc_IsValidPlayState_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, CallFunc_IsEnabled_True) == 0x00002B, "Member 'Creative_UseRestriction_Component_C_State_Checks::CallFunc_IsEnabled_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, K2Node_Select_Default) == 0x00002C, "Member 'Creative_UseRestriction_Component_C_State_Checks::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, CallFunc_BooleanAND_ReturnValue_1) == 0x00002D, "Member 'Creative_UseRestriction_Component_C_State_Checks::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, CallFunc_BooleanAND_ReturnValue_2) == 0x00002E, "Member 'Creative_UseRestriction_Component_C_State_Checks::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, CallFunc_BooleanAND_ReturnValue_3) == 0x00002F, "Member 'Creative_UseRestriction_Component_C_State_Checks::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_State_Checks, CallFunc_BooleanAND_ReturnValue_4) == 0x000030, "Member 'Creative_UseRestriction_Component_C_State_Checks::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.SetTeamsWithAffects
// 0x0040 (0x0040 - 0x0000)
struct Creative_UseRestriction_Component_C_SetTeamsWithAffects final
{
public:
	int32                                         Team_Index;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AffectsAllButSelected;                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 All_Teams;                                         // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetShiftedAnyTeamValue_ReturnValue;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetShiftedAnyTeamValue_ReturnValue_1;     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamValueAsIndex_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValidTeamIndex_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_SetTeamsWithAffects) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_SetTeamsWithAffects");
static_assert(sizeof(Creative_UseRestriction_Component_C_SetTeamsWithAffects) == 0x000040, "Wrong size on Creative_UseRestriction_Component_C_SetTeamsWithAffects");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetTeamsWithAffects, Team_Index) == 0x000000, "Member 'Creative_UseRestriction_Component_C_SetTeamsWithAffects::Team_Index' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetTeamsWithAffects, AffectsAllButSelected) == 0x000004, "Member 'Creative_UseRestriction_Component_C_SetTeamsWithAffects::AffectsAllButSelected' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetTeamsWithAffects, All_Teams) == 0x000008, "Member 'Creative_UseRestriction_Component_C_SetTeamsWithAffects::All_Teams' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetTeamsWithAffects, CallFunc_GetShiftedAnyTeamValue_ReturnValue) == 0x000018, "Member 'Creative_UseRestriction_Component_C_SetTeamsWithAffects::CallFunc_GetShiftedAnyTeamValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetTeamsWithAffects, CallFunc_GetShiftedAnyTeamValue_ReturnValue_1) == 0x00001C, "Member 'Creative_UseRestriction_Component_C_SetTeamsWithAffects::CallFunc_GetShiftedAnyTeamValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetTeamsWithAffects, CallFunc_GetTeamValueAsIndex_ReturnValue) == 0x000020, "Member 'Creative_UseRestriction_Component_C_SetTeamsWithAffects::CallFunc_GetTeamValueAsIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetTeamsWithAffects, CallFunc_Set_Remove_ReturnValue) == 0x000024, "Member 'Creative_UseRestriction_Component_C_SetTeamsWithAffects::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetTeamsWithAffects, K2Node_MakeArray_Array) == 0x000028, "Member 'Creative_UseRestriction_Component_C_SetTeamsWithAffects::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetTeamsWithAffects, CallFunc_IsValidTeamIndex_ReturnValue) == 0x000038, "Member 'Creative_UseRestriction_Component_C_SetTeamsWithAffects::CallFunc_IsValidTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetTeamsWithAffects, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'Creative_UseRestriction_Component_C_SetTeamsWithAffects::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.SetClassWithAffectsSafeTeamIndex
// 0x0108 (0x0108 - 0x0000)
struct Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex final
{
public:
	int32                                         Class_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AffectsAllButSelected;                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable_2;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_7;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable_3;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_11;                              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable_4;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_13;                              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable_5;                              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_16;                              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_18;                              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_3;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_19;                              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_20;                              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_21;                              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_22;                              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_23;                              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable_6;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_6;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_5;                           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_6;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_7;            // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable_7;                              // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x00C8(0x0010)(ReferenceParm)
	int32                                         K2Node_Select_Default_7;                           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_2;                          // 0x00E0(0x0010)(ReferenceParm)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_8;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_24;                              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_25;                              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_26;                              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable_8;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_8;                           // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex");
static_assert(sizeof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex) == 0x000108, "Wrong size on Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Class_Index) == 0x000000, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Class_Index' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, AffectsAllButSelected) == 0x000004, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::AffectsAllButSelected' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable) == 0x000008, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000D, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000E, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_BooleanAND_ReturnValue) == 0x00000F, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000010, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_byte_Variable) == 0x000011, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_1) == 0x000014, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_2) == 0x000018, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_3) == 0x00001C, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_MakeLiteralByte_ReturnValue) == 0x000020, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_byte_Variable_1) == 0x000021, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_4) == 0x000024, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_5) == 0x000028, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_6) == 0x00002C, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000030, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000031, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_byte_Variable_2) == 0x000032, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_7) == 0x000034, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_8) == 0x000038, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_9) == 0x00003C, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_byte_Variable_3) == 0x000040, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, K2Node_Select_Default) == 0x000044, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_10) == 0x000048, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, K2Node_MakeArray_Array) == 0x000050, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_11) == 0x000060, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_12) == 0x000064, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000068, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, K2Node_Select_Default_1) == 0x00006C, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_byte_Variable_4) == 0x000070, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_13) == 0x000074, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_14) == 0x000078, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_15) == 0x00007C, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000080, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, K2Node_Select_Default_2) == 0x000084, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000088, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_byte_Variable_5) == 0x000089, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_16) == 0x00008C, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_17) == 0x000090, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_18) == 0x000094, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000098, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, K2Node_Select_Default_3) == 0x00009C, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, K2Node_Select_Default_4) == 0x0000A0, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_19) == 0x0000A4, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_19' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_20) == 0x0000A8, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_20' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_21) == 0x0000AC, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_21' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_22) == 0x0000B0, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_22' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_23) == 0x0000B4, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_23' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_byte_Variable_6) == 0x0000B8, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_MakeLiteralByte_ReturnValue_6) == 0x0000B9, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_MakeLiteralByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, K2Node_Select_Default_5) == 0x0000BC, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, K2Node_Select_Default_6) == 0x0000C0, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_MakeLiteralByte_ReturnValue_7) == 0x0000C4, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_MakeLiteralByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_byte_Variable_7) == 0x0000C5, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, K2Node_MakeArray_Array_1) == 0x0000C8, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, K2Node_Select_Default_7) == 0x0000D8, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, K2Node_MakeArray_Array_2) == 0x0000E0, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, CallFunc_MakeLiteralByte_ReturnValue_8) == 0x0000F0, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::CallFunc_MakeLiteralByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_24) == 0x0000F4, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_24' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_25) == 0x0000F8, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_25' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_int_Variable_26) == 0x0000FC, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_int_Variable_26' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, Temp_byte_Variable_8) == 0x000100, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex, K2Node_Select_Default_8) == 0x000104, "Member 'Creative_UseRestriction_Component_C_SetClassWithAffectsSafeTeamIndex::K2Node_Select_Default_8' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Set Initial Single Team
// 0x0048 (0x0048 - 0x0000)
struct Creative_UseRestriction_Component_C_Set_Initial_Single_Team final
{
public:
	int32                                         Team_Index;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 All_Teams;                                         // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetNumberOfTeams_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamValueAsIndex_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidTeamIndex_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTeamAny_ReturnValue;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Set_Initial_Single_Team) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Set_Initial_Single_Team");
static_assert(sizeof(Creative_UseRestriction_Component_C_Set_Initial_Single_Team) == 0x000048, "Wrong size on Creative_UseRestriction_Component_C_Set_Initial_Single_Team");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Team, Team_Index) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Team::Team_Index' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Team, All_Teams) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Team::All_Teams' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Team, CallFunc_GetNumberOfTeams_ReturnValue) == 0x000018, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Team::CallFunc_GetNumberOfTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Team, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Team::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Team, CallFunc_GetTeamValueAsIndex_ReturnValue) == 0x000020, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Team::CallFunc_GetTeamValueAsIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Team, CallFunc_IsValidTeamIndex_ReturnValue) == 0x000024, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Team::CallFunc_IsValidTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Team, CallFunc_IsTeamAny_ReturnValue) == 0x000025, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Team::CallFunc_IsTeamAny_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Team, Temp_int_Variable) == 0x000028, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Team::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Team, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Team::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Team, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Team::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Team, K2Node_MakeArray_Array) == 0x000038, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Team::K2Node_MakeArray_Array' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Set Initial Single Class
// 0x0018 (0x0018 - 0x0000)
struct Creative_UseRestriction_Component_C_Set_Initial_Single_Class final
{
public:
	int32                                         Class_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Set_Initial_Single_Class) == 0x000004, "Wrong alignment on Creative_UseRestriction_Component_C_Set_Initial_Single_Class");
static_assert(sizeof(Creative_UseRestriction_Component_C_Set_Initial_Single_Class) == 0x000018, "Wrong size on Creative_UseRestriction_Component_C_Set_Initial_Single_Class");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Class, Class_Index) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Class::Class_Index' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Class, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Class::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Class, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000005, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Class::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Class, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Class::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Class, Temp_int_Variable) == 0x00000C, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Class::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Class, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Class::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Initial_Single_Class, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Creative_UseRestriction_Component_C_Set_Initial_Single_Class::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Set Class with Affects
// 0x00B0 (0x00B0 - 0x0000)
struct Creative_UseRestriction_Component_C_Set_Class_with_Affects final
{
public:
	int32                                         Class_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AffectsAllButSelected;                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsesSafeTeamIndexing;                              // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable_3;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_3;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable_4;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_13;                              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECreativeClassSpecialCases                    Temp_byte_Variable_5;                              // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_5;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x00A0(0x0010)(ReferenceParm)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Set_Class_with_Affects) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Set_Class_with_Affects");
static_assert(sizeof(Creative_UseRestriction_Component_C_Set_Class_with_Affects) == 0x0000B0, "Wrong size on Creative_UseRestriction_Component_C_Set_Class_with_Affects");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Class_Index) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Class_Index' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, AffectsAllButSelected) == 0x000004, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::AffectsAllButSelected' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, UsesSafeTeamIndexing) == 0x000005, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::UsesSafeTeamIndexing' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_1) == 0x00000C, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_byte_Variable) == 0x000010, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_2) == 0x000014, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_3) == 0x000018, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_4) == 0x00001C, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, CallFunc_MakeLiteralByte_ReturnValue) == 0x000020, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000021, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_byte_Variable_1) == 0x000022, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_5) == 0x000024, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_6) == 0x000028, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_7) == 0x00002C, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_byte_Variable_2) == 0x000030, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, K2Node_Select_Default) == 0x000034, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_8) == 0x000038, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_9) == 0x00003C, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_10) == 0x000040, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000044, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, K2Node_Select_Default_1) == 0x000048, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_11) == 0x00004C, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_12) == 0x000050, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_byte_Variable_3) == 0x000054, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000055, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, K2Node_Select_Default_2) == 0x000058, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x00005C, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, K2Node_Select_Default_3) == 0x000060, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_byte_Variable_4) == 0x000064, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_13) == 0x000068, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_14) == 0x00006C, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_15) == 0x000070, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, CallFunc_Not_PreBool_ReturnValue) == 0x000074, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, K2Node_MakeArray_Array) == 0x000078, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000088, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000089, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00008A, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, CallFunc_BooleanAND_ReturnValue) == 0x00008B, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00008C, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00008D, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x00008E, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_byte_Variable_5) == 0x00008F, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_16) == 0x000090, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, K2Node_Select_Default_4) == 0x000094, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, Temp_int_Variable_17) == 0x000098, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, K2Node_Select_Default_5) == 0x00009C, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Set_Class_with_Affects, K2Node_MakeArray_Array_1) == 0x0000A0, "Member 'Creative_UseRestriction_Component_C_Set_Class_with_Affects::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Remove Pawn from Cache
// 0x0020 (0x0020 - 0x0000)
struct Creative_UseRestriction_Component_C_Remove_Pawn_from_Cache final
{
public:
	const class AFortPlayerPawn*                  Pawn;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Actor, EEndPlayReason EndPlayReason)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Remove_Pawn_from_Cache) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Remove_Pawn_from_Cache");
static_assert(sizeof(Creative_UseRestriction_Component_C_Remove_Pawn_from_Cache) == 0x000020, "Wrong size on Creative_UseRestriction_Component_C_Remove_Pawn_from_Cache");
static_assert(offsetof(Creative_UseRestriction_Component_C_Remove_Pawn_from_Cache, Pawn) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Remove_Pawn_from_Cache::Pawn' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Remove_Pawn_from_Cache, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Remove_Pawn_from_Cache::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Remove_Pawn_from_Cache, CallFunc_Map_Remove_ReturnValue) == 0x000018, "Member 'Creative_UseRestriction_Component_C_Remove_Pawn_from_Cache::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Remove Classes
// 0x0018 (0x0018 - 0x0000)
struct Creative_UseRestriction_Component_C_Remove_Classes final
{
public:
	TArray<int32>                                 Classes;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Remove_Classes) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Remove_Classes");
static_assert(sizeof(Creative_UseRestriction_Component_C_Remove_Classes) == 0x000018, "Wrong size on Creative_UseRestriction_Component_C_Remove_Classes");
static_assert(offsetof(Creative_UseRestriction_Component_C_Remove_Classes, Classes) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Remove_Classes::Classes' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Remove_Classes, Temp_int_Variable) == 0x000010, "Member 'Creative_UseRestriction_Component_C_Remove_Classes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Remove_Classes, CallFunc_Array_Contains_ReturnValue) == 0x000014, "Member 'Creative_UseRestriction_Component_C_Remove_Classes::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.IsValidTeam
// 0x0028 (0x0028 - 0x0000)
struct Creative_UseRestriction_Component_C_IsValidTeam final
{
public:
	const class AActor*                           Actor_to_Check;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Actor_Team;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfTeams_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorPvPTeamIndex_TeamIndex;           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActorPvPTeamIndex_ReturnValue;         // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_IsValidTeam) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_IsValidTeam");
static_assert(sizeof(Creative_UseRestriction_Component_C_IsValidTeam) == 0x000028, "Wrong size on Creative_UseRestriction_Component_C_IsValidTeam");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidTeam, Actor_to_Check) == 0x000000, "Member 'Creative_UseRestriction_Component_C_IsValidTeam::Actor_to_Check' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidTeam, Valid) == 0x000008, "Member 'Creative_UseRestriction_Component_C_IsValidTeam::Valid' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidTeam, Actor_Team) == 0x00000C, "Member 'Creative_UseRestriction_Component_C_IsValidTeam::Actor_Team' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidTeam, CallFunc_GetNumberOfTeams_ReturnValue) == 0x000010, "Member 'Creative_UseRestriction_Component_C_IsValidTeam::CallFunc_GetNumberOfTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidTeam, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'Creative_UseRestriction_Component_C_IsValidTeam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidTeam, CallFunc_GetActorPvPTeamIndex_TeamIndex) == 0x000015, "Member 'Creative_UseRestriction_Component_C_IsValidTeam::CallFunc_GetActorPvPTeamIndex_TeamIndex' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidTeam, CallFunc_GetActorPvPTeamIndex_ReturnValue) == 0x000016, "Member 'Creative_UseRestriction_Component_C_IsValidTeam::CallFunc_GetActorPvPTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidTeam, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'Creative_UseRestriction_Component_C_IsValidTeam::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidTeam, CallFunc_Set_Length_ReturnValue) == 0x00001C, "Member 'Creative_UseRestriction_Component_C_IsValidTeam::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidTeam, CallFunc_Set_Contains_ReturnValue) == 0x000020, "Member 'Creative_UseRestriction_Component_C_IsValidTeam::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidTeam, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000021, "Member 'Creative_UseRestriction_Component_C_IsValidTeam::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.IsValidPlayState
// 0x0004 (0x0004 - 0x0000)
struct Creative_UseRestriction_Component_C_IsValidPlayState final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPlayMode_ReturnValue;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_IsValidPlayState) == 0x000001, "Wrong alignment on Creative_UseRestriction_Component_C_IsValidPlayState");
static_assert(sizeof(Creative_UseRestriction_Component_C_IsValidPlayState) == 0x000004, "Wrong size on Creative_UseRestriction_Component_C_IsValidPlayState");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidPlayState, TRUE_0) == 0x000000, "Member 'Creative_UseRestriction_Component_C_IsValidPlayState::TRUE_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidPlayState, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Creative_UseRestriction_Component_C_IsValidPlayState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidPlayState, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'Creative_UseRestriction_Component_C_IsValidPlayState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidPlayState, CallFunc_IsInPlayMode_ReturnValue) == 0x000003, "Member 'Creative_UseRestriction_Component_C_IsValidPlayState::CallFunc_IsInPlayMode_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.IsValidClass
// 0x0040 (0x0040 - 0x0000)
struct Creative_UseRestriction_Component_C_IsValidClass final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TRUE_0;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerState*                       K2Node_DynamicCast_AsFort_Player_State;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetClassSlotForPlayer_ReturnValue;        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_IsValidClass) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_IsValidClass");
static_assert(sizeof(Creative_UseRestriction_Component_C_IsValidClass) == 0x000040, "Wrong size on Creative_UseRestriction_Component_C_IsValidClass");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidClass, Actor) == 0x000000, "Member 'Creative_UseRestriction_Component_C_IsValidClass::Actor' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidClass, TRUE_0) == 0x000008, "Member 'Creative_UseRestriction_Component_C_IsValidClass::TRUE_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidClass, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000010, "Member 'Creative_UseRestriction_Component_C_IsValidClass::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidClass, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Creative_UseRestriction_Component_C_IsValidClass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidClass, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'Creative_UseRestriction_Component_C_IsValidClass::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidClass, K2Node_DynamicCast_AsFort_Player_State) == 0x000020, "Member 'Creative_UseRestriction_Component_C_IsValidClass::K2Node_DynamicCast_AsFort_Player_State' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidClass, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Creative_UseRestriction_Component_C_IsValidClass::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidClass, CallFunc_Set_Length_ReturnValue) == 0x00002C, "Member 'Creative_UseRestriction_Component_C_IsValidClass::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidClass, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'Creative_UseRestriction_Component_C_IsValidClass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidClass, CallFunc_IsValid_ReturnValue_2) == 0x000031, "Member 'Creative_UseRestriction_Component_C_IsValidClass::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidClass, CallFunc_GetClassSlotForPlayer_ReturnValue) == 0x000032, "Member 'Creative_UseRestriction_Component_C_IsValidClass::CallFunc_GetClassSlotForPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidClass, CallFunc_IsValid_ReturnValue_3) == 0x000033, "Member 'Creative_UseRestriction_Component_C_IsValidClass::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidClass, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000034, "Member 'Creative_UseRestriction_Component_C_IsValidClass::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsValidClass, CallFunc_Set_Contains_ReturnValue) == 0x000038, "Member 'Creative_UseRestriction_Component_C_IsValidClass::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.IsHoldingItem
// 0x0058 (0x0058 - 0x0000)
struct Creative_UseRestriction_Component_C_IsHoldingItem final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TRUE_0;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Item_Name;                                         // 0x0010(0x0018)(Parm, OutParm)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_K2_GetItemQuantityOnPlayer_ReturnValue;   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0018)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_IsHoldingItem) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_IsHoldingItem");
static_assert(sizeof(Creative_UseRestriction_Component_C_IsHoldingItem) == 0x000058, "Wrong size on Creative_UseRestriction_Component_C_IsHoldingItem");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsHoldingItem, Actor) == 0x000000, "Member 'Creative_UseRestriction_Component_C_IsHoldingItem::Actor' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsHoldingItem, TRUE_0) == 0x000008, "Member 'Creative_UseRestriction_Component_C_IsHoldingItem::TRUE_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsHoldingItem, Item_Name) == 0x000010, "Member 'Creative_UseRestriction_Component_C_IsHoldingItem::Item_Name' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsHoldingItem, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000028, "Member 'Creative_UseRestriction_Component_C_IsHoldingItem::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsHoldingItem, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Creative_UseRestriction_Component_C_IsHoldingItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsHoldingItem, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'Creative_UseRestriction_Component_C_IsHoldingItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsHoldingItem, CallFunc_K2_GetItemQuantityOnPlayer_ReturnValue) == 0x000034, "Member 'Creative_UseRestriction_Component_C_IsHoldingItem::CallFunc_K2_GetItemQuantityOnPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsHoldingItem, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'Creative_UseRestriction_Component_C_IsHoldingItem::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsHoldingItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000050, "Member 'Creative_UseRestriction_Component_C_IsHoldingItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.IsEnabled
// 0x0003 (0x0003 - 0x0000)
struct Creative_UseRestriction_Component_C_IsEnabled final
{
public:
	bool                                          TRUE_0;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnabled_Enabled;                        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_IsEnabled) == 0x000001, "Wrong alignment on Creative_UseRestriction_Component_C_IsEnabled");
static_assert(sizeof(Creative_UseRestriction_Component_C_IsEnabled) == 0x000003, "Wrong size on Creative_UseRestriction_Component_C_IsEnabled");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsEnabled, TRUE_0) == 0x000000, "Member 'Creative_UseRestriction_Component_C_IsEnabled::TRUE_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsEnabled, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Creative_UseRestriction_Component_C_IsEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_IsEnabled, CallFunc_IsEnabled_Enabled) == 0x000002, "Member 'Creative_UseRestriction_Component_C_IsEnabled::CallFunc_IsEnabled_Enabled' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Print State Checks
// 0x0410 (0x0410 - 0x0000)
struct Creative_UseRestriction_Component_C_Print_State_Checks final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorPvPTeamIndex_TeamIndex;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActorPvPTeamIndex_ReturnValue;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidTeam_Valid;                        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ByteToText_ReturnValue;              // 0x0010(0x0018)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0028(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsHoldingItem_True;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IsHoldingItem_Item_Name;                  // 0x00C8(0x0018)()
	bool                                          CallFunc_IsValidClass_True;                        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x00E8(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_2;            // 0x0150(0x0018)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0170(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUseRestrictionComponentDebuggingEnabled_ReturnValue; // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B3[0x5];                                      // 0x01B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x01D8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01F0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0208(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0248(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxNumberOfTeams_ReturnValue;          // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0290(0x0018)()
	bool                                          K2Node_Select_Default;                             // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x02B0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidPlayState_True;                    // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_3;            // 0x02F8(0x0018)()
	bool                                          CallFunc_IsEnabled_True;                           // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0318(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_4;            // 0x0360(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0380(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x03C8(0x0010)(ReferenceParm)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x03D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x03E8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0400(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Print_State_Checks) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Print_State_Checks");
static_assert(sizeof(Creative_UseRestriction_Component_C_Print_State_Checks) == 0x000410, "Wrong size on Creative_UseRestriction_Component_C_Print_State_Checks");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, Actor) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::Actor' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, Temp_bool_Variable) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_GetActorPvPTeamIndex_TeamIndex) == 0x000009, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_GetActorPvPTeamIndex_TeamIndex' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_GetActorPvPTeamIndex_ReturnValue) == 0x00000A, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_GetActorPvPTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_IsValidTeam_Valid) == 0x00000B, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_IsValidTeam_Valid' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_Conv_ByteToText_ReturnValue) == 0x000010, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_Conv_ByteToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_Conv_BoolToText_ReturnValue) == 0x000028, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_IsHoldingItem_True) == 0x0000C0, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_IsHoldingItem_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_IsHoldingItem_Item_Name) == 0x0000C8, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_IsHoldingItem_Item_Name' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_IsValidClass_True) == 0x0000E0, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_IsValidClass_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x0000E8, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_BooleanAND_ReturnValue) == 0x000100, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_Not_PreBool_ReturnValue) == 0x000148, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_Conv_BoolToText_ReturnValue_2) == 0x000150, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_Conv_BoolToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_GetOwner_ReturnValue) == 0x000168, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, K2Node_MakeStruct_FormatArgumentData_3) == 0x000170, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_IsValid_ReturnValue) == 0x0001B0, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_HasAuthority_ReturnValue) == 0x0001B1, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_IsUseRestrictionComponentDebuggingEnabled_ReturnValue) == 0x0001B2, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_IsUseRestrictionComponentDebuggingEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_GetOwner_ReturnValue_1) == 0x0001B8, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_Set_Length_ReturnValue) == 0x0001C0, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_GetDisplayName_ReturnValue) == 0x0001C8, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_Conv_IntToText_ReturnValue) == 0x0001D8, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_Conv_StringToText_ReturnValue) == 0x0001F0, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, K2Node_MakeStruct_FormatArgumentData_4) == 0x000208, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, K2Node_MakeStruct_FormatArgumentData_5) == 0x000248, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_GetMaxNumberOfTeams_ReturnValue) == 0x000288, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_GetMaxNumberOfTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000290, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, K2Node_Select_Default) == 0x0002A8, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, K2Node_MakeStruct_FormatArgumentData_6) == 0x0002B0, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_BooleanOR_ReturnValue) == 0x0002F0, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_IsValidPlayState_True) == 0x0002F1, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_IsValidPlayState_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_Conv_BoolToText_ReturnValue_3) == 0x0002F8, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_Conv_BoolToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_IsEnabled_True) == 0x000310, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_IsEnabled_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, K2Node_MakeStruct_FormatArgumentData_7) == 0x000318, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_BooleanAND_ReturnValue_1) == 0x000358, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_Conv_BoolToText_ReturnValue_4) == 0x000360, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_Conv_BoolToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_BooleanAND_ReturnValue_2) == 0x000378, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, K2Node_MakeStruct_FormatArgumentData_8) == 0x000380, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_BooleanAND_ReturnValue_3) == 0x0003C0, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, K2Node_MakeArray_Array) == 0x0003C8, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_SelectColor_ReturnValue) == 0x0003D8, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_Format_ReturnValue) == 0x0003E8, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Print_State_Checks, CallFunc_Conv_TextToString_ReturnValue) == 0x000400, "Member 'Creative_UseRestriction_Component_C_Print_State_Checks::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.On Pawn Destroyed
// 0x0020 (0x0020 - 0x0000)
struct Creative_UseRestriction_Component_C_On_Pawn_Destroyed final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_On_Pawn_Destroyed) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_On_Pawn_Destroyed");
static_assert(sizeof(Creative_UseRestriction_Component_C_On_Pawn_Destroyed) == 0x000020, "Wrong size on Creative_UseRestriction_Component_C_On_Pawn_Destroyed");
static_assert(offsetof(Creative_UseRestriction_Component_C_On_Pawn_Destroyed, Actor) == 0x000000, "Member 'Creative_UseRestriction_Component_C_On_Pawn_Destroyed::Actor' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_On_Pawn_Destroyed, EndPlayReason) == 0x000008, "Member 'Creative_UseRestriction_Component_C_On_Pawn_Destroyed::EndPlayReason' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_On_Pawn_Destroyed, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000010, "Member 'Creative_UseRestriction_Component_C_On_Pawn_Destroyed::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_On_Pawn_Destroyed, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Creative_UseRestriction_Component_C_On_Pawn_Destroyed::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Initialize Component with Affects
// 0x0040 (0x0040 - 0x0000)
struct Creative_UseRestriction_Component_C_Initialize_Component_with_Affects final
{
public:
	class UFortMinigameLogicComponent*            MinigameLogic_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCreative_Enabled_Component_C*          EnabledComponent_0;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UToyOptionsComponent_C*                 ToyOptionsComponent;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Required_Single_Team;                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Required_Class;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    Required_Item_0;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Required_Item_Quantity_0;                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TeamAffectsAllButSelected;                         // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClassAffectsAllButSelected;                        // 0x002D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsesSafeClassIndexing;                             // 0x002E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetShiftedAnyTeamValue_ReturnValue;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidTeamIndex_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Initialize_Component_with_Affects");
static_assert(sizeof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects) == 0x000040, "Wrong size on Creative_UseRestriction_Component_C_Initialize_Component_with_Affects");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects, MinigameLogic_0) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Initialize_Component_with_Affects::MinigameLogic_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects, EnabledComponent_0) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Initialize_Component_with_Affects::EnabledComponent_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects, ToyOptionsComponent) == 0x000010, "Member 'Creative_UseRestriction_Component_C_Initialize_Component_with_Affects::ToyOptionsComponent' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects, Required_Single_Team) == 0x000018, "Member 'Creative_UseRestriction_Component_C_Initialize_Component_with_Affects::Required_Single_Team' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects, Required_Class) == 0x00001C, "Member 'Creative_UseRestriction_Component_C_Initialize_Component_with_Affects::Required_Class' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects, Required_Item_0) == 0x000020, "Member 'Creative_UseRestriction_Component_C_Initialize_Component_with_Affects::Required_Item_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects, Required_Item_Quantity_0) == 0x000028, "Member 'Creative_UseRestriction_Component_C_Initialize_Component_with_Affects::Required_Item_Quantity_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects, TeamAffectsAllButSelected) == 0x00002C, "Member 'Creative_UseRestriction_Component_C_Initialize_Component_with_Affects::TeamAffectsAllButSelected' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects, ClassAffectsAllButSelected) == 0x00002D, "Member 'Creative_UseRestriction_Component_C_Initialize_Component_with_Affects::ClassAffectsAllButSelected' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects, UsesSafeClassIndexing) == 0x00002E, "Member 'Creative_UseRestriction_Component_C_Initialize_Component_with_Affects::UsesSafeClassIndexing' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects, CallFunc_GetShiftedAnyTeamValue_ReturnValue) == 0x000030, "Member 'Creative_UseRestriction_Component_C_Initialize_Component_with_Affects::CallFunc_GetShiftedAnyTeamValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects, CallFunc_IsValidTeamIndex_ReturnValue) == 0x000034, "Member 'Creative_UseRestriction_Component_C_Initialize_Component_with_Affects::CallFunc_IsValidTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component_with_Affects, CallFunc_SelectInt_ReturnValue) == 0x000038, "Member 'Creative_UseRestriction_Component_C_Initialize_Component_with_Affects::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Initialize Component
// 0x0038 (0x0038 - 0x0000)
struct Creative_UseRestriction_Component_C_Initialize_Component final
{
public:
	class UFortMinigameLogicComponent*            MinigameLogic_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCreative_Enabled_Component_C*          EnabledComponent_0;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UToyOptionsComponent_C*                 ToyOptionsComponent;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Required_Single_Team;                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Required_Class;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    Required_Item_0;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Required_Item_Quantity_0;                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetShiftedAnyTeamValue_ReturnValue;       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidTeamIndex_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Initialize_Component) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Initialize_Component");
static_assert(sizeof(Creative_UseRestriction_Component_C_Initialize_Component) == 0x000038, "Wrong size on Creative_UseRestriction_Component_C_Initialize_Component");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component, MinigameLogic_0) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Initialize_Component::MinigameLogic_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component, EnabledComponent_0) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Initialize_Component::EnabledComponent_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component, ToyOptionsComponent) == 0x000010, "Member 'Creative_UseRestriction_Component_C_Initialize_Component::ToyOptionsComponent' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component, Required_Single_Team) == 0x000018, "Member 'Creative_UseRestriction_Component_C_Initialize_Component::Required_Single_Team' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component, Required_Class) == 0x00001C, "Member 'Creative_UseRestriction_Component_C_Initialize_Component::Required_Class' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component, Required_Item_0) == 0x000020, "Member 'Creative_UseRestriction_Component_C_Initialize_Component::Required_Item_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component, Required_Item_Quantity_0) == 0x000028, "Member 'Creative_UseRestriction_Component_C_Initialize_Component::Required_Item_Quantity_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component, CallFunc_GetShiftedAnyTeamValue_ReturnValue) == 0x00002C, "Member 'Creative_UseRestriction_Component_C_Initialize_Component::CallFunc_GetShiftedAnyTeamValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component, CallFunc_IsValidTeamIndex_ReturnValue) == 0x000030, "Member 'Creative_UseRestriction_Component_C_Initialize_Component::CallFunc_IsValidTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Initialize_Component, CallFunc_SelectInt_ReturnValue) == 0x000034, "Member 'Creative_UseRestriction_Component_C_Initialize_Component::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Get Last Player Controller
// 0x0090 (0x0090 - 0x0000)
struct Creative_UseRestriction_Component_C_Get_Last_Player_Controller final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  FortPC;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        Pawn;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  Controller;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface;       // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetDriver_ReturnValue;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_Map_Find_Value;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Get_Last_Player_Controller");
static_assert(sizeof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller) == 0x000090, "Wrong size on Creative_UseRestriction_Component_C_Get_Last_Player_Controller");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, Actor) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::Actor' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, FortPC) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::FortPC' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, Pawn) == 0x000010, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::Pawn' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, Controller) == 0x000018, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::Controller' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000020, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, CallFunc_IsValid_ReturnValue_1) == 0x00002A, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, CallFunc_IsValid_ReturnValue_2) == 0x00002B, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, Temp_object_Variable) == 0x000030, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, CallFunc_IsValid_ReturnValue_3) == 0x000038, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000040, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, K2Node_DynamicCast_AsFort_Vehicle_Interface) == 0x000048, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::K2Node_DynamicCast_AsFort_Vehicle_Interface' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, CallFunc_IsValid_ReturnValue_4) == 0x000059, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, CallFunc_GetDriver_ReturnValue) == 0x000060, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::CallFunc_GetDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1) == 0x000068, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000070, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, CallFunc_Map_Find_Value) == 0x000080, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Last_Player_Controller, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'Creative_UseRestriction_Component_C_Get_Last_Player_Controller::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Get Failure Reasons
// 0x04D0 (0x04D0 - 0x0000)
struct Creative_UseRestriction_Component_C_Get_Failure_Reasons final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Device_Failure_Reason;                             // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Append_Device_Reason;                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Reasons;                                           // 0x0028(0x0018)(Parm, OutParm)
	class FText                                   Text;                                              // 0x0040(0x0018)(Edit, BlueprintVisible)
	class FText                                   Temp_text_Variable;                                // 0x0058(0x0018)()
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHoldingItem_True;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_IsHoldingItem_Item_Name;                  // 0x0080(0x0018)()
	bool                                          CallFunc_IsValidClass_True;                        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidTeam_Valid;                        // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E8(0x0040)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0128(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0150(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0168(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01A8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01E8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0228(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0268(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02A8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x02B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02C8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x02E0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x02F8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0338(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0378(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x03B8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x03C8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0408(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0420(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0430(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x0448(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0488(0x0010)(ReferenceParm)
	class FText                                   CallFunc_TextTrimPrecedingAndTrailing_ReturnValue; // 0x0498(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x04B0(0x0018)()
	bool                                          CallFunc_IsValidPlayState_True;                    // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnabled_True;                           // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x04CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x04CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Get_Failure_Reasons) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Get_Failure_Reasons");
static_assert(sizeof(Creative_UseRestriction_Component_C_Get_Failure_Reasons) == 0x0004D0, "Wrong size on Creative_UseRestriction_Component_C_Get_Failure_Reasons");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, Pawn) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::Pawn' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, Device_Failure_Reason) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::Device_Failure_Reason' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, Append_Device_Reason) == 0x000020, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::Append_Device_Reason' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, Reasons) == 0x000028, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::Reasons' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, Text) == 0x000040, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::Text' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, Temp_text_Variable) == 0x000058, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000070, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_IsHoldingItem_True) == 0x000078, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_IsHoldingItem_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_IsHoldingItem_Item_Name) == 0x000080, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_IsHoldingItem_Item_Name' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_IsValidClass_True) == 0x000098, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_IsValidClass_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_Not_PreBool_ReturnValue) == 0x0000E0, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E1, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_IsValidTeam_Valid) == 0x0000E2, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_IsValidTeam_Valid' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_IsValid_ReturnValue) == 0x0000E3, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000E4, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, Temp_bool_Variable) == 0x0000E5, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E8, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_Select_Default) == 0x000128, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeArray_Array) == 0x000140, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_Format_ReturnValue) == 0x000150, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeStruct_FormatArgumentData_2) == 0x000168, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001A8, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001E8, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeStruct_FormatArgumentData_5) == 0x000228, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeStruct_FormatArgumentData_6) == 0x000268, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeArray_Array_1) == 0x0002A8, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeArray_Array_2) == 0x0002B8, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_Format_ReturnValue_1) == 0x0002C8, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_Format_ReturnValue_2) == 0x0002E0, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeStruct_FormatArgumentData_7) == 0x0002F8, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeStruct_FormatArgumentData_8) == 0x000338, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeStruct_FormatArgumentData_9) == 0x000378, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeArray_Array_3) == 0x0003B8, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeStruct_FormatArgumentData_10) == 0x0003C8, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_Format_ReturnValue_3) == 0x000408, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeArray_Array_4) == 0x000420, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_Format_ReturnValue_4) == 0x000430, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeStruct_FormatArgumentData_11) == 0x000448, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, K2Node_MakeArray_Array_5) == 0x000488, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_TextTrimPrecedingAndTrailing_ReturnValue) == 0x000498, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_TextTrimPrecedingAndTrailing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_Format_ReturnValue_5) == 0x0004B0, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_IsValidPlayState_True) == 0x0004C8, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_IsValidPlayState_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_IsEnabled_True) == 0x0004C9, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_IsEnabled_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_Not_PreBool_ReturnValue_3) == 0x0004CA, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Get_Failure_Reasons, CallFunc_Not_PreBool_ReturnValue_4) == 0x0004CB, "Member 'Creative_UseRestriction_Component_C_Get_Failure_Reasons::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Can Actor Interact
// 0x0028 (0x0028 - 0x0000)
struct Creative_UseRestriction_Component_C_Can_Actor_Interact final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Additional_Checks;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OR_can_Customize_Device;                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TRUE_0;                                            // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  PC;                                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_Get_Last_Player_Controller_FortPC;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Player_Controller_Interact_True;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_State_Checks_ReturnValue;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Can_Actor_Interact) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Can_Actor_Interact");
static_assert(sizeof(Creative_UseRestriction_Component_C_Can_Actor_Interact) == 0x000028, "Wrong size on Creative_UseRestriction_Component_C_Can_Actor_Interact");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Actor_Interact, Actor) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Can_Actor_Interact::Actor' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Actor_Interact, Additional_Checks) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Can_Actor_Interact::Additional_Checks' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Actor_Interact, OR_can_Customize_Device) == 0x000009, "Member 'Creative_UseRestriction_Component_C_Can_Actor_Interact::OR_can_Customize_Device' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Actor_Interact, TRUE_0) == 0x00000A, "Member 'Creative_UseRestriction_Component_C_Can_Actor_Interact::TRUE_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Actor_Interact, PC) == 0x000010, "Member 'Creative_UseRestriction_Component_C_Can_Actor_Interact::PC' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Actor_Interact, CallFunc_Get_Last_Player_Controller_FortPC) == 0x000018, "Member 'Creative_UseRestriction_Component_C_Can_Actor_Interact::CallFunc_Get_Last_Player_Controller_FortPC' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Actor_Interact, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Creative_UseRestriction_Component_C_Can_Actor_Interact::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Actor_Interact, CallFunc_Can_Player_Controller_Interact_True) == 0x000021, "Member 'Creative_UseRestriction_Component_C_Can_Actor_Interact::CallFunc_Can_Player_Controller_Interact_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Actor_Interact, CallFunc_State_Checks_ReturnValue) == 0x000022, "Member 'Creative_UseRestriction_Component_C_Can_Actor_Interact::CallFunc_State_Checks_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Empty Player Pawn Possessed
// 0x0028 (0x0028 - 0x0000)
struct Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  PC;                                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed");
static_assert(sizeof(Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed) == 0x000028, "Wrong size on Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed");
static_assert(offsetof(Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed, Pawn) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed::Pawn' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed, PC) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed::PC' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000010, "Member 'Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000018, "Member 'Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'Creative_UseRestriction_Component_C_Empty_Player_Pawn_Possessed::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Can Player Controller Interact
// 0x0010 (0x0010 - 0x0000)
struct Creative_UseRestriction_Component_C_Can_Player_Controller_Interact final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Additional_Checks;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OR_can_Customize_Device;                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TRUE_0;                                            // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Edit_Options_True;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_State_Checks_ReturnValue;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Can_Player_Controller_Interact) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Can_Player_Controller_Interact");
static_assert(sizeof(Creative_UseRestriction_Component_C_Can_Player_Controller_Interact) == 0x000010, "Wrong size on Creative_UseRestriction_Component_C_Can_Player_Controller_Interact");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Player_Controller_Interact, PC) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Can_Player_Controller_Interact::PC' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Player_Controller_Interact, Additional_Checks) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Can_Player_Controller_Interact::Additional_Checks' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Player_Controller_Interact, OR_can_Customize_Device) == 0x000009, "Member 'Creative_UseRestriction_Component_C_Can_Player_Controller_Interact::OR_can_Customize_Device' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Player_Controller_Interact, TRUE_0) == 0x00000A, "Member 'Creative_UseRestriction_Component_C_Can_Player_Controller_Interact::TRUE_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Player_Controller_Interact, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'Creative_UseRestriction_Component_C_Can_Player_Controller_Interact::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Player_Controller_Interact, CallFunc_Can_Edit_Options_True) == 0x00000C, "Member 'Creative_UseRestriction_Component_C_Can_Player_Controller_Interact::CallFunc_Can_Edit_Options_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Player_Controller_Interact, CallFunc_State_Checks_ReturnValue) == 0x00000D, "Member 'Creative_UseRestriction_Component_C_Can_Player_Controller_Interact::CallFunc_State_Checks_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Player_Controller_Interact, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'Creative_UseRestriction_Component_C_Can_Player_Controller_Interact::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Player_Controller_Interact, CallFunc_BooleanOR_ReturnValue) == 0x00000F, "Member 'Creative_UseRestriction_Component_C_Can_Player_Controller_Interact::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Can Edit Options
// 0x0030 (0x0030 - 0x0000)
struct Creative_UseRestriction_Component_C_Can_Edit_Options final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TRUE_0;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanEditOptionsComponent_ReturnValue;      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Can_Edit_Options) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Can_Edit_Options");
static_assert(sizeof(Creative_UseRestriction_Component_C_Can_Edit_Options) == 0x000030, "Wrong size on Creative_UseRestriction_Component_C_Can_Edit_Options");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Edit_Options, PC) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Can_Edit_Options::PC' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Edit_Options, TRUE_0) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Can_Edit_Options::TRUE_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Edit_Options, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'Creative_UseRestriction_Component_C_Can_Edit_Options::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Edit_Options, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Creative_UseRestriction_Component_C_Can_Edit_Options::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Edit_Options, K2Node_DynamicCast_AsFort_Pawn) == 0x000020, "Member 'Creative_UseRestriction_Component_C_Can_Edit_Options::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Edit_Options, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Creative_UseRestriction_Component_C_Can_Edit_Options::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Edit_Options, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'Creative_UseRestriction_Component_C_Can_Edit_Options::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Can_Edit_Options, CallFunc_CanEditOptionsComponent_ReturnValue) == 0x00002A, "Member 'Creative_UseRestriction_Component_C_Can_Edit_Options::CallFunc_CanEditOptionsComponent_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Controller Link
// 0x0030 (0x0030 - 0x0000)
struct Creative_UseRestriction_Component_C_Controller_Link final
{
public:
	const class AFortPlayerPawn*                  Pawn;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AFortPlayerController*            Controller;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APawn* Pawn)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* Actor, EEndPlayReason EndPlayReason)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Controller_Link) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Controller_Link");
static_assert(sizeof(Creative_UseRestriction_Component_C_Controller_Link) == 0x000030, "Wrong size on Creative_UseRestriction_Component_C_Controller_Link");
static_assert(offsetof(Creative_UseRestriction_Component_C_Controller_Link, Pawn) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Controller_Link::Pawn' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Controller_Link, Controller) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Controller_Link::Controller' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Controller_Link, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Creative_UseRestriction_Component_C_Controller_Link::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Controller_Link, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'Creative_UseRestriction_Component_C_Controller_Link::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Add Valid Classes
// 0x0018 (0x0018 - 0x0000)
struct Creative_UseRestriction_Component_C_Add_Valid_Classes final
{
public:
	TArray<int32>                                 Class_List;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Add_Valid_Classes) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Add_Valid_Classes");
static_assert(sizeof(Creative_UseRestriction_Component_C_Add_Valid_Classes) == 0x000018, "Wrong size on Creative_UseRestriction_Component_C_Add_Valid_Classes");
static_assert(offsetof(Creative_UseRestriction_Component_C_Add_Valid_Classes, Class_List) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Add_Valid_Classes::Class_List' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Add_Valid_Classes, Temp_int_Variable) == 0x000010, "Member 'Creative_UseRestriction_Component_C_Add_Valid_Classes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Add_Valid_Classes, CallFunc_Array_Contains_ReturnValue) == 0x000014, "Member 'Creative_UseRestriction_Component_C_Add_Valid_Classes::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Actor has Valid Controller
// 0x00E8 (0x00E8 - 0x0000)
struct Creative_UseRestriction_Component_C_Actor_has_Valid_Controller final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Include_Restriction_Check;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Additional_Checks;                                 // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_Controller;                                  // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        Pawn;                                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  Controller;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface;       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetDriver_ReturnValue;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerState*                       K2Node_DynamicCast_AsFort_Player_State;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        Temp_object_Variable;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APawn* PossessedPawn)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Player_Controller_Interact_True;      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APawn* Pawn)>            K2Node_CreateDelegate_OutputDelegate_1;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_Map_Find_Value;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller) == 0x000008, "Wrong alignment on Creative_UseRestriction_Component_C_Actor_has_Valid_Controller");
static_assert(sizeof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller) == 0x0000E8, "Wrong size on Creative_UseRestriction_Component_C_Actor_has_Valid_Controller");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, Actor) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::Actor' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, Include_Restriction_Check) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::Include_Restriction_Check' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, Additional_Checks) == 0x000009, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::Additional_Checks' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, Valid_Controller) == 0x00000A, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::Valid_Controller' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, FortPlayerPawn) == 0x000010, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::FortPlayerPawn' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, PlayerController) == 0x000018, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::PlayerController' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, Pawn) == 0x000020, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::Pawn' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, Controller) == 0x000028, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::Controller' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, K2Node_DynamicCast_AsFort_Vehicle_Interface) == 0x000030, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::K2Node_DynamicCast_AsFort_Vehicle_Interface' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, CallFunc_GetDriver_ReturnValue) == 0x000048, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::CallFunc_GetDriver_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000050, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000060, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, K2Node_DynamicCast_AsFort_Player_State) == 0x000070, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::K2Node_DynamicCast_AsFort_Player_State' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, K2Node_DynamicCast_bSuccess_3) == 0x000078, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, Temp_object_Variable) == 0x000080, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000088, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, CallFunc_K2_GetPawn_ReturnValue) == 0x000090, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, K2Node_CreateDelegate_OutputDelegate) == 0x000098, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x0000A8, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, K2Node_DynamicCast_bSuccess_4) == 0x0000B0, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, CallFunc_IsValid_ReturnValue_1) == 0x0000B1, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1) == 0x0000B8, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, CallFunc_IsValid_ReturnValue_2) == 0x0000C0, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, CallFunc_Can_Player_Controller_Interact_True) == 0x0000C1, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::CallFunc_Can_Player_Controller_Interact_True' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C4, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, CallFunc_Map_Find_Value) == 0x0000D8, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Actor_has_Valid_Controller, CallFunc_Map_Find_ReturnValue) == 0x0000E0, "Member 'Creative_UseRestriction_Component_C_Actor_has_Valid_Controller::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Test Matching Team
// 0x0010 (0x0010 - 0x0000)
struct Creative_UseRestriction_Component_C_Test_Matching_Team final
{
public:
	int32                                         TeamValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TRUE_0;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamValueAsIndex_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTeamAny_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Test_Matching_Team) == 0x000004, "Wrong alignment on Creative_UseRestriction_Component_C_Test_Matching_Team");
static_assert(sizeof(Creative_UseRestriction_Component_C_Test_Matching_Team) == 0x000010, "Wrong size on Creative_UseRestriction_Component_C_Test_Matching_Team");
static_assert(offsetof(Creative_UseRestriction_Component_C_Test_Matching_Team, TeamValue) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Test_Matching_Team::TeamValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Test_Matching_Team, TRUE_0) == 0x000004, "Member 'Creative_UseRestriction_Component_C_Test_Matching_Team::TRUE_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Test_Matching_Team, CallFunc_GetTeamValueAsIndex_ReturnValue) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Test_Matching_Team::CallFunc_GetTeamValueAsIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Test_Matching_Team, CallFunc_IsTeamAny_ReturnValue) == 0x00000C, "Member 'Creative_UseRestriction_Component_C_Test_Matching_Team::CallFunc_IsTeamAny_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Test_Matching_Team, CallFunc_Set_Contains_ReturnValue) == 0x00000D, "Member 'Creative_UseRestriction_Component_C_Test_Matching_Team::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.Test Matching Class
// 0x0010 (0x0010 - 0x0000)
struct Creative_UseRestriction_Component_C_Test_Matching_Class final
{
public:
	int32                                         Class_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TRUE_0;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_Test_Matching_Class) == 0x000004, "Wrong alignment on Creative_UseRestriction_Component_C_Test_Matching_Class");
static_assert(sizeof(Creative_UseRestriction_Component_C_Test_Matching_Class) == 0x000010, "Wrong size on Creative_UseRestriction_Component_C_Test_Matching_Class");
static_assert(offsetof(Creative_UseRestriction_Component_C_Test_Matching_Class, Class_Index) == 0x000000, "Member 'Creative_UseRestriction_Component_C_Test_Matching_Class::Class_Index' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Test_Matching_Class, TRUE_0) == 0x000004, "Member 'Creative_UseRestriction_Component_C_Test_Matching_Class::TRUE_0' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Test_Matching_Class, CallFunc_Set_Contains_ReturnValue) == 0x000005, "Member 'Creative_UseRestriction_Component_C_Test_Matching_Class::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Test_Matching_Class, CallFunc_Set_Length_ReturnValue) == 0x000008, "Member 'Creative_UseRestriction_Component_C_Test_Matching_Class::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_Test_Matching_Class, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'Creative_UseRestriction_Component_C_Test_Matching_Class::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Creative_UseRestriction_Component.Creative_UseRestriction_Component_C.GetNumberOfTeams
// 0x0008 (0x0008 - 0x0000)
struct Creative_UseRestriction_Component_C_GetNumberOfTeams final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxNumberOfTeams_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Creative_UseRestriction_Component_C_GetNumberOfTeams) == 0x000004, "Wrong alignment on Creative_UseRestriction_Component_C_GetNumberOfTeams");
static_assert(sizeof(Creative_UseRestriction_Component_C_GetNumberOfTeams) == 0x000008, "Wrong size on Creative_UseRestriction_Component_C_GetNumberOfTeams");
static_assert(offsetof(Creative_UseRestriction_Component_C_GetNumberOfTeams, ReturnValue) == 0x000000, "Member 'Creative_UseRestriction_Component_C_GetNumberOfTeams::ReturnValue' has a wrong offset!");
static_assert(offsetof(Creative_UseRestriction_Component_C_GetNumberOfTeams, CallFunc_GetMaxNumberOfTeams_ReturnValue) == 0x000004, "Member 'Creative_UseRestriction_Component_C_GetNumberOfTeams::CallFunc_GetMaxNumberOfTeams_ReturnValue' has a wrong offset!");

}

