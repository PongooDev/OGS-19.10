#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Athena_HappyGhost_Wire

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Athena_HappyGhost_Wire.B_Athena_HappyGhost_Wire_C
// 0x00F0 (0x0380 - 0x0290)
class AB_Athena_HappyGhost_Wire_C final : public AFortHookGunRope
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        ItemSlot;                                          // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RopeProjectileMeshVis;                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         BounceOff_Spin_AECA7A624BECBBD8A035ADBE48C36D31;   // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceOff_BounceUp_AECA7A624BECBBD8A035ADBE48C36D31; // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BounceOff__Direction_AECA7A624BECBBD8A035ADBE48C36D31; // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BounceOff;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tight_NewTrack_0_F9036F1A48D1CCE19631248E34232E56; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Tight__Direction_F9036F1A48D1CCE19631248E34232E56; // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Tight;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Reel_In_Tighten_8E08E4A046B5709C1097E5A983173D6B;  // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Reel_In_Reel_Lerp_Controller_8E08E4A046B5709C1097E5A983173D6B; // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Reel_In__Direction_8E08E4A046B5709C1097E5A983173D6B; // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Reel_In;                                           // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x02E8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class USoundBase*                             ReelSound;                                         // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ReattachSound;                                     // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReelinPlayRate;                                    // 0x0300(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Stop;                                            // 0x0304(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ReelMontage;                                       // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           NoHitMontage;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           NoHitMontage_Female;                               // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MontagePlayRate;                                   // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitPawnOrFish;                                     // 0x032C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitWorld;                                          // 0x032D(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitDamagable;                                      // 0x032E(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32F[0x1];                                      // 0x032F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Bounce;                                            // 0x0330(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x033C(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  T_FlopperSpawn;                                    // 0x0348(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             Sound_Pickup;                                      // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortPickup*>                    PickedUpPickups;                                   // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void AttachNonFishingPickups(const class AFortPickup*& InputPin);
	void BounceOff__FinishedFunc();
	void BounceOff__UpdateFunc();
	void DropAndDestroy();
	void End_Reel();
	void ExecuteUbergraph_B_Athena_HappyGhost_Wire(int32 EntryPoint);
	void PlayMontage();
	void ReceiveBeginPlay();
	void Reel_In__FinishedFunc();
	void Reel_In__UpdateFunc();
	void ReelFinished();
	void ReelFinishedClientOnly();
	void Tight__FinishedFunc();
	void Tight__UpdateFunc();
	void TightenRope();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Athena_HappyGhost_Wire_C">();
	}
	static class AB_Athena_HappyGhost_Wire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Athena_HappyGhost_Wire_C>();
	}
};
static_assert(alignof(AB_Athena_HappyGhost_Wire_C) == 0x000008, "Wrong alignment on AB_Athena_HappyGhost_Wire_C");
static_assert(sizeof(AB_Athena_HappyGhost_Wire_C) == 0x000380, "Wrong size on AB_Athena_HappyGhost_Wire_C");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, UberGraphFrame) == 0x000290, "Member 'AB_Athena_HappyGhost_Wire_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, ItemSlot) == 0x000298, "Member 'AB_Athena_HappyGhost_Wire_C::ItemSlot' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, RopeProjectileMeshVis) == 0x0002A0, "Member 'AB_Athena_HappyGhost_Wire_C::RopeProjectileMeshVis' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, BounceOff_Spin_AECA7A624BECBBD8A035ADBE48C36D31) == 0x0002A8, "Member 'AB_Athena_HappyGhost_Wire_C::BounceOff_Spin_AECA7A624BECBBD8A035ADBE48C36D31' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, BounceOff_BounceUp_AECA7A624BECBBD8A035ADBE48C36D31) == 0x0002AC, "Member 'AB_Athena_HappyGhost_Wire_C::BounceOff_BounceUp_AECA7A624BECBBD8A035ADBE48C36D31' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, BounceOff__Direction_AECA7A624BECBBD8A035ADBE48C36D31) == 0x0002B0, "Member 'AB_Athena_HappyGhost_Wire_C::BounceOff__Direction_AECA7A624BECBBD8A035ADBE48C36D31' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, BounceOff) == 0x0002B8, "Member 'AB_Athena_HappyGhost_Wire_C::BounceOff' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, Tight_NewTrack_0_F9036F1A48D1CCE19631248E34232E56) == 0x0002C0, "Member 'AB_Athena_HappyGhost_Wire_C::Tight_NewTrack_0_F9036F1A48D1CCE19631248E34232E56' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, Tight__Direction_F9036F1A48D1CCE19631248E34232E56) == 0x0002C4, "Member 'AB_Athena_HappyGhost_Wire_C::Tight__Direction_F9036F1A48D1CCE19631248E34232E56' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, Tight) == 0x0002C8, "Member 'AB_Athena_HappyGhost_Wire_C::Tight' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, Reel_In_Tighten_8E08E4A046B5709C1097E5A983173D6B) == 0x0002D0, "Member 'AB_Athena_HappyGhost_Wire_C::Reel_In_Tighten_8E08E4A046B5709C1097E5A983173D6B' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, Reel_In_Reel_Lerp_Controller_8E08E4A046B5709C1097E5A983173D6B) == 0x0002D4, "Member 'AB_Athena_HappyGhost_Wire_C::Reel_In_Reel_Lerp_Controller_8E08E4A046B5709C1097E5A983173D6B' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, Reel_In__Direction_8E08E4A046B5709C1097E5A983173D6B) == 0x0002D8, "Member 'AB_Athena_HappyGhost_Wire_C::Reel_In__Direction_8E08E4A046B5709C1097E5A983173D6B' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, Reel_In) == 0x0002E0, "Member 'AB_Athena_HappyGhost_Wire_C::Reel_In' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, PlayerPawn) == 0x0002E8, "Member 'AB_Athena_HappyGhost_Wire_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, ReelSound) == 0x0002F0, "Member 'AB_Athena_HappyGhost_Wire_C::ReelSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, ReattachSound) == 0x0002F8, "Member 'AB_Athena_HappyGhost_Wire_C::ReattachSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, ReelinPlayRate) == 0x000300, "Member 'AB_Athena_HappyGhost_Wire_C::ReelinPlayRate' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, T_Stop) == 0x000304, "Member 'AB_Athena_HappyGhost_Wire_C::T_Stop' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, ReelMontage) == 0x000310, "Member 'AB_Athena_HappyGhost_Wire_C::ReelMontage' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, NoHitMontage) == 0x000318, "Member 'AB_Athena_HappyGhost_Wire_C::NoHitMontage' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, NoHitMontage_Female) == 0x000320, "Member 'AB_Athena_HappyGhost_Wire_C::NoHitMontage_Female' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, MontagePlayRate) == 0x000328, "Member 'AB_Athena_HappyGhost_Wire_C::MontagePlayRate' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, HitPawnOrFish) == 0x00032C, "Member 'AB_Athena_HappyGhost_Wire_C::HitPawnOrFish' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, HitWorld) == 0x00032D, "Member 'AB_Athena_HappyGhost_Wire_C::HitWorld' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, HitDamagable) == 0x00032E, "Member 'AB_Athena_HappyGhost_Wire_C::HitDamagable' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, Bounce) == 0x000330, "Member 'AB_Athena_HappyGhost_Wire_C::Bounce' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, HitNormal) == 0x00033C, "Member 'AB_Athena_HappyGhost_Wire_C::HitNormal' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, T_FlopperSpawn) == 0x000348, "Member 'AB_Athena_HappyGhost_Wire_C::T_FlopperSpawn' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, Sound_Pickup) == 0x000368, "Member 'AB_Athena_HappyGhost_Wire_C::Sound_Pickup' has a wrong offset!");
static_assert(offsetof(AB_Athena_HappyGhost_Wire_C, PickedUpPickups) == 0x000370, "Member 'AB_Athena_HappyGhost_Wire_C::PickedUpPickups' has a wrong offset!");

}

