#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPinnedQuestInfo

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PlayerPinnedQuestInfo.PlayerPinnedQuestInfo_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PlayerPinnedQuestInfo_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerPinnedQuestInfo_C_PreConstruct) == 0x000001, "Wrong alignment on PlayerPinnedQuestInfo_C_PreConstruct");
static_assert(sizeof(PlayerPinnedQuestInfo_C_PreConstruct) == 0x000001, "Wrong size on PlayerPinnedQuestInfo_C_PreConstruct");
static_assert(offsetof(PlayerPinnedQuestInfo_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'PlayerPinnedQuestInfo_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function PlayerPinnedQuestInfo.PlayerPinnedQuestInfo_C.ExecuteUbergraph_PlayerPinnedQuestInfo
// 0x0228 (0x0228 - 0x0000)
struct PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Achieved;                             // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Required;                             // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   K2Node_Event_Rarity;                               // 0x000C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Description;                          // 0x0010(0x0018)(ConstParm)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00B8(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0130(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0148(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x0160(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x0178(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_5;            // 0x0190(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x01A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01C0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0200(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0210(0x0018)()
};
static_assert(alignof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo) == 0x000008, "Wrong alignment on PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo");
static_assert(sizeof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo) == 0x000228, "Wrong size on PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, EntryPoint) == 0x000000, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, K2Node_Event_Achieved) == 0x000004, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::K2Node_Event_Achieved' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, K2Node_Event_Required) == 0x000008, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::K2Node_Event_Required' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, K2Node_Event_Rarity) == 0x00000C, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::K2Node_Event_Rarity' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, K2Node_Event_Description) == 0x000010, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::K2Node_Event_Description' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, Temp_int_Variable) == 0x000028, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000070, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x0000B8, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, K2Node_Event_IsDesignTime) == 0x0000D0, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, CallFunc_MakeLiteralText_ReturnValue) == 0x0000D8, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F0, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000130, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000148, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, CallFunc_MakeLiteralText_ReturnValue_3) == 0x000160, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, CallFunc_MakeLiteralText_ReturnValue_4) == 0x000178, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, CallFunc_MakeLiteralText_ReturnValue_5) == 0x000190, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::CallFunc_MakeLiteralText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, K2Node_Select_Default) == 0x0001A8, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001C0, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, K2Node_MakeArray_Array) == 0x000200, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo, CallFunc_Format_ReturnValue) == 0x000210, "Member 'PlayerPinnedQuestInfo_C_ExecuteUbergraph_PlayerPinnedQuestInfo::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function PlayerPinnedQuestInfo.PlayerPinnedQuestInfo_C.BP_OnSetPinnedQuestInfo
// 0x0028 (0x0028 - 0x0000)
struct PlayerPinnedQuestInfo_C_BP_OnSetPinnedQuestInfo final
{
public:
	int32                                         Achieved;                                          // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Required;                                          // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   Rarity;                                            // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PlayerPinnedQuestInfo_C_BP_OnSetPinnedQuestInfo) == 0x000008, "Wrong alignment on PlayerPinnedQuestInfo_C_BP_OnSetPinnedQuestInfo");
static_assert(sizeof(PlayerPinnedQuestInfo_C_BP_OnSetPinnedQuestInfo) == 0x000028, "Wrong size on PlayerPinnedQuestInfo_C_BP_OnSetPinnedQuestInfo");
static_assert(offsetof(PlayerPinnedQuestInfo_C_BP_OnSetPinnedQuestInfo, Achieved) == 0x000000, "Member 'PlayerPinnedQuestInfo_C_BP_OnSetPinnedQuestInfo::Achieved' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_BP_OnSetPinnedQuestInfo, Required) == 0x000004, "Member 'PlayerPinnedQuestInfo_C_BP_OnSetPinnedQuestInfo::Required' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_BP_OnSetPinnedQuestInfo, Rarity) == 0x000008, "Member 'PlayerPinnedQuestInfo_C_BP_OnSetPinnedQuestInfo::Rarity' has a wrong offset!");
static_assert(offsetof(PlayerPinnedQuestInfo_C_BP_OnSetPinnedQuestInfo, Description) == 0x000010, "Member 'PlayerPinnedQuestInfo_C_BP_OnSetPinnedQuestInfo::Description' has a wrong offset!");

}

