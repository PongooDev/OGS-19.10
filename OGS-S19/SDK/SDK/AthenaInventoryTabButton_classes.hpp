#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaInventoryTabButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaInventoryTabButton.AthenaInventoryTabButton_C
// 0x00B0 (0x1010 - 0x0F60)
class UAthenaInventoryTabButton_C final : public UFortTopBarTabTextIconButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0F60(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hovered;                                           // 0x0F68(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Selected;                                          // 0x0F70(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x0F78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_1;                                         // 0x0F80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_2;                                         // 0x0F88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_0;                                     // 0x0F90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_ButtonBorder;                                  // 0x0F98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewMobileStyle;                                // 0x0FA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA1[0x3];                                      // 0x0FA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatSpringState                      SpringState_ShapeChange;                           // 0x0FA4(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FFloatSpringState                      SpringState_Scale;                                 // 0x0FB0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         Spring_Scale_Target;                               // 0x0FBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MassMultiply;                                      // 0x0FC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DampenMultiply;                                    // 0x0FC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StiffnessMultiply;                                 // 0x0FC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VisualSelectionState;                              // 0x0FCC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FCD[0x3];                                      // 0x0FCD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RandomFloat_Top;                                   // 0x0FD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomFloat_Left;                                  // 0x0FD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomFloat_Right;                                 // 0x0FD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomFloat_Bottom;                                // 0x0FDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShapeChange_New;                                   // 0x0FE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShapeChange_Target;                                // 0x0FE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdateSpring;                                      // 0x0FE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE9[0x7];                                      // 0x0FE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ButtonText;                                        // 0x0FF0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void UpdateMIDWithRandomValues();
	void SetText(const class FText& ButtonText_0);
	void SeedRandomValues();
	void PreConstruct(bool IsDesignTime);
	void OverrideIcon(bool Show, const struct FSlateBrush& inSlateBrush);
	void OnSelectedChangedEvent(class UCommonButtonLegacy* Button, bool Selected_0);
	void OnInitialized();
	void OnCurrentTextStyleChanged();
	void InitializeButtonBorderMID();
	void HandleSelectionChangedVisuals(bool bIsSelected);
	void ExecuteUbergraph_AthenaInventoryTabButton(int32 EntryPoint);
	void Construct();
	void BP_OnUnhovered();
	void BP_OnHovered();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaInventoryTabButton_C">();
	}
	static class UAthenaInventoryTabButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaInventoryTabButton_C>();
	}
};
static_assert(alignof(UAthenaInventoryTabButton_C) == 0x000010, "Wrong alignment on UAthenaInventoryTabButton_C");
static_assert(sizeof(UAthenaInventoryTabButton_C) == 0x001010, "Wrong size on UAthenaInventoryTabButton_C");
static_assert(offsetof(UAthenaInventoryTabButton_C, UberGraphFrame) == 0x000F60, "Member 'UAthenaInventoryTabButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, Hovered) == 0x000F68, "Member 'UAthenaInventoryTabButton_C::Hovered' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, Selected) == 0x000F70, "Member 'UAthenaInventoryTabButton_C::Selected' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, SizeBox_0) == 0x000F78, "Member 'UAthenaInventoryTabButton_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, SizeBox_1) == 0x000F80, "Member 'UAthenaInventoryTabButton_C::SizeBox_1' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, SizeBox_2) == 0x000F88, "Member 'UAthenaInventoryTabButton_C::SizeBox_2' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, VerticalBox_0) == 0x000F90, "Member 'UAthenaInventoryTabButton_C::VerticalBox_0' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, MID_ButtonBorder) == 0x000F98, "Member 'UAthenaInventoryTabButton_C::MID_ButtonBorder' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, PreviewMobileStyle) == 0x000FA0, "Member 'UAthenaInventoryTabButton_C::PreviewMobileStyle' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, SpringState_ShapeChange) == 0x000FA4, "Member 'UAthenaInventoryTabButton_C::SpringState_ShapeChange' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, SpringState_Scale) == 0x000FB0, "Member 'UAthenaInventoryTabButton_C::SpringState_Scale' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, Spring_Scale_Target) == 0x000FBC, "Member 'UAthenaInventoryTabButton_C::Spring_Scale_Target' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, MassMultiply) == 0x000FC0, "Member 'UAthenaInventoryTabButton_C::MassMultiply' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, DampenMultiply) == 0x000FC4, "Member 'UAthenaInventoryTabButton_C::DampenMultiply' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, StiffnessMultiply) == 0x000FC8, "Member 'UAthenaInventoryTabButton_C::StiffnessMultiply' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, VisualSelectionState) == 0x000FCC, "Member 'UAthenaInventoryTabButton_C::VisualSelectionState' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, RandomFloat_Top) == 0x000FD0, "Member 'UAthenaInventoryTabButton_C::RandomFloat_Top' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, RandomFloat_Left) == 0x000FD4, "Member 'UAthenaInventoryTabButton_C::RandomFloat_Left' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, RandomFloat_Right) == 0x000FD8, "Member 'UAthenaInventoryTabButton_C::RandomFloat_Right' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, RandomFloat_Bottom) == 0x000FDC, "Member 'UAthenaInventoryTabButton_C::RandomFloat_Bottom' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, ShapeChange_New) == 0x000FE0, "Member 'UAthenaInventoryTabButton_C::ShapeChange_New' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, ShapeChange_Target) == 0x000FE4, "Member 'UAthenaInventoryTabButton_C::ShapeChange_Target' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, UpdateSpring) == 0x000FE8, "Member 'UAthenaInventoryTabButton_C::UpdateSpring' has a wrong offset!");
static_assert(offsetof(UAthenaInventoryTabButton_C, ButtonText) == 0x000FF0, "Member 'UAthenaInventoryTabButton_C::ButtonText' has a wrong offset!");

}

