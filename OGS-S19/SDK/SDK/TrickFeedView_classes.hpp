#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TrickFeedView

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass TrickFeedView.TrickFeedView_C
// 0x0108 (0x03E0 - 0x02D8)
class UTrickFeedView_C final : public UAthenaTrickFeedBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TrickReset;                                        // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TrickComplete;                                     // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TrickFailed;                                       // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TriangleFlare;                                     // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MultiplierBump;                                    // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Crit;                                              // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       FailedText;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Glow;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Multiplier;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTrickStats;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonNumericTextBlock*                TotalScore;                                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           TrickInformation;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortDynamicEntryBox*                   TrickList;                                         // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TrickStats;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           RemoveInfoTimer;                                   // 0x0350(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          isCritical;                                        // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CritThreshold;                                     // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isAmazing;                                         // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AmazingThreshold;                                  // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DEVCritDisplay;                                    // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DEVFinalDisplay;                                   // 0x0369(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A[0x6];                                      // 0x036A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           OkTricksDescription;                               // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FText>                           NiceTricksDescription;                             // 0x0380(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FText>                           AmazingTricksDescription;                          // 0x0390(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FText>                           WipeoutDescription;                                // 0x03A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAudioComponent*                        TrickSequenceMusic;                                // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_OnFail;                                      // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_OnCancel;                                    // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_OnSuccess;                                   // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_OnNewTrick;                                  // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_TrickSequenceMusic;                          // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void WidgetAnimationEvt_TrickFailed_K2Node_WidgetAnimationEvent_0();
	void WidgetAnimationEvt_TrickComplete_K2Node_WidgetAnimationEvent_1();
	void UpdateTrickStats(const class FText& StatsText);
	void UpdateScore(class UFortVehicleTrickSet* TrickSet, int32 TotalScore_0);
	void UpdateMultiplier(int32 Multiplier_0);
	void TrickSequenceStarted();
	void TrickSequenceFailed();
	void TrickSequenceComplete();
	void TrickSequenceCanceled();
	void ToggleCompleteStyle(bool IsComplete);
	void SimulateTrick();
	void PreConstruct(bool IsDesignTime);
	void HIdeTrickUI();
	void GetCalloutText(class FText* Callout);
	void FadeOutMusic();
	void ExecuteUbergraph_TrickFeedView(int32 EntryPoint);
	void EventTrickCompliment();
	void CritStyleEvent(bool isCritical_0);
	void AddTrick(const class FText& TrickName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TrickFeedView_C">();
	}
	static class UTrickFeedView_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrickFeedView_C>();
	}
};
static_assert(alignof(UTrickFeedView_C) == 0x000008, "Wrong alignment on UTrickFeedView_C");
static_assert(sizeof(UTrickFeedView_C) == 0x0003E0, "Wrong size on UTrickFeedView_C");
static_assert(offsetof(UTrickFeedView_C, UberGraphFrame) == 0x0002D8, "Member 'UTrickFeedView_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, TrickReset) == 0x0002E0, "Member 'UTrickFeedView_C::TrickReset' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, TrickComplete) == 0x0002E8, "Member 'UTrickFeedView_C::TrickComplete' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, TrickFailed) == 0x0002F0, "Member 'UTrickFeedView_C::TrickFailed' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, TriangleFlare) == 0x0002F8, "Member 'UTrickFeedView_C::TriangleFlare' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, MultiplierBump) == 0x000300, "Member 'UTrickFeedView_C::MultiplierBump' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, Crit) == 0x000308, "Member 'UTrickFeedView_C::Crit' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, FailedText) == 0x000310, "Member 'UTrickFeedView_C::FailedText' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, Image_Glow) == 0x000318, "Member 'UTrickFeedView_C::Image_Glow' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, Multiplier) == 0x000320, "Member 'UTrickFeedView_C::Multiplier' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, RichTrickStats) == 0x000328, "Member 'UTrickFeedView_C::RichTrickStats' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, TotalScore) == 0x000330, "Member 'UTrickFeedView_C::TotalScore' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, TrickInformation) == 0x000338, "Member 'UTrickFeedView_C::TrickInformation' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, TrickList) == 0x000340, "Member 'UTrickFeedView_C::TrickList' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, TrickStats) == 0x000348, "Member 'UTrickFeedView_C::TrickStats' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, RemoveInfoTimer) == 0x000350, "Member 'UTrickFeedView_C::RemoveInfoTimer' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, isCritical) == 0x000358, "Member 'UTrickFeedView_C::isCritical' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, CritThreshold) == 0x00035C, "Member 'UTrickFeedView_C::CritThreshold' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, isAmazing) == 0x000360, "Member 'UTrickFeedView_C::isAmazing' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, AmazingThreshold) == 0x000364, "Member 'UTrickFeedView_C::AmazingThreshold' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, DEVCritDisplay) == 0x000368, "Member 'UTrickFeedView_C::DEVCritDisplay' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, DEVFinalDisplay) == 0x000369, "Member 'UTrickFeedView_C::DEVFinalDisplay' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, OkTricksDescription) == 0x000370, "Member 'UTrickFeedView_C::OkTricksDescription' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, NiceTricksDescription) == 0x000380, "Member 'UTrickFeedView_C::NiceTricksDescription' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, AmazingTricksDescription) == 0x000390, "Member 'UTrickFeedView_C::AmazingTricksDescription' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, WipeoutDescription) == 0x0003A0, "Member 'UTrickFeedView_C::WipeoutDescription' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, TrickSequenceMusic) == 0x0003B0, "Member 'UTrickFeedView_C::TrickSequenceMusic' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, Sound_OnFail) == 0x0003B8, "Member 'UTrickFeedView_C::Sound_OnFail' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, Sound_OnCancel) == 0x0003C0, "Member 'UTrickFeedView_C::Sound_OnCancel' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, Sound_OnSuccess) == 0x0003C8, "Member 'UTrickFeedView_C::Sound_OnSuccess' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, Sound_OnNewTrick) == 0x0003D0, "Member 'UTrickFeedView_C::Sound_OnNewTrick' has a wrong offset!");
static_assert(offsetof(UTrickFeedView_C, Sound_TrickSequenceMusic) == 0x0003D8, "Member 'UTrickFeedView_C::Sound_TrickSequenceMusic' has a wrong offset!");

}

