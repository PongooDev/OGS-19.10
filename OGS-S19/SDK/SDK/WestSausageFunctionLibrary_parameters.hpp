#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WestSausageFunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function WestSausageFunctionLibrary.WestSausageFunctionLibrary_C.CalculateDetachmentForce
// 0x0300 (0x0300 - 0x0000)
struct WestSausageFunctionLibrary_C_CalculateDetachmentForce final
{
public:
	class APlayerPawn_Athena_C*                   PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorToAttachPoint;                               // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Launch;                                            // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LaunchVector;                                      // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         OverallMultiplier;                                 // 0x0040(0x0028)(Edit, BlueprintVisible)
	struct FScalableFloat                         MinZForceMultiplier;                               // 0x0068(0x0028)(Edit, BlueprintVisible)
	struct FScalableFloat                         LaunchOverMaxForce;                                // 0x0090(0x0028)(Edit, BlueprintVisible)
	struct FScalableFloat                         LaunchOverMinForce;                                // 0x00B8(0x0028)(Edit, BlueprintVisible)
	struct FVector                                VecToAttachPoint_Dir;                              // 0x00E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VecToAttachPoint_Length;                           // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Swinging_CheckGrounded_Grounded_;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Swinging_CheckGrounded_HitNormal;         // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Swinging_CheckGrounded_Distance;          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable;                              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_2;            // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_3;            // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_1;         // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_2;         // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_3;         // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_FTrunc64_ReturnValue;                     // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_4;         // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_FTrunc64_ReturnValue_1;                   // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_Int64Int64UsingFloatingPoint_ReturnValue; // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_5;                     // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_5;         // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_6;         // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F2[0x2];                                      // 0x02F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WestSausageFunctionLibrary_C_CalculateDetachmentForce) == 0x000008, "Wrong alignment on WestSausageFunctionLibrary_C_CalculateDetachmentForce");
static_assert(sizeof(WestSausageFunctionLibrary_C_CalculateDetachmentForce) == 0x000300, "Wrong size on WestSausageFunctionLibrary_C_CalculateDetachmentForce");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, PlayerPawn) == 0x000000, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::PlayerPawn' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, VectorToAttachPoint) == 0x000008, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::VectorToAttachPoint' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, Launch) == 0x000014, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::Launch' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, LaunchVector) == 0x000018, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::LaunchVector' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, __WorldContext) == 0x000028, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::__WorldContext' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, ReturnValue) == 0x000030, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, OverallMultiplier) == 0x000040, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::OverallMultiplier' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, MinZForceMultiplier) == 0x000068, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::MinZForceMultiplier' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, LaunchOverMaxForce) == 0x000090, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::LaunchOverMaxForce' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, LaunchOverMinForce) == 0x0000B8, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::LaunchOverMinForce' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, VecToAttachPoint_Dir) == 0x0000E0, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::VecToAttachPoint_Dir' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, VecToAttachPoint_Length) == 0x0000EC, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::VecToAttachPoint_Length' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Swinging_CheckGrounded_Grounded_) == 0x0000F0, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Swinging_CheckGrounded_Grounded_' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Swinging_CheckGrounded_HitNormal) == 0x0000F4, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Swinging_CheckGrounded_HitNormal' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Swinging_CheckGrounded_Distance) == 0x000100, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Swinging_CheckGrounded_Distance' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Add_VectorVector_ReturnValue) == 0x000104, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector2D_X) == 0x000110, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector2D_Y) == 0x000114, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector2D_X_1) == 0x000118, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector2D_Y_1) == 0x00011C, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000120, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000124, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000128, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector2D_X_2) == 0x00012C, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector2D_Y_2) == 0x000130, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000134, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000138, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_FClamp_ReturnValue) == 0x00013C, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, Temp_struct_Variable) == 0x000140, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_SelectFloat_ReturnValue) == 0x000148, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_FClamp_ReturnValue_1) == 0x00014C, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_SelectFloat_ReturnValue_1) == 0x000150, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_GetValueAtLevel_ReturnValue) == 0x000154, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000158, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000164, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_GetValueAtLevel_ReturnValue_2) == 0x000168, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_GetValueAtLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_GetValueAtLevel_ReturnValue_3) == 0x00016C, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_GetValueAtLevel_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Normal_ReturnValue) == 0x000170, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_VSize_ReturnValue) == 0x00017C, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, Temp_struct_Variable_1) == 0x000180, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_FClamp_ReturnValue_2) == 0x000188, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Conv_FloatToVector_ReturnValue_1) == 0x00018C, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Conv_FloatToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000198, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_FClamp_ReturnValue_3) == 0x0001A4, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector_X) == 0x0001A8, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector_Y) == 0x0001AC, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector_Z) == 0x0001B0, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Conv_FloatToVector_ReturnValue_2) == 0x0001B4, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Conv_FloatToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0001C0, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_FMax_ReturnValue) == 0x0001CC, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Conv_FloatToVector_ReturnValue_3) == 0x0001D0, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Conv_FloatToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, Temp_bool_Variable) == 0x0001DC, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0001E0, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Dot_VectorVector_ReturnValue) == 0x0001EC, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_VSize_ReturnValue_1) == 0x0001F0, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_FTrunc64_ReturnValue) == 0x0001F8, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_FTrunc64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Conv_FloatToVector_ReturnValue_4) == 0x000200, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Conv_FloatToVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Divide_VectorVector_ReturnValue) == 0x00020C, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Abs_ReturnValue) == 0x000218, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_FTrunc64_ReturnValue_1) == 0x000220, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_FTrunc64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Sqrt_ReturnValue) == 0x000228, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Divide_Int64Int64UsingFloatingPoint_ReturnValue) == 0x00022C, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Divide_Int64Int64UsingFloatingPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000230, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000234, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_GetAttachParentActor_ReturnValue) == 0x000238, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000240, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_IsValid_ReturnValue) == 0x000244, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_FClamp_ReturnValue_4) == 0x000248, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_SelectFloat_ReturnValue_2) == 0x00024C, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, K2Node_Select_Default) == 0x000250, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_FClamp_ReturnValue_5) == 0x000258, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector2D_X_3) == 0x00025C, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector2D_Y_3) == 0x000260, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_SelectFloat_ReturnValue_3) == 0x000264, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x000268, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00026C, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000270, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Add_FloatFloat_ReturnValue) == 0x000274, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000278, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Conv_FloatToVector_ReturnValue_5) == 0x00027C, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Conv_FloatToVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000288, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Conv_FloatToVector_ReturnValue_6) == 0x00028C, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Conv_FloatToVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000298, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x0002A4, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002B0, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector_X_1) == 0x0002BC, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector_Y_1) == 0x0002C0, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector_Z_1) == 0x0002C4, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_FMax_ReturnValue_1) == 0x0002C8, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_MakeVector_ReturnValue) == 0x0002CC, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x0002D8, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector_X_2) == 0x0002E4, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector_Y_2) == 0x0002E8, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BreakVector_Z_2) == 0x0002EC, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002F0, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_BooleanAND_ReturnValue) == 0x0002F1, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_CalculateDetachmentForce, CallFunc_SelectVector_ReturnValue) == 0x0002F4, "Member 'WestSausageFunctionLibrary_C_CalculateDetachmentForce::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function WestSausageFunctionLibrary.WestSausageFunctionLibrary_C.ShouldDetach
// 0x0050 (0x0050 - 0x0000)
struct WestSausageFunctionLibrary_C_ShouldDetach final
{
public:
	class APlayerPawn_Athena_C*                   PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Swinging_VectorToAttachPoint_ReturnValue; // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WestSausageFunctionLibrary_C_ShouldDetach) == 0x000008, "Wrong alignment on WestSausageFunctionLibrary_C_ShouldDetach");
static_assert(sizeof(WestSausageFunctionLibrary_C_ShouldDetach) == 0x000050, "Wrong size on WestSausageFunctionLibrary_C_ShouldDetach");
static_assert(offsetof(WestSausageFunctionLibrary_C_ShouldDetach, PlayerPawn) == 0x000000, "Member 'WestSausageFunctionLibrary_C_ShouldDetach::PlayerPawn' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_ShouldDetach, __WorldContext) == 0x000008, "Member 'WestSausageFunctionLibrary_C_ShouldDetach::__WorldContext' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_ShouldDetach, ReturnValue) == 0x000010, "Member 'WestSausageFunctionLibrary_C_ShouldDetach::ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_ShouldDetach, CallFunc_Swinging_VectorToAttachPoint_ReturnValue) == 0x000014, "Member 'WestSausageFunctionLibrary_C_ShouldDetach::CallFunc_Swinging_VectorToAttachPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_ShouldDetach, CallFunc_Normal_ReturnValue) == 0x000020, "Member 'WestSausageFunctionLibrary_C_ShouldDetach::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_ShouldDetach, CallFunc_Normal_ReturnValue_1) == 0x00002C, "Member 'WestSausageFunctionLibrary_C_ShouldDetach::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_ShouldDetach, CallFunc_VSize_ReturnValue) == 0x000038, "Member 'WestSausageFunctionLibrary_C_ShouldDetach::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_ShouldDetach, CallFunc_Dot_VectorVector_ReturnValue) == 0x00003C, "Member 'WestSausageFunctionLibrary_C_ShouldDetach::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_ShouldDetach, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000040, "Member 'WestSausageFunctionLibrary_C_ShouldDetach::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_ShouldDetach, CallFunc_Less_FloatFloat_ReturnValue) == 0x000041, "Member 'WestSausageFunctionLibrary_C_ShouldDetach::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_ShouldDetach, CallFunc_VSize_ReturnValue_1) == 0x000044, "Member 'WestSausageFunctionLibrary_C_ShouldDetach::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_ShouldDetach, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000048, "Member 'WestSausageFunctionLibrary_C_ShouldDetach::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_ShouldDetach, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'WestSausageFunctionLibrary_C_ShouldDetach::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_ShouldDetach, CallFunc_BooleanAND_ReturnValue_1) == 0x00004A, "Member 'WestSausageFunctionLibrary_C_ShouldDetach::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WestSausageFunctionLibrary.WestSausageFunctionLibrary_C.WestSausage_ShouldRotate
// 0x0010 (0x0010 - 0x0000)
struct WestSausageFunctionLibrary_C_WestSausage_ShouldRotate final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRotate;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WestSausageFunctionLibrary_C_WestSausage_ShouldRotate) == 0x000008, "Wrong alignment on WestSausageFunctionLibrary_C_WestSausage_ShouldRotate");
static_assert(sizeof(WestSausageFunctionLibrary_C_WestSausage_ShouldRotate) == 0x000010, "Wrong size on WestSausageFunctionLibrary_C_WestSausage_ShouldRotate");
static_assert(offsetof(WestSausageFunctionLibrary_C_WestSausage_ShouldRotate, __WorldContext) == 0x000000, "Member 'WestSausageFunctionLibrary_C_WestSausage_ShouldRotate::__WorldContext' has a wrong offset!");
static_assert(offsetof(WestSausageFunctionLibrary_C_WestSausage_ShouldRotate, ShouldRotate) == 0x000008, "Member 'WestSausageFunctionLibrary_C_WestSausage_ShouldRotate::ShouldRotate' has a wrong offset!");

}

