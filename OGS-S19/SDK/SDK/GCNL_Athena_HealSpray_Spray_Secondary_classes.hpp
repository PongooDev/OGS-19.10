#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Athena_HealSpray_Spray_Secondary

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCNL_Athena_HealSpray_Spray_Secondary.GCNL_Athena_HealSpray_Spray_Secondary_C
// 0x0050 (0x0858 - 0x0808)
class AGCNL_Athena_HealSpray_Spray_Secondary_C final : public AFortGameplayCueNotify_Loop
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0808(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Fade_Out_Duration;                                 // 0x0810(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_814[0x4];                                      // 0x0814(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        AudioComponent_SprayLoop_Heal;                     // 0x0818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Sound_SprayLoop_Heal;                              // 0x0820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Sound_SprayLoop_Heal_Stop;                         // 0x0828(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      SprayFX;                                           // 0x0830(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        Player_Pawn;                                       // 0x0838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              SpraySound3p;                                      // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              SpraySound1p;                                      // 0x0848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              SprayRemoval;                                      // 0x0850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCNL_Athena_HealSpray_Spray_Secondary(int32 EntryPoint);
	void Local_Ammo(int32 LocalCount, int32 LocalRemaining);
	void OnLoopingStartGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents);
	void OnRemovalGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UMatineeCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void ReceiveTick(float DeltaSeconds);
	void StartSprayAudio();
	void StopSprayAudio();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCNL_Athena_HealSpray_Spray_Secondary_C">();
	}
	static class AGCNL_Athena_HealSpray_Spray_Secondary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCNL_Athena_HealSpray_Spray_Secondary_C>();
	}
};
static_assert(alignof(AGCNL_Athena_HealSpray_Spray_Secondary_C) == 0x000008, "Wrong alignment on AGCNL_Athena_HealSpray_Spray_Secondary_C");
static_assert(sizeof(AGCNL_Athena_HealSpray_Spray_Secondary_C) == 0x000858, "Wrong size on AGCNL_Athena_HealSpray_Spray_Secondary_C");
static_assert(offsetof(AGCNL_Athena_HealSpray_Spray_Secondary_C, UberGraphFrame) == 0x000808, "Member 'AGCNL_Athena_HealSpray_Spray_Secondary_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_HealSpray_Spray_Secondary_C, Fade_Out_Duration) == 0x000810, "Member 'AGCNL_Athena_HealSpray_Spray_Secondary_C::Fade_Out_Duration' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_HealSpray_Spray_Secondary_C, AudioComponent_SprayLoop_Heal) == 0x000818, "Member 'AGCNL_Athena_HealSpray_Spray_Secondary_C::AudioComponent_SprayLoop_Heal' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_HealSpray_Spray_Secondary_C, Sound_SprayLoop_Heal) == 0x000820, "Member 'AGCNL_Athena_HealSpray_Spray_Secondary_C::Sound_SprayLoop_Heal' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_HealSpray_Spray_Secondary_C, Sound_SprayLoop_Heal_Stop) == 0x000828, "Member 'AGCNL_Athena_HealSpray_Spray_Secondary_C::Sound_SprayLoop_Heal_Stop' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_HealSpray_Spray_Secondary_C, SprayFX) == 0x000830, "Member 'AGCNL_Athena_HealSpray_Spray_Secondary_C::SprayFX' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_HealSpray_Spray_Secondary_C, Player_Pawn) == 0x000838, "Member 'AGCNL_Athena_HealSpray_Spray_Secondary_C::Player_Pawn' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_HealSpray_Spray_Secondary_C, SpraySound3p) == 0x000840, "Member 'AGCNL_Athena_HealSpray_Spray_Secondary_C::SpraySound3p' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_HealSpray_Spray_Secondary_C, SpraySound1p) == 0x000848, "Member 'AGCNL_Athena_HealSpray_Spray_Secondary_C::SpraySound1p' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_HealSpray_Spray_Secondary_C, SprayRemoval) == 0x000850, "Member 'AGCNL_Athena_HealSpray_Spray_Secondary_C::SprayRemoval' has a wrong offset!");

}

