#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCL_BigBush_Movement

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GCL_BigBush_Movement.GCL_BigBush_Movement_C.ExecuteUbergraph_GCL_BigBush_Movement
// 0x0220 (0x0220 - 0x0000)
struct GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget_1;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_1;                         // 0x0010(0x00C0)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents_1;                 // 0x00D0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents_1;                    // 0x00E0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UMatineeCameraShake*                    K2Node_Event_BurstCameraShakeInstance_1;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance_1;                 // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0108(0x00C0)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents;                   // 0x01C8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x01D8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UMatineeCameraShake*                    K2Node_Event_BurstCameraShakeInstance;             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance;                   // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement) == 0x000008, "Wrong alignment on GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement");
static_assert(sizeof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement) == 0x000220, "Wrong size on GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, EntryPoint) == 0x000000, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, Temp_bool_Variable) == 0x000004, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_Event_MyTarget_1) == 0x000008, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_Event_MyTarget_1' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_Event_Parameters_1) == 0x000010, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_Event_Parameters_1' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_Event_ParticleComponents_1) == 0x0000D0, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_Event_ParticleComponents_1' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_Event_AudioComponents_1) == 0x0000E0, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_Event_AudioComponents_1' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_Event_BurstCameraShakeInstance_1) == 0x0000F0, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_Event_BurstCameraShakeInstance_1' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_Event_BurstDecalInstance_1) == 0x0000F8, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_Event_BurstDecalInstance_1' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_Event_MyTarget) == 0x000100, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_Event_Parameters) == 0x000108, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_Event_ParticleComponents) == 0x0001C8, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_Event_AudioComponents) == 0x0001D8, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_Event_BurstCameraShakeInstance) == 0x0001E8, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_Event_BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_Event_BurstDecalInstance) == 0x0001F0, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_Event_BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001F8, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000208, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_DynamicCast_bSuccess) == 0x000210, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, CallFunc_IsLocallyControlled_ReturnValue) == 0x000211, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement, K2Node_Select_Default) == 0x000218, "Member 'GCL_BigBush_Movement_C_ExecuteUbergraph_GCL_BigBush_Movement::K2Node_Select_Default' has a wrong offset!");

// Function GCL_BigBush_Movement.GCL_BigBush_Movement_C.OnActive
// 0x00F0 (0x00F0 - 0x0000)
struct GCL_BigBush_Movement_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00CC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_BigBush_Movement_C_OnActive) == 0x000008, "Wrong alignment on GCL_BigBush_Movement_C_OnActive");
static_assert(sizeof(GCL_BigBush_Movement_C_OnActive) == 0x0000F0, "Wrong size on GCL_BigBush_Movement_C_OnActive");
static_assert(offsetof(GCL_BigBush_Movement_C_OnActive, MyTarget) == 0x000000, "Member 'GCL_BigBush_Movement_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnActive, Parameters) == 0x000008, "Member 'GCL_BigBush_Movement_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnActive, ReturnValue) == 0x0000C8, "Member 'GCL_BigBush_Movement_C_OnActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnActive, K2Node_CreateDelegate_OutputDelegate) == 0x0000CC, "Member 'GCL_BigBush_Movement_C_OnActive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnActive, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x0000E0, "Member 'GCL_BigBush_Movement_C_OnActive::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnActive, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'GCL_BigBush_Movement_C_OnActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GCL_BigBush_Movement.GCL_BigBush_Movement_C.OnApplication
// 0x00F8 (0x00F8 - 0x0000)
struct GCL_BigBush_Movement_C_OnApplication final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00C8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UMatineeCameraShake*                    BurstCameraShakeInstance;                          // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x00F0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_BigBush_Movement_C_OnApplication) == 0x000008, "Wrong alignment on GCL_BigBush_Movement_C_OnApplication");
static_assert(sizeof(GCL_BigBush_Movement_C_OnApplication) == 0x0000F8, "Wrong size on GCL_BigBush_Movement_C_OnApplication");
static_assert(offsetof(GCL_BigBush_Movement_C_OnApplication, MyTarget) == 0x000000, "Member 'GCL_BigBush_Movement_C_OnApplication::MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnApplication, Parameters) == 0x000008, "Member 'GCL_BigBush_Movement_C_OnApplication::Parameters' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnApplication, ParticleComponents) == 0x0000C8, "Member 'GCL_BigBush_Movement_C_OnApplication::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnApplication, AudioComponents) == 0x0000D8, "Member 'GCL_BigBush_Movement_C_OnApplication::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnApplication, BurstCameraShakeInstance) == 0x0000E8, "Member 'GCL_BigBush_Movement_C_OnApplication::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnApplication, BurstDecalInstance) == 0x0000F0, "Member 'GCL_BigBush_Movement_C_OnApplication::BurstDecalInstance' has a wrong offset!");

// Function GCL_BigBush_Movement.GCL_BigBush_Movement_C.OnRemoval
// 0x00F8 (0x00F8 - 0x0000)
struct GCL_BigBush_Movement_C_OnRemoval final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00C8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UMatineeCameraShake*                    BurstCameraShakeInstance;                          // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x00F0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_BigBush_Movement_C_OnRemoval) == 0x000008, "Wrong alignment on GCL_BigBush_Movement_C_OnRemoval");
static_assert(sizeof(GCL_BigBush_Movement_C_OnRemoval) == 0x0000F8, "Wrong size on GCL_BigBush_Movement_C_OnRemoval");
static_assert(offsetof(GCL_BigBush_Movement_C_OnRemoval, MyTarget) == 0x000000, "Member 'GCL_BigBush_Movement_C_OnRemoval::MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnRemoval, Parameters) == 0x000008, "Member 'GCL_BigBush_Movement_C_OnRemoval::Parameters' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnRemoval, ParticleComponents) == 0x0000C8, "Member 'GCL_BigBush_Movement_C_OnRemoval::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnRemoval, AudioComponents) == 0x0000D8, "Member 'GCL_BigBush_Movement_C_OnRemoval::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnRemoval, BurstCameraShakeInstance) == 0x0000E8, "Member 'GCL_BigBush_Movement_C_OnRemoval::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnRemoval, BurstDecalInstance) == 0x0000F0, "Member 'GCL_BigBush_Movement_C_OnRemoval::BurstDecalInstance' has a wrong offset!");

// Function GCL_BigBush_Movement.GCL_BigBush_Movement_C.OnRemove
// 0x00F0 (0x00F0 - 0x0000)
struct GCL_BigBush_Movement_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00CC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_BigBush_Movement_C_OnRemove) == 0x000008, "Wrong alignment on GCL_BigBush_Movement_C_OnRemove");
static_assert(sizeof(GCL_BigBush_Movement_C_OnRemove) == 0x0000F0, "Wrong size on GCL_BigBush_Movement_C_OnRemove");
static_assert(offsetof(GCL_BigBush_Movement_C_OnRemove, MyTarget) == 0x000000, "Member 'GCL_BigBush_Movement_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnRemove, Parameters) == 0x000008, "Member 'GCL_BigBush_Movement_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnRemove, ReturnValue) == 0x0000C8, "Member 'GCL_BigBush_Movement_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnRemove, K2Node_CreateDelegate_OutputDelegate) == 0x0000CC, "Member 'GCL_BigBush_Movement_C_OnRemove::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnRemove, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x0000E0, "Member 'GCL_BigBush_Movement_C_OnRemove::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnRemove, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'GCL_BigBush_Movement_C_OnRemove::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_OnRemove, CallFunc_IsValid_ReturnValue) == 0x0000E9, "Member 'GCL_BigBush_Movement_C_OnRemove::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GCL_BigBush_Movement.GCL_BigBush_Movement_C.WhileActive
// 0x00E0 (0x00E0 - 0x0000)
struct GCL_BigBush_Movement_C_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_BigBush_Movement_C_WhileActive) == 0x000008, "Wrong alignment on GCL_BigBush_Movement_C_WhileActive");
static_assert(sizeof(GCL_BigBush_Movement_C_WhileActive) == 0x0000E0, "Wrong size on GCL_BigBush_Movement_C_WhileActive");
static_assert(offsetof(GCL_BigBush_Movement_C_WhileActive, MyTarget) == 0x000000, "Member 'GCL_BigBush_Movement_C_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_WhileActive, Parameters) == 0x000008, "Member 'GCL_BigBush_Movement_C_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_WhileActive, ReturnValue) == 0x0000C8, "Member 'GCL_BigBush_Movement_C_WhileActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_WhileActive, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0000D0, "Member 'GCL_BigBush_Movement_C_WhileActive::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GCL_BigBush_Movement_C_WhileActive, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'GCL_BigBush_Movement_C_WhileActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

