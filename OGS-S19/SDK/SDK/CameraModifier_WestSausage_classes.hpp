#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CameraModifier_WestSausage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CameraModifier_WestSausage.CameraModifier_WestSausage_C
// 0x0140 (0x0188 - 0x0048)
class UCameraModifier_WestSausage_C final : public UCameraModifier
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0048(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         RightOffset;                                       // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightOffset;                                      // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Interp_Speed;                                      // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendInOutSeconds;                                 // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForwardAlpha;                                      // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BlendIn;                                           // 0x0064(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AdditionalFOV;                                     // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentFOV;                                        // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForwardOffset;                                     // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightAlpha;                                       // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Right_Alpha;                                       // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Boosting;                                          // 0x007C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BoostedStartTime;                                  // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoostAmount_Time;                                  // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   Player;                                            // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve;                                             // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdditionalForward;                                 // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoostTime;                                         // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LastAttachedState;                                 // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BoostAmount_Magnitude;                             // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverallAlpha;                                      // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          On;                                                // 0x00AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time;                                              // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendInTime;                                       // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            BlendInCurve;                                      // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOutTime;                                      // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            BlendOutCurve;                                     // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StoredVelocity;                                    // 0x00D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxVelocityDeltaPerSecond;                         // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Ranged_WestSausage_Parallel_Athena_C* Weapon;                                            // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         UpMult;                                            // 0x00E8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         RightMult;                                         // 0x0110(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ForwardMult;                                       // 0x0138(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ForwardBoostMult;                                  // 0x0160(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BlueprintModifyCamera(float DeltaTime, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, float FOV, struct FVector* NewViewLocation, struct FRotator* NewViewRotation, float* NewFOV);
	void CameraBoost(float BoostAmount_Time_0, float BoostAmount_Magnitude_0);
	void ExecuteUbergraph_CameraModifier_WestSausage(int32 EntryPoint);
	void Turn_On();
	void TurnOff();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CameraModifier_WestSausage_C">();
	}
	static class UCameraModifier_WestSausage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraModifier_WestSausage_C>();
	}
};
static_assert(alignof(UCameraModifier_WestSausage_C) == 0x000008, "Wrong alignment on UCameraModifier_WestSausage_C");
static_assert(sizeof(UCameraModifier_WestSausage_C) == 0x000188, "Wrong size on UCameraModifier_WestSausage_C");
static_assert(offsetof(UCameraModifier_WestSausage_C, UberGraphFrame) == 0x000048, "Member 'UCameraModifier_WestSausage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, RightOffset) == 0x000050, "Member 'UCameraModifier_WestSausage_C::RightOffset' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, HeightOffset) == 0x000054, "Member 'UCameraModifier_WestSausage_C::HeightOffset' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, Interp_Speed) == 0x000058, "Member 'UCameraModifier_WestSausage_C::Interp_Speed' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, BlendInOutSeconds) == 0x00005C, "Member 'UCameraModifier_WestSausage_C::BlendInOutSeconds' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, ForwardAlpha) == 0x000060, "Member 'UCameraModifier_WestSausage_C::ForwardAlpha' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, BlendIn) == 0x000064, "Member 'UCameraModifier_WestSausage_C::BlendIn' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, AdditionalFOV) == 0x000068, "Member 'UCameraModifier_WestSausage_C::AdditionalFOV' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, CurrentFOV) == 0x00006C, "Member 'UCameraModifier_WestSausage_C::CurrentFOV' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, ForwardOffset) == 0x000070, "Member 'UCameraModifier_WestSausage_C::ForwardOffset' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, HeightAlpha) == 0x000074, "Member 'UCameraModifier_WestSausage_C::HeightAlpha' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, Right_Alpha) == 0x000078, "Member 'UCameraModifier_WestSausage_C::Right_Alpha' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, Boosting) == 0x00007C, "Member 'UCameraModifier_WestSausage_C::Boosting' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, BoostedStartTime) == 0x000080, "Member 'UCameraModifier_WestSausage_C::BoostedStartTime' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, BoostAmount_Time) == 0x000084, "Member 'UCameraModifier_WestSausage_C::BoostAmount_Time' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, Player) == 0x000088, "Member 'UCameraModifier_WestSausage_C::Player' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, Curve) == 0x000090, "Member 'UCameraModifier_WestSausage_C::Curve' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, AdditionalForward) == 0x000098, "Member 'UCameraModifier_WestSausage_C::AdditionalForward' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, BoostTime) == 0x00009C, "Member 'UCameraModifier_WestSausage_C::BoostTime' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, LastAttachedState) == 0x0000A0, "Member 'UCameraModifier_WestSausage_C::LastAttachedState' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, BoostAmount_Magnitude) == 0x0000A4, "Member 'UCameraModifier_WestSausage_C::BoostAmount_Magnitude' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, OverallAlpha) == 0x0000A8, "Member 'UCameraModifier_WestSausage_C::OverallAlpha' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, On) == 0x0000AC, "Member 'UCameraModifier_WestSausage_C::On' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, Time) == 0x0000B0, "Member 'UCameraModifier_WestSausage_C::Time' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, BlendInTime) == 0x0000B4, "Member 'UCameraModifier_WestSausage_C::BlendInTime' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, BlendInCurve) == 0x0000B8, "Member 'UCameraModifier_WestSausage_C::BlendInCurve' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, BlendOutTime) == 0x0000C0, "Member 'UCameraModifier_WestSausage_C::BlendOutTime' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, BlendOutCurve) == 0x0000C8, "Member 'UCameraModifier_WestSausage_C::BlendOutCurve' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, StoredVelocity) == 0x0000D0, "Member 'UCameraModifier_WestSausage_C::StoredVelocity' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, MaxVelocityDeltaPerSecond) == 0x0000DC, "Member 'UCameraModifier_WestSausage_C::MaxVelocityDeltaPerSecond' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, Weapon) == 0x0000E0, "Member 'UCameraModifier_WestSausage_C::Weapon' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, UpMult) == 0x0000E8, "Member 'UCameraModifier_WestSausage_C::UpMult' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, RightMult) == 0x000110, "Member 'UCameraModifier_WestSausage_C::RightMult' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, ForwardMult) == 0x000138, "Member 'UCameraModifier_WestSausage_C::ForwardMult' has a wrong offset!");
static_assert(offsetof(UCameraModifier_WestSausage_C, ForwardBoostMult) == 0x000160, "Member 'UCameraModifier_WestSausage_C::ForwardBoostMult' has a wrong offset!");

}

