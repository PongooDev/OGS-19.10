#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_ValetMod_OffRoadTire

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_Prj_ValetMod_OffRoadTire.B_Prj_ValetMod_OffRoadTire_C.BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature final
{
public:
	class AFortWaterBodyActor*                    WaterBody;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWaterInteractionComponent*         WaterInteractionComponent_0;                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFirstBody;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature) == 0x000008, "Wrong alignment on B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature");
static_assert(sizeof(B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature) == 0x000018, "Wrong size on B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature, WaterBody) == 0x000000, "Member 'B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature::WaterBody' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature, WaterInteractionComponent_0) == 0x000008, "Member 'B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature::WaterInteractionComponent_0' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature, bIsFirstBody) == 0x000010, "Member 'B_Prj_ValetMod_OffRoadTire_C_BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature::bIsFirstBody' has a wrong offset!");

// Function B_Prj_ValetMod_OffRoadTire.B_Prj_ValetMod_OffRoadTire_C.CalculateLaunchVelocity
// 0x0078 (0x0078 - 0x0000)
struct B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity final
{
public:
	class AFortPawn*                              PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity) == 0x000008, "Wrong alignment on B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity");
static_assert(sizeof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity) == 0x000078, "Wrong size on B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, PlayerPawn) == 0x000000, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::PlayerPawn' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, ReturnValue) == 0x000008, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_GetValueAtLevel_ReturnValue) == 0x000020, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000024, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000030, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_Normal_ReturnValue) == 0x000044, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000050, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_BreakVector_X) == 0x00005C, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_BreakVector_Y) == 0x000060, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_BreakVector_Z) == 0x000064, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'B_Prj_ValetMod_OffRoadTire_C_CalculateLaunchVelocity::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function B_Prj_ValetMod_OffRoadTire.B_Prj_ValetMod_OffRoadTire_C.ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire
// 0x0380 (0x0380 - 0x0000)
struct B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit_1;                                // 0x0008(0x009C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x00E8(0x009C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_186[0x2];                                      // 0x0186(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_ValetMod_OffRoadTire_Pickup_C*     K2Node_DynamicCast_AsBGA_Valet_Mod_Off_Road_Tire_Pickup; // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDBNO_ReturnValue;                       // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateLaunchVelocity_ReturnValue;      // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInVehicle_ReturnValue_1;                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Prj_ValetMod_OffRoadTire_C*          K2Node_DynamicCast_AsB_Prj_Valet_Mod_Off_Road_Tire; // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaVehicle*                     K2Node_DynamicCast_AsFort_Athena_Vehicle;          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldApplyMod_ReturnValue;               // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_CanApplyMod_self_CastInput;               // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanApplyMod_ReturnValue;                  // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BB[0x5];                                      // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue;               // 0x02E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetValueAsBool_ReturnValue_1;             // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E6[0x2];                                      // 0x02E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetOwnerPlayerController_ReturnValue;     // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IFortVehicleInterface> CallFunc_ApplyTireMod_self_CastInput;              // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x030C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0320(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AFortWaterBodyActor*                    K2Node_ComponentBoundEvent_WaterBody;              // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWaterInteractionComponent*         K2Node_ComponentBoundEvent_WaterInteractionComponent; // 0x0330(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsFirstBody;           // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPickup*                            CallFunc_K2_SpawnPickupInWorld_ReturnValue;        // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInWater_ReturnValue;                    // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A[0x6];                                      // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemComponent*                     CallFunc_SpawnFXAtLocation_ReturnValue;            // 0x0350(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPickup*                            CallFunc_K2_SpawnPickupInWorld_ReturnValue_1;      // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372[0x2];                                      // 0x0372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire) == 0x000008, "Wrong alignment on B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire");
static_assert(sizeof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire) == 0x000380, "Wrong size on B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, EntryPoint) == 0x000000, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_Hit_1) == 0x000008, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_Hit_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_MyComp) == 0x0000A8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_Other) == 0x0000B0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_OtherComp) == 0x0000B8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_bSelfMoved) == 0x0000C0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_HitLocation) == 0x0000C4, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_HitNormal) == 0x0000D0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_NormalImpulse) == 0x0000DC, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_Event_Hit) == 0x0000E8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_bBlockingHit) == 0x000184, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_bInitialOverlap) == 0x000185, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_Time) == 0x000188, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_Distance) == 0x00018C, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_Location) == 0x000190, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_ImpactPoint) == 0x00019C, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_Normal) == 0x0001A8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B4, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_PhysMat) == 0x0001C0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_HitActor) == 0x0001C8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_HitComponent) == 0x0001D0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_HitBoneName) == 0x0001D8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_BoneName) == 0x0001E0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_HitItem) == 0x0001E8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_ElementIndex) == 0x0001EC, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_FaceIndex) == 0x0001F0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_TraceStart) == 0x0001F4, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BreakHitResult_TraceEnd) == 0x000200, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsBGA_Valet_Mod_Off_Road_Tire_Pickup) == 0x000210, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsBGA_Valet_Mod_Off_Road_Tire_Pickup' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000220, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_1) == 0x000228, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsFort_Pawn) == 0x000230, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_2) == 0x000238, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsDBNO_ReturnValue) == 0x000239, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsDBNO_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000240, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000250, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000258, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_3) == 0x000260, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x000268, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_4) == 0x000270, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsValid_ReturnValue) == 0x000271, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsInVehicle_ReturnValue) == 0x000272, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsValid_ReturnValue_1) == 0x000273, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_CalculateLaunchVelocity_ReturnValue) == 0x000274, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_CalculateLaunchVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsInVehicle_ReturnValue_1) == 0x000280, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsInVehicle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsB_Prj_Valet_Mod_Off_Road_Tire) == 0x000288, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsB_Prj_Valet_Mod_Off_Road_Tire' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_5) == 0x000290, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_BooleanOR_ReturnValue) == 0x000291, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsFort_Athena_Vehicle) == 0x000298, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsFort_Athena_Vehicle' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_6) == 0x0002A0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_ShouldApplyMod_ReturnValue) == 0x0002A1, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_ShouldApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_CanApplyMod_self_CastInput) == 0x0002A8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_CanApplyMod_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_CanApplyMod_ReturnValue) == 0x0002B8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_CanApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, Temp_bool_Has_Been_Initd_Variable_1) == 0x0002B9, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, Temp_bool_IsClosed_Variable_1) == 0x0002BA, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetOwner_ReturnValue) == 0x0002C0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_AsPawn) == 0x0002C8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_DynamicCast_bSuccess_7) == 0x0002D0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_OnSameTeam_ReturnValue) == 0x0002D1, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetController_ReturnValue) == 0x0002D8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsValid_ReturnValue_2) == 0x0002E0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsValid_ReturnValue_3) == 0x0002E1, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsServer_ReturnValue) == 0x0002E2, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetValueAsBool_ReturnValue) == 0x0002E3, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetValueAsBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, Temp_bool_Has_Been_Initd_Variable_2) == 0x0002E4, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetValueAsBool_ReturnValue_1) == 0x0002E5, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetValueAsBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetOwnerPlayerController_ReturnValue) == 0x0002E8, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetOwnerPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_ApplyTireMod_self_CastInput) == 0x0002F0, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_ApplyTireMod_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000300, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_CreateDelegate_OutputDelegate) == 0x00030C, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000320, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_ComponentBoundEvent_WaterBody) == 0x000328, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_ComponentBoundEvent_WaterBody' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_ComponentBoundEvent_WaterInteractionComponent) == 0x000330, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_ComponentBoundEvent_WaterInteractionComponent' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, K2Node_ComponentBoundEvent_bIsFirstBody) == 0x000338, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::K2Node_ComponentBoundEvent_bIsFirstBody' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_K2_SpawnPickupInWorld_ReturnValue) == 0x000340, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_K2_SpawnPickupInWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsInWater_ReturnValue) == 0x000348, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsInWater_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, Temp_bool_IsClosed_Variable_2) == 0x000349, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_SpawnFXAtLocation_ReturnValue) == 0x000350, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_SpawnFXAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000358, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_K2_SpawnPickupInWorld_ReturnValue_1) == 0x000368, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_K2_SpawnPickupInWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_IsServer_ReturnValue_1) == 0x000370, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000371, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_GetValueAtLevel_ReturnValue) == 0x000374, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000378, "Member 'B_Prj_ValetMod_OffRoadTire_C_ExecuteUbergraph_B_Prj_ValetMod_OffRoadTire::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function B_Prj_ValetMod_OffRoadTire.B_Prj_ValetMod_OffRoadTire_C.OnStop
// 0x009C (0x009C - 0x0000)
struct B_Prj_ValetMod_OffRoadTire_C_OnStop final
{
public:
	struct FHitResult                             Hit_0;                                             // 0x0000(0x009C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_ValetMod_OffRoadTire_C_OnStop) == 0x000004, "Wrong alignment on B_Prj_ValetMod_OffRoadTire_C_OnStop");
static_assert(sizeof(B_Prj_ValetMod_OffRoadTire_C_OnStop) == 0x00009C, "Wrong size on B_Prj_ValetMod_OffRoadTire_C_OnStop");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_OnStop, Hit_0) == 0x000000, "Member 'B_Prj_ValetMod_OffRoadTire_C_OnStop::Hit_0' has a wrong offset!");

// Function B_Prj_ValetMod_OffRoadTire.B_Prj_ValetMod_OffRoadTire_C.ReceiveHit
// 0x00E0 (0x00E0 - 0x0000)
struct B_Prj_ValetMod_OffRoadTire_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit_0;                                             // 0x0040(0x009C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit) == 0x000008, "Wrong alignment on B_Prj_ValetMod_OffRoadTire_C_ReceiveHit");
static_assert(sizeof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit) == 0x0000E0, "Wrong size on B_Prj_ValetMod_OffRoadTire_C_ReceiveHit");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, MyComp) == 0x000000, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, Other) == 0x000008, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, OtherComp) == 0x000010, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, HitNormal) == 0x000028, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ReceiveHit, Hit_0) == 0x000040, "Member 'B_Prj_ValetMod_OffRoadTire_C_ReceiveHit::Hit_0' has a wrong offset!");

// Function B_Prj_ValetMod_OffRoadTire.B_Prj_ValetMod_OffRoadTire_C.ShouldApplyMod
// 0x0070 (0x0070 - 0x0000)
struct B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod final
{
public:
	class AFortAthenaVehicle*                     Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_HasTireMod_self_CastInput;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTireMod_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_GetHealth_self_CastInput;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_IsInoperable_self_CastInput;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInoperable_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_AreAnyTiresPopped_self_CastInput;         // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreAnyTiresPopped_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod) == 0x000008, "Wrong alignment on B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod");
static_assert(sizeof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod) == 0x000070, "Wrong size on B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, Vehicle) == 0x000000, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::Vehicle' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, ReturnValue) == 0x000008, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_HasTireMod_self_CastInput) == 0x000010, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_HasTireMod_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_HasTireMod_ReturnValue) == 0x000020, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_HasTireMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_GetHealth_self_CastInput) == 0x000028, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_GetHealth_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_GetHealth_ReturnValue) == 0x000038, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_IsInoperable_self_CastInput) == 0x000040, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_IsInoperable_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_IsInoperable_ReturnValue) == 0x000050, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_IsInoperable_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000051, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_AreAnyTiresPopped_self_CastInput) == 0x000058, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_AreAnyTiresPopped_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_AreAnyTiresPopped_ReturnValue) == 0x000068, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_AreAnyTiresPopped_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_BooleanOR_ReturnValue) == 0x00006B, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_BooleanOR_ReturnValue_1) == 0x00006C, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod, CallFunc_Not_PreBool_ReturnValue_1) == 0x00006D, "Member 'B_Prj_ValetMod_OffRoadTire_C_ShouldApplyMod::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

}

