#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_WestSausage_Swinging

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GCNL_WestSausage_Swinging.GCNL_WestSausage_Swinging_C.AudioInit
// 0x0058 (0x0058 - 0x0000)
struct GCNL_WestSausage_Swinging_C_AudioInit final
{
public:
	class AActor*                                 GC_Target;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortTeamAffiliation                          CallFunc_GetTeamAffiliationForActorToLocalPlayer_ReturnValue; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterInterface> CallFunc_SetBoolParameter_self_CastInput;          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterInterface> CallFunc_SetBoolParameter_self_CastInput_1;        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_WestSausage_Swinging_C_AudioInit) == 0x000008, "Wrong alignment on GCNL_WestSausage_Swinging_C_AudioInit");
static_assert(sizeof(GCNL_WestSausage_Swinging_C_AudioInit) == 0x000058, "Wrong size on GCNL_WestSausage_Swinging_C_AudioInit");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_AudioInit, GC_Target) == 0x000000, "Member 'GCNL_WestSausage_Swinging_C_AudioInit::GC_Target' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_AudioInit, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x000008, "Member 'GCNL_WestSausage_Swinging_C_AudioInit::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_AudioInit, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GCNL_WestSausage_Swinging_C_AudioInit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_AudioInit, CallFunc_GetTeamAffiliationForActorToLocalPlayer_ReturnValue) == 0x000011, "Member 'GCNL_WestSausage_Swinging_C_AudioInit::CallFunc_GetTeamAffiliationForActorToLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_AudioInit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'GCNL_WestSausage_Swinging_C_AudioInit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_AudioInit, CallFunc_IsLocallyViewed_ReturnValue) == 0x000013, "Member 'GCNL_WestSausage_Swinging_C_AudioInit::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_AudioInit, CallFunc_SetBoolParameter_self_CastInput) == 0x000018, "Member 'GCNL_WestSausage_Swinging_C_AudioInit::CallFunc_SetBoolParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_AudioInit, CallFunc_SetBoolParameter_self_CastInput_1) == 0x000028, "Member 'GCNL_WestSausage_Swinging_C_AudioInit::CallFunc_SetBoolParameter_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_AudioInit, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'GCNL_WestSausage_Swinging_C_AudioInit::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_AudioInit, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000048, "Member 'GCNL_WestSausage_Swinging_C_AudioInit::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_AudioInit, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000050, "Member 'GCNL_WestSausage_Swinging_C_AudioInit::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function GCNL_WestSausage_Swinging.GCNL_WestSausage_Swinging_C.AudioUninit
// 0x0010 (0x0010 - 0x0000)
struct GCNL_WestSausage_Swinging_C_AudioUninit final
{
public:
	TDelegate<void(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(GCNL_WestSausage_Swinging_C_AudioUninit) == 0x000004, "Wrong alignment on GCNL_WestSausage_Swinging_C_AudioUninit");
static_assert(sizeof(GCNL_WestSausage_Swinging_C_AudioUninit) == 0x000010, "Wrong size on GCNL_WestSausage_Swinging_C_AudioUninit");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_AudioUninit, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'GCNL_WestSausage_Swinging_C_AudioUninit::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function GCNL_WestSausage_Swinging.GCNL_WestSausage_Swinging_C.ExecuteUbergraph_GCNL_WestSausage_Swinging
// 0x0220 (0x0220 - 0x0000)
struct GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget_1;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_1;                         // 0x0010(0x00C0)(ConstParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             K2Node_Event_ParticleComponents_1;                 // 0x00D0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents_1;                    // 0x00E0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x00F8(0x00C0)(ConstParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             K2Node_Event_ParticleComponents;                   // 0x01B8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x01C8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UMatineeCameraShake*                    K2Node_Event_BurstCameraShakeInstance;             // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance;                   // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena_1;         // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            CallFunc_GetCurrentWeapon_ReturnValue_1;           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging) == 0x000008, "Wrong alignment on GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging");
static_assert(sizeof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging) == 0x000220, "Wrong size on GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, EntryPoint) == 0x000000, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, K2Node_Event_MyTarget_1) == 0x000008, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::K2Node_Event_MyTarget_1' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, K2Node_Event_Parameters_1) == 0x000010, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::K2Node_Event_Parameters_1' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, K2Node_Event_ParticleComponents_1) == 0x0000D0, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::K2Node_Event_ParticleComponents_1' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, K2Node_Event_AudioComponents_1) == 0x0000E0, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::K2Node_Event_AudioComponents_1' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, K2Node_Event_MyTarget) == 0x0000F0, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, K2Node_Event_Parameters) == 0x0000F8, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, K2Node_Event_ParticleComponents) == 0x0001B8, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, K2Node_Event_AudioComponents) == 0x0001C8, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, K2Node_Event_BurstCameraShakeInstance) == 0x0001D8, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::K2Node_Event_BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, K2Node_Event_BurstDecalInstance) == 0x0001E0, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::K2Node_Event_BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x0001E8, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, K2Node_DynamicCast_AsPlayer_Pawn_Athena_1) == 0x0001F8, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::K2Node_DynamicCast_AsPlayer_Pawn_Athena_1' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, K2Node_DynamicCast_bSuccess_1) == 0x000200, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000204, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000210, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging, CallFunc_GetCurrentWeapon_ReturnValue_1) == 0x000218, "Member 'GCNL_WestSausage_Swinging_C_ExecuteUbergraph_GCNL_WestSausage_Swinging::CallFunc_GetCurrentWeapon_ReturnValue_1' has a wrong offset!");

// Function GCNL_WestSausage_Swinging.GCNL_WestSausage_Swinging_C.OnLoopingStartGeneric
// 0x00E8 (0x00E8 - 0x0000)
struct GCNL_WestSausage_Swinging_C_OnLoopingStartGeneric final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             ParticleComponents;                                // 0x00C8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCNL_WestSausage_Swinging_C_OnLoopingStartGeneric) == 0x000008, "Wrong alignment on GCNL_WestSausage_Swinging_C_OnLoopingStartGeneric");
static_assert(sizeof(GCNL_WestSausage_Swinging_C_OnLoopingStartGeneric) == 0x0000E8, "Wrong size on GCNL_WestSausage_Swinging_C_OnLoopingStartGeneric");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnLoopingStartGeneric, MyTarget) == 0x000000, "Member 'GCNL_WestSausage_Swinging_C_OnLoopingStartGeneric::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnLoopingStartGeneric, Parameters) == 0x000008, "Member 'GCNL_WestSausage_Swinging_C_OnLoopingStartGeneric::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnLoopingStartGeneric, ParticleComponents) == 0x0000C8, "Member 'GCNL_WestSausage_Swinging_C_OnLoopingStartGeneric::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnLoopingStartGeneric, AudioComponents) == 0x0000D8, "Member 'GCNL_WestSausage_Swinging_C_OnLoopingStartGeneric::AudioComponents' has a wrong offset!");

// Function GCNL_WestSausage_Swinging.GCNL_WestSausage_Swinging_C.OnRemovalGeneric
// 0x00F8 (0x00F8 - 0x0000)
struct GCNL_WestSausage_Swinging_C_OnRemovalGeneric final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UFXSystemComponent*>             ParticleComponents;                                // 0x00C8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UMatineeCameraShake*                    BurstCameraShakeInstance;                          // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x00F0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_WestSausage_Swinging_C_OnRemovalGeneric) == 0x000008, "Wrong alignment on GCNL_WestSausage_Swinging_C_OnRemovalGeneric");
static_assert(sizeof(GCNL_WestSausage_Swinging_C_OnRemovalGeneric) == 0x0000F8, "Wrong size on GCNL_WestSausage_Swinging_C_OnRemovalGeneric");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnRemovalGeneric, MyTarget) == 0x000000, "Member 'GCNL_WestSausage_Swinging_C_OnRemovalGeneric::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnRemovalGeneric, Parameters) == 0x000008, "Member 'GCNL_WestSausage_Swinging_C_OnRemovalGeneric::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnRemovalGeneric, ParticleComponents) == 0x0000C8, "Member 'GCNL_WestSausage_Swinging_C_OnRemovalGeneric::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnRemovalGeneric, AudioComponents) == 0x0000D8, "Member 'GCNL_WestSausage_Swinging_C_OnRemovalGeneric::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnRemovalGeneric, BurstCameraShakeInstance) == 0x0000E8, "Member 'GCNL_WestSausage_Swinging_C_OnRemovalGeneric::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnRemovalGeneric, BurstDecalInstance) == 0x0000F0, "Member 'GCNL_WestSausage_Swinging_C_OnRemovalGeneric::BurstDecalInstance' has a wrong offset!");

// Function GCNL_WestSausage_Swinging.GCNL_WestSausage_Swinging_C.OnTargetPawnActorHit
// 0x00D8 (0x00D8 - 0x0000)
struct GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit final
{
public:
	class AActor*                                 SelfActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x001C(0x009C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSwingAttached_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnCollision_OutResult;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_OnCollision_OutMagnitude;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit) == 0x000008, "Wrong alignment on GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit");
static_assert(sizeof(GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit) == 0x0000D8, "Wrong size on GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit, SelfActor) == 0x000000, "Member 'GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit::SelfActor' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit, OtherActor) == 0x000008, "Member 'GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit::OtherActor' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit, NormalImpulse) == 0x000010, "Member 'GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit, Hit) == 0x00001C, "Member 'GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit::Hit' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit, CallFunc_GetVelocity_ReturnValue) == 0x0000C4, "Member 'GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit, CallFunc_GetIsSwingAttached_ReturnValue) == 0x0000D0, "Member 'GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit::CallFunc_GetIsSwingAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit, CallFunc_OnCollision_OutResult) == 0x0000D1, "Member 'GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit::CallFunc_OnCollision_OutResult' has a wrong offset!");
static_assert(offsetof(GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit, CallFunc_OnCollision_OutMagnitude) == 0x0000D4, "Member 'GCNL_WestSausage_Swinging_C_OnTargetPawnActorHit::CallFunc_OnCollision_OutMagnitude' has a wrong offset!");

}

