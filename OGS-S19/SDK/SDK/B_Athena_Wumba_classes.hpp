#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Athena_Wumba

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Athena_Wumba.B_Athena_Wumba_C
// 0x03E0 (0x1270 - 0x0E90)
class AB_Athena_Wumba_C final : public ABuildingItemWeaponUpgradeActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E90(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Search_Sound_Loop;                                 // 0x0E98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortLinkToActorComponent*              FortLinkToActor;                                   // 0x0EA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   EditorOnly_MeshPreview;                            // 0x0EA8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CylinderDistance;                                  // 0x0EB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereDetail;                                      // 0x0EB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       UI_InteractionPoint_Sidegrade;                     // 0x0EC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       UI_InteractionPoint_Upgrade;                       // 0x0EC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWumba_ItemCostComponent_Horizontal_C*  Wumba_ItemCostComponent_Horizontal;                // 0x0ED0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TableCollision;                                    // 0x0ED8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PostCollision;                                     // 0x0EE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TopCollision;                                      // 0x0EE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BaseCollision;                                     // 0x0EF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_UpgradeFX;                                       // 0x0EF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_TableLightIdle;                                  // 0x0F00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Destroyed;                                       // 0x0F08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Flashing_Light_Sound_Loop;                         // 0x0F10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_LootTiered_Athena_FloorLoot_01;                  // 0x0F18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Wumba;                                          // 0x0F20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWumba_ItemCostComponent_C*             Wumba_ItemCostComponent;                           // 0x0F28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                ForceFeedbackFail;                                 // 0x0F30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                ForceFeedbackSuccess;                              // 0x0F38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        VendingMachine_Ambient;                            // 0x0F40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0F48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Light_F9C064A347D6CF3499CF96B51F1F7AF8; // 0x0F50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_F9C064A347D6CF3499CF96B51F1F7AF8; // 0x0F54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F55[0x3];                                      // 0x0F55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x0F58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MonitorMat;                                        // 0x0F60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MetalMat;                                          // 0x0F68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCaptureCount;                               // 0x0F70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F74[0x4];                                      // 0x0F74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Vend_String;                                       // 0x0F78(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             SearchSound;                                       // 0x0F90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             VendFailedSound;                                   // 0x0F98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CycleSound;                                        // 0x0FA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CostAmount;                                        // 0x0FA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FAC[0x4];                                      // 0x0FAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               MaterialType;                                      // 0x0FB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Vend_Succeeded_Sound;                              // 0x0FB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VendSuccess;                                       // 0x0FC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasHit;                                            // 0x0FC1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC2[0x2];                                      // 0x0FC2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CycleSoundVolume;                                  // 0x0FC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCurveTableRowHandle                   TossOnGroundSetting;                               // 0x0FC8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   Wood_String;                                       // 0x0FD8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Stone_String;                                      // 0x0FF0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Metal_String;                                      // 0x1008(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	EFortRarity                                   OverrideVendingMachineRarity;                      // 0x1020(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1021[0x7];                                     // 0x1021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Activate_Rare_Sound;                               // 0x1028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Free_String;                                       // 0x1030(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             DestroyedSound;                                    // 0x1048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         MaxItemsToSpawn;                                   // 0x1050(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ItemsAreFree;                                      // 0x1078(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ItemsAreFreeCached;                                // 0x10A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A1[0x3];                                     // 0x10A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SpawnedItemCount;                                  // 0x10A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxItemsToSpawnCached;                             // 0x10A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10AC[0x4];                                     // 0x10AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Activate_Uncommon_Sound;                           // 0x10B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Activate_Epic_Sound;                               // 0x10B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Activate_Legendary_Sound;                          // 0x10C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Ambient_Sound;                                     // 0x10C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  FailedReason;                                      // 0x10D0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  UpgradeQuestTag;                                   // 0x10F0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           DefaultLightEmissiveColor;                         // 0x1110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpgradeAnim;                                       // 0x1120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1121[0x7];                                     // 0x1121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Light_Flashing;                                    // 0x1128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Impact_Wobble;                                     // 0x1130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Search_Audio_Component;                            // 0x1138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   SideGradeString;                                   // 0x1140(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         HorizontalEnabled;                                 // 0x1158(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         UIShowDistance;                                    // 0x1180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UIDetailDistance;                                  // 0x1184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           UICheckTimer;                                      // 0x1188(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         AllowDamage;                                       // 0x1190(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             Activate_Sidegrade_Sound;                          // 0x11B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  SidegradeQuestTag;                                 // 0x11C0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         InteractionTimeSide;                               // 0x11E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         LightSize;                                         // 0x1208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_120C[0x4];                                     // 0x120C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         SpawnPickup;                                       // 0x1210(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          DoOnce;                                            // 0x1238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1239[0x7];                                     // 0x1239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LinkToActor;                                       // 0x1240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETInteractionType                             NewVar_0;                                          // 0x1248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1249[0x7];                                     // 0x1249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   UpgradeBenchDisplayName;                           // 0x1250(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Search_Sound_Fade_out_Duration;                    // 0x1268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void WobbleMachine();
	void UpdateAnimInstanceVisuals();
	void Timeline_1__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void StopSearchSoundLoop();
	void SetUiVisibility(class UWidgetComponent* UITarget, bool ShowDetail, bool ShowDistance);
	void SetRarityColors(const struct FLinearColor& Color);
	void SetLightColor(const struct FLinearColor& NewColor);
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	void PlayVendFailFX();
	void PlayUpgradeSuccess(const struct FVector& Color, uint8 Index_0, EInteractionBeingAttempted InteractionBeingAttempted);
	void PingMultiCast();
	void OnReady_524B43EB45254EC3646C7D81A1AA3359(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void InitializeUI();
	void ExecuteUbergraph_B_Athena_Wumba(int32 EntryPoint);
	void CheckShouldDisplayUI(bool ShowDetail, bool ShowDistance);
	void BndEvt__SphereDetail_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__SphereDetail_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__FortLinkToActor_K2Node_ComponentBoundEvent_2_OnLinkedActorDestroyed__DelegateSignature(class AActor* DamageCauser);
	void BndEvt__CylinderDistance_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__CylinderDistance_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BlueprintOnInteractInterrupted();
	void BlueprintOnInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted);
	void BlueprintOnBeginInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType);

	void LocalOnFailedInteract(const class AFortPlayerPawn* InteractingPawn) const;
	bool GetOverrideRarity(EFortRarity* Rarity) const;
	bool BlueprintGetInteractionTime(const class AFortPawn* InteractingPawn, float* OutInteractionTime, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	class FText BlueprintGetFailedInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Athena_Wumba_C">();
	}
	static class AB_Athena_Wumba_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Athena_Wumba_C>();
	}
};
static_assert(alignof(AB_Athena_Wumba_C) == 0x000010, "Wrong alignment on AB_Athena_Wumba_C");
static_assert(sizeof(AB_Athena_Wumba_C) == 0x001270, "Wrong size on AB_Athena_Wumba_C");
static_assert(offsetof(AB_Athena_Wumba_C, UberGraphFrame) == 0x000E90, "Member 'AB_Athena_Wumba_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Search_Sound_Loop) == 0x000E98, "Member 'AB_Athena_Wumba_C::Search_Sound_Loop' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, FortLinkToActor) == 0x000EA0, "Member 'AB_Athena_Wumba_C::FortLinkToActor' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, EditorOnly_MeshPreview) == 0x000EA8, "Member 'AB_Athena_Wumba_C::EditorOnly_MeshPreview' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, CylinderDistance) == 0x000EB0, "Member 'AB_Athena_Wumba_C::CylinderDistance' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, SphereDetail) == 0x000EB8, "Member 'AB_Athena_Wumba_C::SphereDetail' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, UI_InteractionPoint_Sidegrade) == 0x000EC0, "Member 'AB_Athena_Wumba_C::UI_InteractionPoint_Sidegrade' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, UI_InteractionPoint_Upgrade) == 0x000EC8, "Member 'AB_Athena_Wumba_C::UI_InteractionPoint_Upgrade' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Wumba_ItemCostComponent_Horizontal) == 0x000ED0, "Member 'AB_Athena_Wumba_C::Wumba_ItemCostComponent_Horizontal' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, TableCollision) == 0x000ED8, "Member 'AB_Athena_Wumba_C::TableCollision' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, PostCollision) == 0x000EE0, "Member 'AB_Athena_Wumba_C::PostCollision' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, TopCollision) == 0x000EE8, "Member 'AB_Athena_Wumba_C::TopCollision' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, BaseCollision) == 0x000EF0, "Member 'AB_Athena_Wumba_C::BaseCollision' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, P_UpgradeFX) == 0x000EF8, "Member 'AB_Athena_Wumba_C::P_UpgradeFX' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, P_TableLightIdle) == 0x000F00, "Member 'AB_Athena_Wumba_C::P_TableLightIdle' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, P_Destroyed) == 0x000F08, "Member 'AB_Athena_Wumba_C::P_Destroyed' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Flashing_Light_Sound_Loop) == 0x000F10, "Member 'AB_Athena_Wumba_C::Flashing_Light_Sound_Loop' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, S_LootTiered_Athena_FloorLoot_01) == 0x000F18, "Member 'AB_Athena_Wumba_C::S_LootTiered_Athena_FloorLoot_01' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, SK_Wumba) == 0x000F20, "Member 'AB_Athena_Wumba_C::SK_Wumba' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Wumba_ItemCostComponent) == 0x000F28, "Member 'AB_Athena_Wumba_C::Wumba_ItemCostComponent' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, ForceFeedbackFail) == 0x000F30, "Member 'AB_Athena_Wumba_C::ForceFeedbackFail' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, ForceFeedbackSuccess) == 0x000F38, "Member 'AB_Athena_Wumba_C::ForceFeedbackSuccess' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, VendingMachine_Ambient) == 0x000F40, "Member 'AB_Athena_Wumba_C::VendingMachine_Ambient' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, DefaultSceneRoot) == 0x000F48, "Member 'AB_Athena_Wumba_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Timeline_1_Light_F9C064A347D6CF3499CF96B51F1F7AF8) == 0x000F50, "Member 'AB_Athena_Wumba_C::Timeline_1_Light_F9C064A347D6CF3499CF96B51F1F7AF8' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Timeline_1__Direction_F9C064A347D6CF3499CF96B51F1F7AF8) == 0x000F54, "Member 'AB_Athena_Wumba_C::Timeline_1__Direction_F9C064A347D6CF3499CF96B51F1F7AF8' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Timeline_1) == 0x000F58, "Member 'AB_Athena_Wumba_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, MonitorMat) == 0x000F60, "Member 'AB_Athena_Wumba_C::MonitorMat' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, MetalMat) == 0x000F68, "Member 'AB_Athena_Wumba_C::MetalMat' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, CurrentCaptureCount) == 0x000F70, "Member 'AB_Athena_Wumba_C::CurrentCaptureCount' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Vend_String) == 0x000F78, "Member 'AB_Athena_Wumba_C::Vend_String' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, SearchSound) == 0x000F90, "Member 'AB_Athena_Wumba_C::SearchSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, VendFailedSound) == 0x000F98, "Member 'AB_Athena_Wumba_C::VendFailedSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, CycleSound) == 0x000FA0, "Member 'AB_Athena_Wumba_C::CycleSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, CostAmount) == 0x000FA8, "Member 'AB_Athena_Wumba_C::CostAmount' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, MaterialType) == 0x000FB0, "Member 'AB_Athena_Wumba_C::MaterialType' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Vend_Succeeded_Sound) == 0x000FB8, "Member 'AB_Athena_Wumba_C::Vend_Succeeded_Sound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, VendSuccess) == 0x000FC0, "Member 'AB_Athena_Wumba_C::VendSuccess' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, WasHit) == 0x000FC1, "Member 'AB_Athena_Wumba_C::WasHit' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, CycleSoundVolume) == 0x000FC4, "Member 'AB_Athena_Wumba_C::CycleSoundVolume' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, TossOnGroundSetting) == 0x000FC8, "Member 'AB_Athena_Wumba_C::TossOnGroundSetting' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Wood_String) == 0x000FD8, "Member 'AB_Athena_Wumba_C::Wood_String' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Stone_String) == 0x000FF0, "Member 'AB_Athena_Wumba_C::Stone_String' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Metal_String) == 0x001008, "Member 'AB_Athena_Wumba_C::Metal_String' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, OverrideVendingMachineRarity) == 0x001020, "Member 'AB_Athena_Wumba_C::OverrideVendingMachineRarity' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Activate_Rare_Sound) == 0x001028, "Member 'AB_Athena_Wumba_C::Activate_Rare_Sound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Free_String) == 0x001030, "Member 'AB_Athena_Wumba_C::Free_String' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, DestroyedSound) == 0x001048, "Member 'AB_Athena_Wumba_C::DestroyedSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, MaxItemsToSpawn) == 0x001050, "Member 'AB_Athena_Wumba_C::MaxItemsToSpawn' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, ItemsAreFree) == 0x001078, "Member 'AB_Athena_Wumba_C::ItemsAreFree' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, ItemsAreFreeCached) == 0x0010A0, "Member 'AB_Athena_Wumba_C::ItemsAreFreeCached' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, SpawnedItemCount) == 0x0010A4, "Member 'AB_Athena_Wumba_C::SpawnedItemCount' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, MaxItemsToSpawnCached) == 0x0010A8, "Member 'AB_Athena_Wumba_C::MaxItemsToSpawnCached' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Activate_Uncommon_Sound) == 0x0010B0, "Member 'AB_Athena_Wumba_C::Activate_Uncommon_Sound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Activate_Epic_Sound) == 0x0010B8, "Member 'AB_Athena_Wumba_C::Activate_Epic_Sound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Activate_Legendary_Sound) == 0x0010C0, "Member 'AB_Athena_Wumba_C::Activate_Legendary_Sound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Ambient_Sound) == 0x0010C8, "Member 'AB_Athena_Wumba_C::Ambient_Sound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, FailedReason) == 0x0010D0, "Member 'AB_Athena_Wumba_C::FailedReason' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, UpgradeQuestTag) == 0x0010F0, "Member 'AB_Athena_Wumba_C::UpgradeQuestTag' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, DefaultLightEmissiveColor) == 0x001110, "Member 'AB_Athena_Wumba_C::DefaultLightEmissiveColor' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, UpgradeAnim) == 0x001120, "Member 'AB_Athena_Wumba_C::UpgradeAnim' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Light_Flashing) == 0x001128, "Member 'AB_Athena_Wumba_C::Light_Flashing' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Impact_Wobble) == 0x001130, "Member 'AB_Athena_Wumba_C::Impact_Wobble' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Search_Audio_Component) == 0x001138, "Member 'AB_Athena_Wumba_C::Search_Audio_Component' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, SideGradeString) == 0x001140, "Member 'AB_Athena_Wumba_C::SideGradeString' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, HorizontalEnabled) == 0x001158, "Member 'AB_Athena_Wumba_C::HorizontalEnabled' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, UIShowDistance) == 0x001180, "Member 'AB_Athena_Wumba_C::UIShowDistance' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, UIDetailDistance) == 0x001184, "Member 'AB_Athena_Wumba_C::UIDetailDistance' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, UICheckTimer) == 0x001188, "Member 'AB_Athena_Wumba_C::UICheckTimer' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, AllowDamage) == 0x001190, "Member 'AB_Athena_Wumba_C::AllowDamage' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Activate_Sidegrade_Sound) == 0x0011B8, "Member 'AB_Athena_Wumba_C::Activate_Sidegrade_Sound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, SidegradeQuestTag) == 0x0011C0, "Member 'AB_Athena_Wumba_C::SidegradeQuestTag' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, InteractionTimeSide) == 0x0011E0, "Member 'AB_Athena_Wumba_C::InteractionTimeSide' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, LightSize) == 0x001208, "Member 'AB_Athena_Wumba_C::LightSize' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, SpawnPickup) == 0x001210, "Member 'AB_Athena_Wumba_C::SpawnPickup' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, DoOnce) == 0x001238, "Member 'AB_Athena_Wumba_C::DoOnce' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, LinkToActor) == 0x001240, "Member 'AB_Athena_Wumba_C::LinkToActor' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, NewVar_0) == 0x001248, "Member 'AB_Athena_Wumba_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, UpgradeBenchDisplayName) == 0x001250, "Member 'AB_Athena_Wumba_C::UpgradeBenchDisplayName' has a wrong offset!");
static_assert(offsetof(AB_Athena_Wumba_C, Search_Sound_Fade_out_Duration) == 0x001268, "Member 'AB_Athena_Wumba_C::Search_Sound_Fade_out_Duration' has a wrong offset!");

}

