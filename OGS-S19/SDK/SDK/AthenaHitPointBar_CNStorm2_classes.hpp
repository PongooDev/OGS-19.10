#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaHitPointBar_CNStorm2

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaHitPointBar_CNStorm2.AthenaHitPointBar_CNStorm2_C
// 0x0118 (0x0408 - 0x02F0)
class UAthenaHitPointBar_CNStorm2_C final : public UAthenaPlayerHitPointBarBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Warning;                                           // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               BarSizeBox;                                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BorderEdge;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BorderEdge3;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BorderEdge4;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_Max;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CurrentValue;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_MaxValue;                            // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       MaxValue;                                          // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PlayerState;                                       // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USimpleMaterialProgressBar_C*           ProgressBarbg;                                     // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USimpleMaterialProgressBar_C*           ProgressBarDelta;                                  // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USimpleMaterialProgressBar_C*           ProgressBarFill;                                   // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               signal_icon;                                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SignalBG;                                          // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SignalIcon;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         TextArea;                                          // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          DBNOStateCache;                                    // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           HealthIcon;                                        // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           ShieldIcon;                                        // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           VehicleHealthIcon;                                 // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           shieldColor;                                       // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           Status;                                            // 0x03B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Index_0;                                           // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IndexState;                                        // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   StormColorBB;                                      // 0x03D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FLinearColor>                   TextColor;                                         // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FLinearColor>                   StormColorAA;                                      // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          outlineGlow;                                       // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IndexNodamage;                                     // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateMaxValue();
	void updateEdgeColor(const struct FLinearColor& NewParam);
	void UpdateDBNOState(bool bIsDBNO);
	void UpdateCurrentValue();
	void updateAnimation();
	void Update_Fill_Bar();
	void Update_Delta_Bar();
	void SetSize(bool useLargeSize);
	void setGlow();
	void PreConstruct(bool IsDesignTime);
	void OnValueChangedWithReason(float Value, EFortHitPointModificationReason Reason);
	void OnMaxValueChanged(float Value);
	void OnDeltaChanged();
	void OnDBNOStateChanged(bool IsDBNO);
	void Initialize_Bar();
	void ExecuteUbergraph_AthenaHitPointBar_CNStorm2(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaHitPointBar_CNStorm2_C">();
	}
	static class UAthenaHitPointBar_CNStorm2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaHitPointBar_CNStorm2_C>();
	}
};
static_assert(alignof(UAthenaHitPointBar_CNStorm2_C) == 0x000008, "Wrong alignment on UAthenaHitPointBar_CNStorm2_C");
static_assert(sizeof(UAthenaHitPointBar_CNStorm2_C) == 0x000408, "Wrong size on UAthenaHitPointBar_CNStorm2_C");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, UberGraphFrame) == 0x0002F0, "Member 'UAthenaHitPointBar_CNStorm2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, Warning) == 0x0002F8, "Member 'UAthenaHitPointBar_CNStorm2_C::Warning' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, BarSizeBox) == 0x000300, "Member 'UAthenaHitPointBar_CNStorm2_C::BarSizeBox' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, BorderEdge) == 0x000308, "Member 'UAthenaHitPointBar_CNStorm2_C::BorderEdge' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, BorderEdge3) == 0x000310, "Member 'UAthenaHitPointBar_CNStorm2_C::BorderEdge3' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, BorderEdge4) == 0x000318, "Member 'UAthenaHitPointBar_CNStorm2_C::BorderEdge4' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, CommonBorder_Max) == 0x000320, "Member 'UAthenaHitPointBar_CNStorm2_C::CommonBorder_Max' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, CurrentValue) == 0x000328, "Member 'UAthenaHitPointBar_CNStorm2_C::CurrentValue' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, HorizontalBox_MaxValue) == 0x000330, "Member 'UAthenaHitPointBar_CNStorm2_C::HorizontalBox_MaxValue' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, Icon) == 0x000338, "Member 'UAthenaHitPointBar_CNStorm2_C::Icon' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, MaxValue) == 0x000340, "Member 'UAthenaHitPointBar_CNStorm2_C::MaxValue' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, PlayerState) == 0x000348, "Member 'UAthenaHitPointBar_CNStorm2_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, ProgressBarbg) == 0x000350, "Member 'UAthenaHitPointBar_CNStorm2_C::ProgressBarbg' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, ProgressBarDelta) == 0x000358, "Member 'UAthenaHitPointBar_CNStorm2_C::ProgressBarDelta' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, ProgressBarFill) == 0x000360, "Member 'UAthenaHitPointBar_CNStorm2_C::ProgressBarFill' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, signal_icon) == 0x000368, "Member 'UAthenaHitPointBar_CNStorm2_C::signal_icon' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, SignalBG) == 0x000370, "Member 'UAthenaHitPointBar_CNStorm2_C::SignalBG' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, SignalIcon) == 0x000378, "Member 'UAthenaHitPointBar_CNStorm2_C::SignalIcon' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, TextArea) == 0x000380, "Member 'UAthenaHitPointBar_CNStorm2_C::TextArea' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, DBNOStateCache) == 0x000388, "Member 'UAthenaHitPointBar_CNStorm2_C::DBNOStateCache' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, HealthIcon) == 0x000390, "Member 'UAthenaHitPointBar_CNStorm2_C::HealthIcon' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, ShieldIcon) == 0x000398, "Member 'UAthenaHitPointBar_CNStorm2_C::ShieldIcon' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, VehicleHealthIcon) == 0x0003A0, "Member 'UAthenaHitPointBar_CNStorm2_C::VehicleHealthIcon' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, shieldColor) == 0x0003A8, "Member 'UAthenaHitPointBar_CNStorm2_C::shieldColor' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, Status) == 0x0003B8, "Member 'UAthenaHitPointBar_CNStorm2_C::Status' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, Index_0) == 0x0003C8, "Member 'UAthenaHitPointBar_CNStorm2_C::Index_0' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, IndexState) == 0x0003CC, "Member 'UAthenaHitPointBar_CNStorm2_C::IndexState' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, StormColorBB) == 0x0003D0, "Member 'UAthenaHitPointBar_CNStorm2_C::StormColorBB' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, TextColor) == 0x0003E0, "Member 'UAthenaHitPointBar_CNStorm2_C::TextColor' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, StormColorAA) == 0x0003F0, "Member 'UAthenaHitPointBar_CNStorm2_C::StormColorAA' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, outlineGlow) == 0x000400, "Member 'UAthenaHitPointBar_CNStorm2_C::outlineGlow' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_CNStorm2_C, IndexNodamage) == 0x000404, "Member 'UAthenaHitPointBar_CNStorm2_C::IndexNodamage' has a wrong offset!");

}

