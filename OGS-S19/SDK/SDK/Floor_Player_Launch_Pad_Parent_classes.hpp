#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Floor_Player_Launch_Pad_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Floor_Player_Launch_Pad_Parent.Floor_Player_Launch_Pad_Parent_C
// 0x00A8 (0x0F50 - 0x0EA8)
class AFloor_Player_Launch_Pad_Parent_C : public AFortLauncherAthena
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0EA8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_Athena_LaunchPad_temp;                           // 0x0EB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PlacementSoundLocation;                            // 0x0EB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Athena_Launchpad_Collision;                      // 0x0EC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene1;                                            // 0x0EC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Trap_Placed_Sound;                                 // 0x0ED0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Trap_Active_Sound;                                 // 0x0ED8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Trap_Fire_Sound;                                   // 0x0EE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Trap_Reload_Sound;                                 // 0x0EE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Trap_Explode_Sound;                                // 0x0EF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             VehicleActivate_3P_Sound;                          // 0x0EF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         VehiclePitchMagnitude;                             // 0x0F00(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         VehicleZ_LaunchMagnitude;                          // 0x0F28(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BndEvt__Floor_Player_Launch_Pad_Parent_S_Athena_Launchpad_Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	struct FVector CalculateVehiclePitchDirection(class AFortAthenaVehicle* Vehicle, float PitchMagnitude);
	void ExecuteUbergraph_Floor_Player_Launch_Pad_Parent(int32 EntryPoint);
	void GameplayCue_Abilities_Activation_Traps_ActivateTrap(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Traps_ReloadBegin(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnFinishedBuilding();
	void OnOutOfDurability();
	void OnPlaced();
	void OnReloadEnd();
	void TriggerLaunchEffects(class AFortPawn* Pawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Floor_Player_Launch_Pad_Parent_C">();
	}
	static class AFloor_Player_Launch_Pad_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFloor_Player_Launch_Pad_Parent_C>();
	}
};
static_assert(alignof(AFloor_Player_Launch_Pad_Parent_C) == 0x000008, "Wrong alignment on AFloor_Player_Launch_Pad_Parent_C");
static_assert(sizeof(AFloor_Player_Launch_Pad_Parent_C) == 0x000F50, "Wrong size on AFloor_Player_Launch_Pad_Parent_C");
static_assert(offsetof(AFloor_Player_Launch_Pad_Parent_C, UberGraphFrame) == 0x000EA8, "Member 'AFloor_Player_Launch_Pad_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFloor_Player_Launch_Pad_Parent_C, P_Athena_LaunchPad_temp) == 0x000EB0, "Member 'AFloor_Player_Launch_Pad_Parent_C::P_Athena_LaunchPad_temp' has a wrong offset!");
static_assert(offsetof(AFloor_Player_Launch_Pad_Parent_C, PlacementSoundLocation) == 0x000EB8, "Member 'AFloor_Player_Launch_Pad_Parent_C::PlacementSoundLocation' has a wrong offset!");
static_assert(offsetof(AFloor_Player_Launch_Pad_Parent_C, S_Athena_Launchpad_Collision) == 0x000EC0, "Member 'AFloor_Player_Launch_Pad_Parent_C::S_Athena_Launchpad_Collision' has a wrong offset!");
static_assert(offsetof(AFloor_Player_Launch_Pad_Parent_C, Scene1) == 0x000EC8, "Member 'AFloor_Player_Launch_Pad_Parent_C::Scene1' has a wrong offset!");
static_assert(offsetof(AFloor_Player_Launch_Pad_Parent_C, Trap_Placed_Sound) == 0x000ED0, "Member 'AFloor_Player_Launch_Pad_Parent_C::Trap_Placed_Sound' has a wrong offset!");
static_assert(offsetof(AFloor_Player_Launch_Pad_Parent_C, Trap_Active_Sound) == 0x000ED8, "Member 'AFloor_Player_Launch_Pad_Parent_C::Trap_Active_Sound' has a wrong offset!");
static_assert(offsetof(AFloor_Player_Launch_Pad_Parent_C, Trap_Fire_Sound) == 0x000EE0, "Member 'AFloor_Player_Launch_Pad_Parent_C::Trap_Fire_Sound' has a wrong offset!");
static_assert(offsetof(AFloor_Player_Launch_Pad_Parent_C, Trap_Reload_Sound) == 0x000EE8, "Member 'AFloor_Player_Launch_Pad_Parent_C::Trap_Reload_Sound' has a wrong offset!");
static_assert(offsetof(AFloor_Player_Launch_Pad_Parent_C, Trap_Explode_Sound) == 0x000EF0, "Member 'AFloor_Player_Launch_Pad_Parent_C::Trap_Explode_Sound' has a wrong offset!");
static_assert(offsetof(AFloor_Player_Launch_Pad_Parent_C, VehicleActivate_3P_Sound) == 0x000EF8, "Member 'AFloor_Player_Launch_Pad_Parent_C::VehicleActivate_3P_Sound' has a wrong offset!");
static_assert(offsetof(AFloor_Player_Launch_Pad_Parent_C, VehiclePitchMagnitude) == 0x000F00, "Member 'AFloor_Player_Launch_Pad_Parent_C::VehiclePitchMagnitude' has a wrong offset!");
static_assert(offsetof(AFloor_Player_Launch_Pad_Parent_C, VehicleZ_LaunchMagnitude) == 0x000F28, "Member 'AFloor_Player_Launch_Pad_Parent_C::VehicleZ_LaunchMagnitude' has a wrong offset!");

}

