#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Tent

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "B_HidingProp_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Tent.B_Tent_C
// 0x0268 (0x13C0 - 0x1158)
class AB_Tent_C final : public AB_HidingProp_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Tent_C;                           // 0x1158(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortSoundIndicatorComponent*           FortSoundIndicator;                                // 0x1160(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNonPlayerConversationComponent_C*      NonPlayerConversationComponent;                    // 0x1168(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCampsiteConversationComponent*         CampsiteConversation;                              // 0x1170(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          finishedSpawn;                                     // 0x1178(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1179[0x7];                                     // 0x1179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           TentOwner;                                         // 0x1180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x1188(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1189[0x7];                                     // 0x1189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItemDefinition*               PickupWID;                                         // 0x1190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Enemy_Tent_Color;                                  // 0x1198(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_to_apply_to_Tent_in_Storm;                      // 0x11A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagQuery                      Can_Interact_Tag_Query;                            // 0x11B0(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           TentDeployedTutorialEventTag;                      // 0x11F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NPCConversationMenuTutorialEventTag;               // 0x1200(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Can_Use_NPCConversation_from_Back_Of_Tent_;        // 0x1208(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         CanUseNPCConversationWhileInsideTent_;             // 0x1230(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         CanBuyTentFromSquadmateTent_;                      // 0x1258(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Hide_in_Tent_Enabled;                              // 0x1280(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         CanHideInSquadmateTent_;                           // 0x12A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Can_Hide_from_Any_Side_Of_Tent_;                   // 0x12D0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         RevertToPickupOnFoundationDestroyed;               // 0x12F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         TentDamagedByStorm_;                               // 0x1320(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          isDying;                                           // 0x1348(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1349[0x3];                                     // 0x1349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           GC_Packup;                                         // 0x134C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Destroy;                                        // 0x1354(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135C[0x4];                                     // 0x135C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       MIDs;                                              // 0x1360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           AnimSequenceName;                                  // 0x1370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           GC_Player_Bounce;                                  // 0x1380(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AFortPlayerPawn*>                RecentlyLaunchedPawns;                             // 0x1388(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FScalableFloat                         BouncePlayersOnHit;                                // 0x1398(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BlueprintOnInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted);
	void Check_if_in_storm();
	void clear_player();
	void ExecuteUbergraph_B_Tent(int32 EntryPoint);
	void FireTentTutorial(const struct FGameplayTag& Event_Tag);
	void FoundationDestroyed();
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDetachFromBuilding(class ABuildingActor* AttachedToBuilding, bool bBeingDestroyed);
	void PackupTent(class AFortPawn* PickupTarget, bool DestroyTent);
	void Play_Vertex_Animation(int32 DataIndex);
	void ReceiveBeginPlay();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void SetupTentColors(class APlayerState* PlayerState);
	void Squad_Colors(class APlayerState* PlayerState, uint8* SquadId, struct FLinearColor* SquadmateColor, int32* SemiPersistentRandoValue);

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	bool BlueprintGetInteractionTime(const class AFortPawn* InteractingPawn, float* OutInteractionTime, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	class FName GetMarkerDetailsId() const;
	bool ShouldDisplaySecondInteractPrompt(const class AFortPawn* InteractingPawn, const ETInteractionType InteractionType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Tent_C">();
	}
	static class AB_Tent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Tent_C>();
	}
};
static_assert(alignof(AB_Tent_C) == 0x000008, "Wrong alignment on AB_Tent_C");
static_assert(sizeof(AB_Tent_C) == 0x0013C0, "Wrong size on AB_Tent_C");
static_assert(offsetof(AB_Tent_C, UberGraphFrame_B_Tent_C) == 0x001158, "Member 'AB_Tent_C::UberGraphFrame_B_Tent_C' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, FortSoundIndicator) == 0x001160, "Member 'AB_Tent_C::FortSoundIndicator' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, NonPlayerConversationComponent) == 0x001168, "Member 'AB_Tent_C::NonPlayerConversationComponent' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, CampsiteConversation) == 0x001170, "Member 'AB_Tent_C::CampsiteConversation' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, finishedSpawn) == 0x001178, "Member 'AB_Tent_C::finishedSpawn' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, TentOwner) == 0x001180, "Member 'AB_Tent_C::TentOwner' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, Debug) == 0x001188, "Member 'AB_Tent_C::Debug' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, PickupWID) == 0x001190, "Member 'AB_Tent_C::PickupWID' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, Enemy_Tent_Color) == 0x001198, "Member 'AB_Tent_C::Enemy_Tent_Color' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, GE_to_apply_to_Tent_in_Storm) == 0x0011A8, "Member 'AB_Tent_C::GE_to_apply_to_Tent_in_Storm' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, Can_Interact_Tag_Query) == 0x0011B0, "Member 'AB_Tent_C::Can_Interact_Tag_Query' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, TentDeployedTutorialEventTag) == 0x0011F8, "Member 'AB_Tent_C::TentDeployedTutorialEventTag' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, NPCConversationMenuTutorialEventTag) == 0x001200, "Member 'AB_Tent_C::NPCConversationMenuTutorialEventTag' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, Can_Use_NPCConversation_from_Back_Of_Tent_) == 0x001208, "Member 'AB_Tent_C::Can_Use_NPCConversation_from_Back_Of_Tent_' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, CanUseNPCConversationWhileInsideTent_) == 0x001230, "Member 'AB_Tent_C::CanUseNPCConversationWhileInsideTent_' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, CanBuyTentFromSquadmateTent_) == 0x001258, "Member 'AB_Tent_C::CanBuyTentFromSquadmateTent_' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, Hide_in_Tent_Enabled) == 0x001280, "Member 'AB_Tent_C::Hide_in_Tent_Enabled' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, CanHideInSquadmateTent_) == 0x0012A8, "Member 'AB_Tent_C::CanHideInSquadmateTent_' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, Can_Hide_from_Any_Side_Of_Tent_) == 0x0012D0, "Member 'AB_Tent_C::Can_Hide_from_Any_Side_Of_Tent_' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, RevertToPickupOnFoundationDestroyed) == 0x0012F8, "Member 'AB_Tent_C::RevertToPickupOnFoundationDestroyed' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, TentDamagedByStorm_) == 0x001320, "Member 'AB_Tent_C::TentDamagedByStorm_' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, isDying) == 0x001348, "Member 'AB_Tent_C::isDying' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, GC_Packup) == 0x00134C, "Member 'AB_Tent_C::GC_Packup' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, GC_Destroy) == 0x001354, "Member 'AB_Tent_C::GC_Destroy' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, MIDs) == 0x001360, "Member 'AB_Tent_C::MIDs' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, AnimSequenceName) == 0x001370, "Member 'AB_Tent_C::AnimSequenceName' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, GC_Player_Bounce) == 0x001380, "Member 'AB_Tent_C::GC_Player_Bounce' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, RecentlyLaunchedPawns) == 0x001388, "Member 'AB_Tent_C::RecentlyLaunchedPawns' has a wrong offset!");
static_assert(offsetof(AB_Tent_C, BouncePlayersOnHit) == 0x001398, "Member 'AB_Tent_C::BouncePlayersOnHit' has a wrong offset!");

}

