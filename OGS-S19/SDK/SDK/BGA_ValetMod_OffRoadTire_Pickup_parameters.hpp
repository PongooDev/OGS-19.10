#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_ValetMod_OffRoadTire_Pickup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.BlueprintOnInteract
// 0x0010 (0x0010 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnInteract) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnInteract");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnInteract) == 0x000010, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnInteract");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnInteract, InteractingPawn) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnInteract, InteractionBeingAttempted) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnInteract::InteractionBeingAttempted' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.BlueprintOnLocalInteract
// 0x01D0 (0x01D0 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract final
{
public:
	class AFortPlayerPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortItemEntry                         CallFunc_CreateItemEntry_ReturnValue;              // 0x0018(0x01A0)()
	int32                                         CallFunc_CountInventoryOverflowFromAddingItem_ReturnValue; // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract) == 0x0001D0, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract, InteractingPawn) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract, InteractionBeingAttempted) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract, ReturnValue) == 0x000009, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000010, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract, CallFunc_CreateItemEntry_ReturnValue) == 0x000018, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract::CallFunc_CreateItemEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract, CallFunc_CountInventoryOverflowFromAddingItem_ReturnValue) == 0x0001B8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract::CallFunc_CountInventoryOverflowFromAddingItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract, CallFunc_Greater_IntInt_ReturnValue) == 0x0001BC, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001C0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintOnLocalInteract::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature
// 0x009C (0x009C - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x009C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature) == 0x000004, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature) == 0x00009C, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature, ImpactResult) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileStopDelegate__DelegateSignature::ImpactResult' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_3_OnProjectileBounceDelegate__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_3_OnProjectileBounceDelegate__DelegateSignature final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x009C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactVelocity;                                    // 0x009C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_3_OnProjectileBounceDelegate__DelegateSignature) == 0x000004, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_3_OnProjectileBounceDelegate__DelegateSignature");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_3_OnProjectileBounceDelegate__DelegateSignature) == 0x0000A8, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_3_OnProjectileBounceDelegate__DelegateSignature");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_3_OnProjectileBounceDelegate__DelegateSignature, ImpactResult) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_3_OnProjectileBounceDelegate__DelegateSignature::ImpactResult' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_3_OnProjectileBounceDelegate__DelegateSignature, ImpactVelocity) == 0x00009C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_3_OnProjectileBounceDelegate__DelegateSignature::ImpactVelocity' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.BndEvt__FortWaterInteraction_K2Node_ComponentBoundEvent_4_WaterInteractionOnEnterWater__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortWaterInteraction_K2Node_ComponentBoundEvent_4_WaterInteractionOnEnterWater__DelegateSignature final
{
public:
	class AFortWaterBodyActor*                    WaterBody;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWaterInteractionComponent*         WaterInteractionComponent;                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFirstBody;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortWaterInteraction_K2Node_ComponentBoundEvent_4_WaterInteractionOnEnterWater__DelegateSignature) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortWaterInteraction_K2Node_ComponentBoundEvent_4_WaterInteractionOnEnterWater__DelegateSignature");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortWaterInteraction_K2Node_ComponentBoundEvent_4_WaterInteractionOnEnterWater__DelegateSignature) == 0x000018, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortWaterInteraction_K2Node_ComponentBoundEvent_4_WaterInteractionOnEnterWater__DelegateSignature");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortWaterInteraction_K2Node_ComponentBoundEvent_4_WaterInteractionOnEnterWater__DelegateSignature, WaterBody) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortWaterInteraction_K2Node_ComponentBoundEvent_4_WaterInteractionOnEnterWater__DelegateSignature::WaterBody' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortWaterInteraction_K2Node_ComponentBoundEvent_4_WaterInteractionOnEnterWater__DelegateSignature, WaterInteractionComponent) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortWaterInteraction_K2Node_ComponentBoundEvent_4_WaterInteractionOnEnterWater__DelegateSignature::WaterInteractionComponent' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortWaterInteraction_K2Node_ComponentBoundEvent_4_WaterInteractionOnEnterWater__DelegateSignature, bIsFirstBody) == 0x000010, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__FortWaterInteraction_K2Node_ComponentBoundEvent_4_WaterInteractionOnEnterWater__DelegateSignature::bIsFirstBody' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00C0 (0x00C0 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x009C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000C0, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.BndEvt__JumpCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BndEvt__JumpCollision_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.CalcVehicleImpulse
// 0x0060 (0x0060 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse final
{
public:
	class AActor*                                 Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VelocityMultiplier;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vector;                                            // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse) == 0x000060, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, Vehicle) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::Vehicle' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, VelocityMultiplier) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::VelocityMultiplier' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, Vector) == 0x00000C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::Vector' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, CallFunc_GetVelocity_ReturnValue) == 0x000018, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, CallFunc_BreakVector_X) == 0x000024, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, CallFunc_BreakVector_Y) == 0x000028, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, CallFunc_BreakVector_Z) == 0x00002C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, CallFunc_VSize_ReturnValue) == 0x000030, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00003C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000040, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, CallFunc_FClamp_ReturnValue) == 0x000044, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse, CallFunc_ClampVectorSize_ReturnValue) == 0x000054, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CalcVehicleImpulse::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.CeilingCheck
// 0x0140 (0x0140 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0070(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x0080(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors_1;            // 0x0128(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck) == 0x000140, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, Success) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::Success' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, ActorsToIgnore) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000028, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000034, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_BreakVector_X) == 0x000040, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_BreakVector_Y) == 0x000044, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_BreakVector_Z) == 0x000048, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000054, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_MakeVector_ReturnValue_1) == 0x000064, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_GetAttachedActors_OutActors) == 0x000070, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_CapsuleTraceSingle_OutHit) == 0x000080, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x00011C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_Array_Get_Item) == 0x000120, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_GetAttachedActors_OutActors_1) == 0x000128, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_GetAttachedActors_OutActors_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck, CallFunc_Less_IntInt_ReturnValue) == 0x00013C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_CeilingCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.DebugJumpCapsule
// 0x001C (0x001C - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_DebugJumpCapsule final
{
public:
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_DebugJumpCapsule) == 0x000004, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_DebugJumpCapsule");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_DebugJumpCapsule) == 0x00001C, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_DebugJumpCapsule");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_DebugJumpCapsule, CallFunc_IsServer_ReturnValue) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_DebugJumpCapsule::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_DebugJumpCapsule, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000004, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_DebugJumpCapsule::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_DebugJumpCapsule, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_DebugJumpCapsule::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.EventAttachedActorDestroyed
// 0x0008 (0x0008 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedActorDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedActorDestroyed) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedActorDestroyed");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedActorDestroyed) == 0x000008, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedActorDestroyed");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedActorDestroyed, DestroyedActor) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedActorDestroyed::DestroyedActor' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.EventAttachedBADied
// 0x0050 (0x0050 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Momentum;                                          // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied) == 0x000050, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied, DamagedActor) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied::DamagedActor' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied, Damage) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied::Damage' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied, InstigatedBy) == 0x000010, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied, DamageCauser) == 0x000018, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied::DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied, HitLocation) == 0x000020, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied::HitLocation' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied, FHitComponent) == 0x000030, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied::FHitComponent' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied, BoneName) == 0x000038, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied::BoneName' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied, Momentum) == 0x000040, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_EventAttachedBADied::Momentum' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup
// 0x0B10 (0x0B10 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_StartFrame;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_EndFrame;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasItem_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0030(0x00C0)(ContainsInstancedReference)
	TScriptInterface<class IFortInventoryOwnerInterface> CallFunc_GiveItemToInventoryOwner_InventoryOwner_CastInput; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	const class UFortWorldItem*                   CallFunc_GiveItemToInventoryOwner_ReturnValue;     // 0x0100(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IFortInventoryOwnerInterface> CallFunc_AddItemToInventoryOwner_InventoryOwner_CastInput; // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_AddItemToInventoryOwner_ReturnValue;      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage_1;                             // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags_1;                         // 0x0120(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum_1;                           // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo_1;                            // 0x014C(0x009C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy_1;                       // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_1;                       // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext_1;                      // 0x01F8(0x0018)()
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0240(0x009C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE[0x2];                                      // 0x02DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0328(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActorSimulatePhysics_ReturnValue;      // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaVehicle*                     K2Node_DynamicCast_AsFort_Athena_Vehicle;          // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0390(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x039C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LaunchHoverboard_Success;                 // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x03B4(0x0010)(ZeroConstructor, NoDestructor)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x03C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CeilingCheck_Success;                     // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CeilingCheck_Success_1;                   // 0x03CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CB[0x1];                                      // 0x03CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class AFortPawn*                        K2Node_Event_InteractingPawn;                      // 0x03D8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    K2Node_Event_InteractionBeingAttempted;            // 0x03E0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetForwardSpeedKmh_ReturnValue;           // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_GetVehicleRightVector_self_CastInput;     // 0x0400(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVehicleRightVector_ReturnValue;        // 0x0410(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcVehicleImpulse_Vector;                // 0x041C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MirrorVectorByNormal_ReturnValue;         // 0x0428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0434(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_2;            // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0458(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0464(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0530(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_FHitComponent;                  // 0x0540(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Momentum;                       // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_ImpactResult_1;         // 0x055C(0x009C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x05F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x05FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FB[0x1];                                      // 0x05FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0604(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0610(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x061C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0628(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0648(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x066C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0678(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_684[0x4];                                      // 0x0684(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface;       // 0x0688(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x069A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69B[0x1];                                      // 0x069B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x06A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x06B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x06BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x06C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D4[0x4];                                      // 0x06D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x06E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x070C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0718(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0724(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_725[0x3];                                      // 0x0725(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn_1;           // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_731[0x7];                                      // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_741[0x7];                                      // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0748(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0758(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0764(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_765[0x3];                                      // 0x0765(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGA_ValetMod_OffRoadTire_Pickup_C*     K2Node_DynamicCast_AsBGA_Valet_Mod_Off_Road_Tire_Pickup; // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0771(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_772[0x2];                                      // 0x0772(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0778(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0798(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x07A4(0x009C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0850(0x0018)()
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_879[0x7];                                      // 0x0879(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0880(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0888(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0899(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x089A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x089B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x089C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x08A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x08B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x08C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x08CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x08D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x08E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x08F0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_901[0x3];                                      // 0x0901(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0904(0x0010)(ZeroConstructor, NoDestructor)
	struct FHitResult                             K2Node_ComponentBoundEvent_ImpactResult;           // 0x0914(0x009C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_ComponentBoundEvent_ImpactVelocity;         // 0x09B0(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x09BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x09BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BE[0x2];                                      // 0x09BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x09C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x09C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x09C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x09D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x09E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x09EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x0A08(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_3;                // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x0A20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x0A24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x0A2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x0A38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A44[0x4];                                      // 0x0A44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortDagwoodVehicle*                    K2Node_DynamicCast_AsFort_Dagwood_Vehicle;         // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A51[0x7];                                      // 0x0A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_ApplyTireMod_self_CastInput;              // 0x0A58(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldApplyMod_ReturnValue;               // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0A69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6A[0x6];                                      // 0x0A6A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface_1;     // 0x0A70(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0A80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A81[0x7];                                      // 0x0A81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWaterBodyActor*                    K2Node_ComponentBoundEvent_WaterBody;              // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWaterInteractionComponent*         K2Node_ComponentBoundEvent_WaterInteractionComponent; // 0x0A90(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsFirstBody;           // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A99[0x3];                                      // 0x0A99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x0A9C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     CallFunc_SpawnFXAtLocation_ReturnValue;            // 0x0AA8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0AB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ABC[0x4];                                      // 0x0ABC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0AC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0AC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0ACC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD4[0x4];                                      // 0x0AD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE1[0x3];                                      // 0x0AE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0AE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x0AF4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     CallFunc_SpawnFXAtLocation_ReturnValue_1;          // 0x0B00(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPickup*                            CallFunc_K2_SpawnPickupInWorld_ReturnValue;        // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup) == 0x000B10, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, EntryPoint) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::EntryPoint' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_StartFrame) == 0x000004, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_StartFrame' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_EndFrame) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_EndFrame' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_HasItem_ReturnValue) == 0x00000C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_HasItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GetActorForwardVector_ReturnValue) == 0x00001C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000030, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GiveItemToInventoryOwner_InventoryOwner_CastInput) == 0x0000F0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GiveItemToInventoryOwner_InventoryOwner_CastInput' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GiveItemToInventoryOwner_ReturnValue) == 0x000100, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GiveItemToInventoryOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_AddItemToInventoryOwner_InventoryOwner_CastInput) == 0x000108, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_AddItemToInventoryOwner_InventoryOwner_CastInput' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_AddItemToInventoryOwner_ReturnValue) == 0x000118, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_AddItemToInventoryOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_Damage_1) == 0x00011C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_Damage_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_DamageTags_1) == 0x000120, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_DamageTags_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_Momentum_1) == 0x000140, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_Momentum_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_HitInfo_1) == 0x00014C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_HitInfo_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_InstigatedBy_1) == 0x0001E8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_DamageCauser_1) == 0x0001F0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_EffectContext_1) == 0x0001F8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_EffectContext_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GetValueAtLevel_ReturnValue) == 0x000210, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000214, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, Temp_bool_IsClosed_Variable) == 0x000218, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000220, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000228, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000230, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000238, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_bFromSweep) == 0x00023C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_SweepResult) == 0x000240, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_bBlockingHit) == 0x0002DC, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002DD, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Time) == 0x0002E0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Distance) == 0x0002E4, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Location) == 0x0002E8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_ImpactPoint) == 0x0002F4, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Normal) == 0x000300, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_ImpactNormal) == 0x00030C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_PhysMat) == 0x000318, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitActor) == 0x000320, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitComponent) == 0x000328, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitBoneName) == 0x000330, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_BoneName) == 0x000338, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitItem) == 0x000340, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_ElementIndex) == 0x000344, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_FaceIndex) == 0x000348, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_TraceStart) == 0x00034C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_TraceEnd) == 0x000358, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_CanActorSimulatePhysics_ReturnValue) == 0x000364, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_CanActorSimulatePhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_AsFort_Athena_Vehicle) == 0x000368, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_AsFort_Athena_Vehicle' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_bSuccess) == 0x000370, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_AsFort_Pawn) == 0x000378, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_bSuccess_1) == 0x000380, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_MakeVector_ReturnValue) == 0x000384, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000390, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, Temp_bool_Has_Been_Initd_Variable) == 0x000398, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x00039C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_MakeVector_ReturnValue_1) == 0x0003A4, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_LaunchHoverboard_Success) == 0x0003B0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_LaunchHoverboard_Success' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_CreateDelegate_OutputDelegate) == 0x0003B4, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GetSubGame_ReturnValue) == 0x0003C4, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003C5, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_IsValid_ReturnValue) == 0x0003C6, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, Temp_bool_IsClosed_Variable_1) == 0x0003C7, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_IsDedicatedServer_ReturnValue) == 0x0003C8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_CeilingCheck_Success) == 0x0003C9, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_CeilingCheck_Success' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_CeilingCheck_Success_1) == 0x0003CA, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_CeilingCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GetHealth_ReturnValue) == 0x0003CC, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_Less_FloatFloat_ReturnValue) == 0x0003D0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_InteractingPawn) == 0x0003D8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_InteractingPawn' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_InteractionBeingAttempted) == 0x0003E0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0003E8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_bSuccess_2) == 0x0003F0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GetForwardSpeedKmh_ReturnValue) == 0x0003F4, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GetForwardSpeedKmh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0003F8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GetVehicleRightVector_self_CastInput) == 0x000400, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GetVehicleRightVector_self_CastInput' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GetVehicleRightVector_ReturnValue) == 0x000410, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GetVehicleRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_CalcVehicleImpulse_Vector) == 0x00041C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_CalcVehicleImpulse_Vector' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_MirrorVectorByNormal_ReturnValue) == 0x000428, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_MirrorVectorByNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_SelectVector_ReturnValue) == 0x000434, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000440, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GetValueAtLevel_ReturnValue_2) == 0x00044C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GetValueAtLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_RandomFloatInRange_ReturnValue) == 0x000450, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000454, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_MakeRotator_ReturnValue) == 0x000458, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000464, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000500, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_CustomEvent_DestroyedActor) == 0x000508, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_CustomEvent_DamagedActor) == 0x000510, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_CustomEvent_Damage) == 0x000518, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_CustomEvent_InstigatedBy) == 0x000520, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_CustomEvent_DamageCauser) == 0x000528, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_CustomEvent_HitLocation) == 0x000530, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_CustomEvent_FHitComponent) == 0x000540, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_CustomEvent_FHitComponent' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_CustomEvent_BoneName) == 0x000548, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_CustomEvent_Momentum) == 0x000550, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_CustomEvent_Momentum' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_ImpactResult_1) == 0x00055C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_ImpactResult_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_IsServer_ReturnValue) == 0x0005F8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0005F9, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0005FA, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Time_1) == 0x0005FC, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Distance_1) == 0x000600, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Location_1) == 0x000604, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000610, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Normal_1) == 0x00061C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000628, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_PhysMat_1) == 0x000638, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitActor_1) == 0x000640, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitComponent_1) == 0x000648, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitBoneName_1) == 0x000650, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_BoneName_1) == 0x000658, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitItem_1) == 0x000660, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_ElementIndex_1) == 0x000664, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_FaceIndex_1) == 0x000668, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_TraceStart_1) == 0x00066C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_TraceEnd_1) == 0x000678, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_AsFort_Vehicle_Interface) == 0x000688, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_AsFort_Vehicle_Interface' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_bSuccess_3) == 0x000698, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000699, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x00069A, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Time_2) == 0x00069C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Distance_2) == 0x0006A0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Location_2) == 0x0006A4, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_ImpactPoint_2) == 0x0006B0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Normal_2) == 0x0006BC, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_ImpactNormal_2) == 0x0006C8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_PhysMat_2) == 0x0006D8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitActor_2) == 0x0006E0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitComponent_2) == 0x0006E8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitBoneName_2) == 0x0006F0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_BoneName_2) == 0x0006F8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitItem_2) == 0x000700, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_ElementIndex_2) == 0x000704, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_FaceIndex_2) == 0x000708, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_TraceStart_2) == 0x00070C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_TraceEnd_2) == 0x000718, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_Not_PreBool_ReturnValue) == 0x000724, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_AsFort_Player_Pawn_1) == 0x000728, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_AsFort_Player_Pawn_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_bSuccess_4) == 0x000730, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_AsBuilding_Actor) == 0x000738, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_bSuccess_5) == 0x000740, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000748, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_OtherActor) == 0x000750, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_OtherComp) == 0x000758, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000760, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_IsServer_ReturnValue_1) == 0x000764, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_AsBGA_Valet_Mod_Off_Road_Tire_Pickup) == 0x000768, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_AsBGA_Valet_Mod_Off_Road_Tire_Pickup' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_bSuccess_6) == 0x000770, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000771, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_Damage) == 0x000774, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_DamageTags) == 0x000778, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_Momentum) == 0x000798, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_HitInfo) == 0x0007A4, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_InstigatedBy) == 0x000840, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_DamageCauser) == 0x000848, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_Event_EffectContext) == 0x000850, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GetController_ReturnValue) == 0x000868, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000870, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_bSuccess_7) == 0x000878, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000880, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000888, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000898, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, Temp_bool_Has_Been_Initd_Variable_1) == 0x000899, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BooleanOR_ReturnValue) == 0x00089A, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, Temp_bool_Has_Been_Initd_Variable_2) == 0x00089B, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00089C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0008A8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_Add_VectorVector_ReturnValue) == 0x0008B4, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0008C0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0008CC, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0008D8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0008E4, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_CreateDelegate_OutputDelegate_1) == 0x0008F0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_IsServer_ReturnValue_2) == 0x000900, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_CreateDelegate_OutputDelegate_2) == 0x000904, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_ImpactResult) == 0x000914, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_ImpactResult' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_ImpactVelocity) == 0x0009B0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_ImpactVelocity' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_bBlockingHit_3) == 0x0009BC, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x0009BD, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Time_3) == 0x0009C0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Distance_3) == 0x0009C4, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Location_3) == 0x0009C8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_ImpactPoint_3) == 0x0009D4, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_Normal_3) == 0x0009E0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_ImpactNormal_3) == 0x0009EC, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_PhysMat_3) == 0x0009F8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitActor_3) == 0x000A00, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitComponent_3) == 0x000A08, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitBoneName_3) == 0x000A10, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_BoneName_3) == 0x000A18, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_BoneName_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_HitItem_3) == 0x000A20, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_ElementIndex_3) == 0x000A24, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_FaceIndex_3) == 0x000A28, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_TraceStart_3) == 0x000A2C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakHitResult_TraceEnd_3) == 0x000A38, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_AsFort_Dagwood_Vehicle) == 0x000A48, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_AsFort_Dagwood_Vehicle' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_bSuccess_8) == 0x000A50, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_ApplyTireMod_self_CastInput) == 0x000A58, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_ApplyTireMod_self_CastInput' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_ShouldApplyMod_ReturnValue) == 0x000A68, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_ShouldApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, Temp_bool_IsClosed_Variable_2) == 0x000A69, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_AsFort_Vehicle_Interface_1) == 0x000A70, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_AsFort_Vehicle_Interface_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_bSuccess_9) == 0x000A80, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_WaterBody) == 0x000A88, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_WaterBody' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_WaterInteractionComponent) == 0x000A90, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_WaterInteractionComponent' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_ComponentBoundEvent_bIsFirstBody) == 0x000A98, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_ComponentBoundEvent_bIsFirstBody' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x000A9C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_SpawnFXAtLocation_ReturnValue) == 0x000AA8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_SpawnFXAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000AB0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000AC0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakVector_X) == 0x000AC8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakVector_Y) == 0x000ACC, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_BreakVector_Z) == 0x000AD0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000AD8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, K2Node_DynamicCast_bSuccess_10) == 0x000AE0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_Add_FloatFloat_ReturnValue) == 0x000AE4, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_MakeVector_ReturnValue_2) == 0x000AE8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x000AF4, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_SpawnFXAtLocation_ReturnValue_1) == 0x000B00, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_SpawnFXAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup, CallFunc_K2_SpawnPickupInWorld_ReturnValue) == 0x000B08, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ExecuteUbergraph_BGA_ValetMod_OffRoadTire_Pickup::CallFunc_K2_SpawnPickupInWorld_ReturnValue' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.MID_Play_Animation
// 0x0028 (0x0028 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation final
{
public:
	float                                         StartFrame;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndFrame;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation) == 0x000028, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation, StartFrame) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation::StartFrame' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation, EndFrame) == 0x000004, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation::EndFrame' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000010, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation, CallFunc_GetMaterial_ReturnValue) == 0x000018, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_MID_Play_Animation::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.OnDamagePlayEffects
// 0x00F8 (0x00F8 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x009C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00E0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects) == 0x0000F8, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects, Damage) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects, DamageTags) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects, Momentum) == 0x000028, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects, HitInfo) == 0x000034, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects, InstigatedBy) == 0x0000D0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects, DamageCauser) == 0x0000D8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects, EffectContext) == 0x0000E0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnDamagePlayEffects::EffectContext' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.OnDeathServer
// 0x00F8 (0x00F8 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x009C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00E0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer) == 0x0000F8, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer, Damage) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer, DamageTags) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer, Momentum) == 0x000028, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer, HitInfo) == 0x000034, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer, InstigatedBy) == 0x0000D0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer, DamageCauser) == 0x0000D8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer, EffectContext) == 0x0000E0, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.OnRep_JumpCollisionLocation
// 0x00AC (0x00AC - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_JumpCollisionLocation final
{
public:
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0000(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_JumpCollisionLocation) == 0x000004, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_JumpCollisionLocation");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_JumpCollisionLocation) == 0x0000AC, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_JumpCollisionLocation");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_JumpCollisionLocation, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_JumpCollisionLocation::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_JumpCollisionLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00009C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_JumpCollisionLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_JumpCollisionLocation, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x0000A8, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_JumpCollisionLocation::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.OnRep_LastHit
// 0x00C8 (0x00C8 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_LastHit final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_BuildCueParametersFromHitResult_OutCueParameters; // 0x0008(0x00C0)(ContainsInstancedReference)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_LastHit) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_LastHit");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_LastHit) == 0x0000C8, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_LastHit");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_LastHit, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_LastHit::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_LastHit, CallFunc_BuildCueParametersFromHitResult_OutCueParameters) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_OnRep_LastHit::CallFunc_BuildCueParametersFromHitResult_OutCueParameters' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.PlayJiggleTiresAnimation
// 0x0008 (0x0008 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_PlayJiggleTiresAnimation final
{
public:
	float                                         StartFrame;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndFrame;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_PlayJiggleTiresAnimation) == 0x000004, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_PlayJiggleTiresAnimation");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_PlayJiggleTiresAnimation) == 0x000008, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_PlayJiggleTiresAnimation");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_PlayJiggleTiresAnimation, StartFrame) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_PlayJiggleTiresAnimation::StartFrame' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_PlayJiggleTiresAnimation, EndFrame) == 0x000004, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_PlayJiggleTiresAnimation::EndFrame' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.ShouldApplyMod
// 0x0070 (0x0070 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod final
{
public:
	class AFortDagwoodVehicle*                    Vehicle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_AreAnyTiresPopped_self_CastInput;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreAnyTiresPopped_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_GetHealth_self_CastInput;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_IsInoperable_self_CastInput;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInoperable_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_HasTireMod_self_CastInput;                // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTireMod_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod) == 0x000070, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, Vehicle) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::Vehicle' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, ReturnValue) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, CallFunc_AreAnyTiresPopped_self_CastInput) == 0x000010, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::CallFunc_AreAnyTiresPopped_self_CastInput' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, CallFunc_AreAnyTiresPopped_ReturnValue) == 0x000020, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::CallFunc_AreAnyTiresPopped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, CallFunc_GetHealth_self_CastInput) == 0x000028, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::CallFunc_GetHealth_self_CastInput' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, CallFunc_GetHealth_ReturnValue) == 0x000038, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00003D, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, CallFunc_IsInoperable_self_CastInput) == 0x000040, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::CallFunc_IsInoperable_self_CastInput' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, CallFunc_IsInoperable_ReturnValue) == 0x000050, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::CallFunc_IsInoperable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, CallFunc_HasTireMod_self_CastInput) == 0x000058, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::CallFunc_HasTireMod_self_CastInput' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, CallFunc_HasTireMod_ReturnValue) == 0x000068, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::CallFunc_HasTireMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, CallFunc_BooleanOR_ReturnValue) == 0x00006A, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod, CallFunc_BooleanOR_ReturnValue_1) == 0x00006B, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldApplyMod::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.ShouldDie
// 0x0020 (0x0020 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_ShouldDie final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            EventInstigator;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldDie) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_ShouldDie");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldDie) == 0x000020, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_ShouldDie");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldDie, Damage) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldDie::Damage' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldDie, EventInstigator) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldDie::EventInstigator' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldDie, DamageCauser) == 0x000010, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldDie::DamageCauser' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_ShouldDie, ReturnValue) == 0x000018, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_ShouldDie::ReturnValue' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.BlueprintCanInteract
// 0x0010 (0x0010 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETInteractionType                             InteractionType;                                   // 0x0009(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract) == 0x000010, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract, InteractingPawn) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract, InteractionBeingAttempted) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract, InteractionType) == 0x000009, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract, ReturnValue) == 0x00000A, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintCanInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.BlueprintGetInteractionString
// 0x0028 (0x0028 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionString final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionString) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionString");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionString) == 0x000028, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionString");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionString, InteractingPawn) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionString::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionString, InteractionBeingAttempted) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionString::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionString, ReturnValue) == 0x000010, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionString::ReturnValue' has a wrong offset!");

// Function BGA_ValetMod_OffRoadTire_Pickup.BGA_ValetMod_OffRoadTire_Pickup_C.BlueprintGetInteractionTime
// 0x0010 (0x0010 - 0x0000)
struct BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionTime final
{
public:
	const class AFortPawn*                        InteractingPawn;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutInteractionTime;                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInteractionBeingAttempted                    InteractionBeingAttempted;                         // 0x000C(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionTime) == 0x000008, "Wrong alignment on BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionTime");
static_assert(sizeof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionTime) == 0x000010, "Wrong size on BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionTime");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionTime, InteractingPawn) == 0x000000, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionTime::InteractingPawn' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionTime, OutInteractionTime) == 0x000008, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionTime::OutInteractionTime' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionTime, InteractionBeingAttempted) == 0x00000C, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionTime::InteractionBeingAttempted' has a wrong offset!");
static_assert(offsetof(BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionTime, ReturnValue) == 0x00000D, "Member 'BGA_ValetMod_OffRoadTire_Pickup_C_BlueprintGetInteractionTime::ReturnValue' has a wrong offset!");

}

