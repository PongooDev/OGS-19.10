#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FreshCheeseDisplayItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass FreshCheeseDisplayItem.FreshCheeseDisplayItem_C
// 0x0050 (0x02D8 - 0x0288)
class UFreshCheeseDisplayItem_C final : public UFortMultipleReceivedItemWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       QuantityAnim;                                      // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Outro;                                             // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RewardUnlocked;                                    // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         Count_Hbox;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               FullWidget;                                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Reward_Glow;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichText_StackCount;                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EFortRarity                                   DevRarity;                                         // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IntroSpeed;                                        // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateVisuals(const class UFortItemDefinition* RewardItem, int32 ItemQuantity);
	void ShowReward();
	void RarityVisuals(EFortRarity Rarity);
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_FreshCheeseDisplayItem(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FreshCheeseDisplayItem_C">();
	}
	static class UFreshCheeseDisplayItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFreshCheeseDisplayItem_C>();
	}
};
static_assert(alignof(UFreshCheeseDisplayItem_C) == 0x000008, "Wrong alignment on UFreshCheeseDisplayItem_C");
static_assert(sizeof(UFreshCheeseDisplayItem_C) == 0x0002D8, "Wrong size on UFreshCheeseDisplayItem_C");
static_assert(offsetof(UFreshCheeseDisplayItem_C, UberGraphFrame) == 0x000288, "Member 'UFreshCheeseDisplayItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFreshCheeseDisplayItem_C, QuantityAnim) == 0x000290, "Member 'UFreshCheeseDisplayItem_C::QuantityAnim' has a wrong offset!");
static_assert(offsetof(UFreshCheeseDisplayItem_C, Outro) == 0x000298, "Member 'UFreshCheeseDisplayItem_C::Outro' has a wrong offset!");
static_assert(offsetof(UFreshCheeseDisplayItem_C, Intro) == 0x0002A0, "Member 'UFreshCheeseDisplayItem_C::Intro' has a wrong offset!");
static_assert(offsetof(UFreshCheeseDisplayItem_C, RewardUnlocked) == 0x0002A8, "Member 'UFreshCheeseDisplayItem_C::RewardUnlocked' has a wrong offset!");
static_assert(offsetof(UFreshCheeseDisplayItem_C, Count_Hbox) == 0x0002B0, "Member 'UFreshCheeseDisplayItem_C::Count_Hbox' has a wrong offset!");
static_assert(offsetof(UFreshCheeseDisplayItem_C, FullWidget) == 0x0002B8, "Member 'UFreshCheeseDisplayItem_C::FullWidget' has a wrong offset!");
static_assert(offsetof(UFreshCheeseDisplayItem_C, Reward_Glow) == 0x0002C0, "Member 'UFreshCheeseDisplayItem_C::Reward_Glow' has a wrong offset!");
static_assert(offsetof(UFreshCheeseDisplayItem_C, RichText_StackCount) == 0x0002C8, "Member 'UFreshCheeseDisplayItem_C::RichText_StackCount' has a wrong offset!");
static_assert(offsetof(UFreshCheeseDisplayItem_C, DevRarity) == 0x0002D0, "Member 'UFreshCheeseDisplayItem_C::DevRarity' has a wrong offset!");
static_assert(offsetof(UFreshCheeseDisplayItem_C, IntroSpeed) == 0x0002D4, "Member 'UFreshCheeseDisplayItem_C::IntroSpeed' has a wrong offset!");

}

