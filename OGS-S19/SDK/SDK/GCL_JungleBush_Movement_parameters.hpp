#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCL_JungleBush_Movement

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GCL_JungleBush_Movement.GCL_JungleBush_Movement_C.OnActive
// 0x00E8 (0x00E8 - 0x0000)
struct GCL_JungleBush_Movement_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundLibrarySubsystem*                 CallFunc_GetWorldSubsystem_ReturnValue;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_JungleBush_Movement_C_OnActive) == 0x000008, "Wrong alignment on GCL_JungleBush_Movement_C_OnActive");
static_assert(sizeof(GCL_JungleBush_Movement_C_OnActive) == 0x0000E8, "Wrong size on GCL_JungleBush_Movement_C_OnActive");
static_assert(offsetof(GCL_JungleBush_Movement_C_OnActive, MyTarget) == 0x000000, "Member 'GCL_JungleBush_Movement_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_JungleBush_Movement_C_OnActive, Parameters) == 0x000008, "Member 'GCL_JungleBush_Movement_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCL_JungleBush_Movement_C_OnActive, ReturnValue) == 0x0000C8, "Member 'GCL_JungleBush_Movement_C_OnActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_JungleBush_Movement_C_OnActive, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000D0, "Member 'GCL_JungleBush_Movement_C_OnActive::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_JungleBush_Movement_C_OnActive, CallFunc_GetWorldSubsystem_ReturnValue) == 0x0000D8, "Member 'GCL_JungleBush_Movement_C_OnActive::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_JungleBush_Movement_C_OnActive, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000E0, "Member 'GCL_JungleBush_Movement_C_OnActive::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function GCL_JungleBush_Movement.GCL_JungleBush_Movement_C.OnRemove
// 0x00E8 (0x00E8 - 0x0000)
struct GCL_JungleBush_Movement_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundLibrarySubsystem*                 CallFunc_GetWorldSubsystem_ReturnValue;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCL_JungleBush_Movement_C_OnRemove) == 0x000008, "Wrong alignment on GCL_JungleBush_Movement_C_OnRemove");
static_assert(sizeof(GCL_JungleBush_Movement_C_OnRemove) == 0x0000E8, "Wrong size on GCL_JungleBush_Movement_C_OnRemove");
static_assert(offsetof(GCL_JungleBush_Movement_C_OnRemove, MyTarget) == 0x000000, "Member 'GCL_JungleBush_Movement_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GCL_JungleBush_Movement_C_OnRemove, Parameters) == 0x000008, "Member 'GCL_JungleBush_Movement_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GCL_JungleBush_Movement_C_OnRemove, ReturnValue) == 0x0000C8, "Member 'GCL_JungleBush_Movement_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_JungleBush_Movement_C_OnRemove, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000D0, "Member 'GCL_JungleBush_Movement_C_OnRemove::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_JungleBush_Movement_C_OnRemove, CallFunc_GetWorldSubsystem_ReturnValue) == 0x0000D8, "Member 'GCL_JungleBush_Movement_C_OnRemove::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCL_JungleBush_Movement_C_OnRemove, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000E0, "Member 'GCL_JungleBush_Movement_C_OnRemove::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

}

