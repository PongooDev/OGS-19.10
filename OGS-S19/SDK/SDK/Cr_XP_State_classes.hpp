#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cr_XP_State

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Cr_XP_State.Cr_XP_State_C
// 0x00E8 (0x0330 - 0x0248)
class UCr_XP_State_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_CalibrationIcon;                             // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_XpState;                                     // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_Icon;                                       // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_Text;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          TagContainer;                                      // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Description;                                  // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Label;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Status_Awarded;                                    // 0x0288(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Status_Calibrating;                                // 0x02A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Status_NoXp;                                       // 0x02B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Description_NoXp;                                  // 0x02D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Description_Calibrating;                           // 0x02E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Description_Awarded;                               // 0x0300(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              LargeIconSize;                                     // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SmallIconSize;                                     // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExpanded;                                        // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void SetVisualState(bool IsVisible_0);
	void SetStatus(EDynamicXpCalibrationPhase InCalibrationStatus);
	void PreConstruct(bool IsDesignTime);
	void OnVolumeEntered(class APlayerState* Client, class AFortVolume* Volume);
	void ExecuteUbergraph_Cr_XP_State(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Cr_XP_State_C">();
	}
	static class UCr_XP_State_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCr_XP_State_C>();
	}
};
static_assert(alignof(UCr_XP_State_C) == 0x000008, "Wrong alignment on UCr_XP_State_C");
static_assert(sizeof(UCr_XP_State_C) == 0x000330, "Wrong size on UCr_XP_State_C");
static_assert(offsetof(UCr_XP_State_C, UberGraphFrame) == 0x000248, "Member 'UCr_XP_State_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, Image_CalibrationIcon) == 0x000250, "Member 'UCr_XP_State_C::Image_CalibrationIcon' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, Image_XpState) == 0x000258, "Member 'UCr_XP_State_C::Image_XpState' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, Spacer_Icon) == 0x000260, "Member 'UCr_XP_State_C::Spacer_Icon' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, Spacer_Text) == 0x000268, "Member 'UCr_XP_State_C::Spacer_Text' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, TagContainer) == 0x000270, "Member 'UCr_XP_State_C::TagContainer' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, Text_Description) == 0x000278, "Member 'UCr_XP_State_C::Text_Description' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, Text_Label) == 0x000280, "Member 'UCr_XP_State_C::Text_Label' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, Status_Awarded) == 0x000288, "Member 'UCr_XP_State_C::Status_Awarded' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, Status_Calibrating) == 0x0002A0, "Member 'UCr_XP_State_C::Status_Calibrating' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, Status_NoXp) == 0x0002B8, "Member 'UCr_XP_State_C::Status_NoXp' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, Description_NoXp) == 0x0002D0, "Member 'UCr_XP_State_C::Description_NoXp' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, Description_Calibrating) == 0x0002E8, "Member 'UCr_XP_State_C::Description_Calibrating' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, Description_Awarded) == 0x000300, "Member 'UCr_XP_State_C::Description_Awarded' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, LargeIconSize) == 0x000318, "Member 'UCr_XP_State_C::LargeIconSize' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, SmallIconSize) == 0x000320, "Member 'UCr_XP_State_C::SmallIconSize' has a wrong offset!");
static_assert(offsetof(UCr_XP_State_C, IsExpanded) == 0x000328, "Member 'UCr_XP_State_C::IsExpanded' has a wrong offset!");

}

