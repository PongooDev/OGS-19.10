#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CowboyPistol_AnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass CowboyPistol_AnimBP.CowboyPistol_AnimBP_C
// 0x05E0 (0x0900 - 0x0320)
class UCowboyPistol_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_318[0x8];                                      // 0x0318(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0328(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0330(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0338(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0358(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x03A0(0x0040)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x03E0(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x04A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x04D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x04F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0548(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0598(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x05C0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0600(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0620(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0660(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0680(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x06C0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x06E0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0720(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0740(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0780(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x07A0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x07E0(0x0020)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x0800(0x0010)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0810(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0830(0x00B8)()
	int32                                         ChamberRotationCounter;                            // 0x08E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChamberPosition_1;                                 // 0x08EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChamberPosition_6;                                 // 0x08ED(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChamberPosition_2;                                 // 0x08EE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChamberPosition_3;                                 // 0x08EF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChamberPosition_4;                                 // 0x08F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChamberPosition_5;                                 // 0x08F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_ChamberRotation();
	void ExecuteUbergraph_CowboyPistol_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CowboyPistol_AnimBP_C">();
	}
	static class UCowboyPistol_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCowboyPistol_AnimBP_C>();
	}
};
static_assert(alignof(UCowboyPistol_AnimBP_C) == 0x000010, "Wrong alignment on UCowboyPistol_AnimBP_C");
static_assert(sizeof(UCowboyPistol_AnimBP_C) == 0x000900, "Wrong size on UCowboyPistol_AnimBP_C");
static_assert(offsetof(UCowboyPistol_AnimBP_C, UberGraphFrame) == 0x000320, "Member 'UCowboyPistol_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000328, "Member 'UCowboyPistol_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimBlueprintExtension_Base) == 0x000330, "Member 'UCowboyPistol_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_Root) == 0x000338, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_Slot) == 0x000358, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x0003A0, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_ApplyAdditive) == 0x0003E0, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x0004A8, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x0004D0, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0004F8, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000520, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000548, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000570, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000598, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x0005C0, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_StateResult_6) == 0x000600, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000620, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_StateResult_5) == 0x000660, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000680, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_StateResult_4) == 0x0006C0, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0006E0, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_StateResult_3) == 0x000720, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x000740, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_StateResult_2) == 0x000780, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0007A0, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_StateResult_1) == 0x0007E0, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_IdentityPose) == 0x000800, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_StateResult) == 0x000810, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, AnimGraphNode_StateMachine) == 0x000830, "Member 'UCowboyPistol_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, ChamberRotationCounter) == 0x0008E8, "Member 'UCowboyPistol_AnimBP_C::ChamberRotationCounter' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, ChamberPosition_1) == 0x0008EC, "Member 'UCowboyPistol_AnimBP_C::ChamberPosition_1' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, ChamberPosition_6) == 0x0008ED, "Member 'UCowboyPistol_AnimBP_C::ChamberPosition_6' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, ChamberPosition_2) == 0x0008EE, "Member 'UCowboyPistol_AnimBP_C::ChamberPosition_2' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, ChamberPosition_3) == 0x0008EF, "Member 'UCowboyPistol_AnimBP_C::ChamberPosition_3' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, ChamberPosition_4) == 0x0008F0, "Member 'UCowboyPistol_AnimBP_C::ChamberPosition_4' has a wrong offset!");
static_assert(offsetof(UCowboyPistol_AnimBP_C, ChamberPosition_5) == 0x0008F1, "Member 'UCowboyPistol_AnimBP_C::ChamberPosition_5' has a wrong offset!");

}

