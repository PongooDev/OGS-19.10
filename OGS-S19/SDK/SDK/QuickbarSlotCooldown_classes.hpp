#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuickbarSlotCooldown

#include "Basic.hpp"

#include "ItemDisplayStyle_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass QuickbarSlotCooldown.QuickbarSlotCooldown_C
// 0x0030 (0x0370 - 0x0340)
class UQuickbarSlotCooldown_C final : public UFortItemCooldownWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 ImageRadialOpacityLayer;                           // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageRectangularOpacityLayer;                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBoxCDCount;                                   // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcherLegacy*            SwitcherOpacityOverlay;                            // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EItemDisplayStyle                             ItemDisplayStyle;                                  // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Show_Countdown(bool Show);
	void OnInitialized();
	void OnCooldownStopped(EFortItemCooldownType CooldownType);
	void OnCooldownStarted(EFortItemCooldownType CooldownType, float CooldownDuration);
	void OnAmmoRegenerationUpdated(bool bOutAmmoRegenAvailableState);
	void ExecuteUbergraph_QuickbarSlotCooldown(int32 EntryPoint);
	void Initialize(EItemDisplayStyle QuickbarItemDisplayStyle, TArray<EFortItemCooldownType>& DesiredCooldownTypesSupported);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuickbarSlotCooldown_C">();
	}
	static class UQuickbarSlotCooldown_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuickbarSlotCooldown_C>();
	}
};
static_assert(alignof(UQuickbarSlotCooldown_C) == 0x000008, "Wrong alignment on UQuickbarSlotCooldown_C");
static_assert(sizeof(UQuickbarSlotCooldown_C) == 0x000370, "Wrong size on UQuickbarSlotCooldown_C");
static_assert(offsetof(UQuickbarSlotCooldown_C, UberGraphFrame) == 0x000340, "Member 'UQuickbarSlotCooldown_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UQuickbarSlotCooldown_C, ImageRadialOpacityLayer) == 0x000348, "Member 'UQuickbarSlotCooldown_C::ImageRadialOpacityLayer' has a wrong offset!");
static_assert(offsetof(UQuickbarSlotCooldown_C, ImageRectangularOpacityLayer) == 0x000350, "Member 'UQuickbarSlotCooldown_C::ImageRectangularOpacityLayer' has a wrong offset!");
static_assert(offsetof(UQuickbarSlotCooldown_C, ScaleBoxCDCount) == 0x000358, "Member 'UQuickbarSlotCooldown_C::ScaleBoxCDCount' has a wrong offset!");
static_assert(offsetof(UQuickbarSlotCooldown_C, SwitcherOpacityOverlay) == 0x000360, "Member 'UQuickbarSlotCooldown_C::SwitcherOpacityOverlay' has a wrong offset!");
static_assert(offsetof(UQuickbarSlotCooldown_C, ItemDisplayStyle) == 0x000368, "Member 'UQuickbarSlotCooldown_C::ItemDisplayStyle' has a wrong offset!");

}

