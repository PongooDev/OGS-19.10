#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Minigame_PlayerCreated

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ItemDropBehavior_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Minigame_PlayerCreated.Minigame_PlayerCreated_C
// 0x00D0 (0x0E10 - 0x0D40)
class AMinigame_PlayerCreated_C final : public AFortMinigame
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D40(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCreativeMinigameMutatorList_C*         CreativeMinigameMutatorList;                       // 0x0D48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortPickupInstigatorRegistryComponent* FortPickupInstigatorRegistry;                      // 0x0D50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortMinigameObjectiveTrackerComponent* FortMinigameObjectiveTracker;                      // 0x0D58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTeams;                                          // 0x0D60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D64[0x4];                                      // 0x0D64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            ScoreboardPanel;                                   // 0x0D68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Current_A_Round;                                // 0x0D70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D71[0x3];                                      // 0x0D71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfHidersGameStart;                           // 0x0D74(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(int32 Number_Of_Hiders)> OnStartingNumberOfHidersChanged;                   // 0x0D78(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(int32 CurrentHiders)> OnCurrentNumberOfHidersChanged;                    // 0x0D88(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         NumberOfHidersInProgress;                          // 0x0D98(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9C[0x4];                                      // 0x0D9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           PropCheckTimerHandle;                              // 0x0DA0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UObject*                                PropHuntSettings;                                  // 0x0DA8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class AMinigame_PlayerCreated_C* Minigame)> OnPropHuntSettingsReady;                           // 0x0DB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<class UFortItemDefinition*, EItemDropBehavior> ItemDropOverride;                                  // 0x0DC0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ShowScoreboardPanel();
	void ShouldShowScoreboard(class APlayerController* PlayerController, bool* bResult);
	void SetupTeams();
	void SetupSpecialCharacterAttributes();
	void SetTeamOrRefreshVoiceChannel(class AFortPlayerState* PlayerState, uint8 TeamIndex);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void Play_Minigame_State_Audio(EFortMinigameState Minigame_State);
	void OnStatChangedPropHunt();
	void OnRep_PropHuntSettings();
	void OnRep_NumberOfHidersInProgress();
	void OnRep_NumberOfHiders();
	void OnPlayerRemoved(const struct FUniqueNetIdRepl& UniqueNetId, bool bIsLocalPlayer);
	void OnPlayerAdded(const struct FUniqueNetIdRepl& UniqueNetId, bool bIsLocalPlayer);
	void OnComplete_D9496DB6400ADA561B9C749CD6D8B5BC(class UUserWidget* UserWidget);
	void IsPropHuntGame(bool* IsPropHuntGame_0);
	void IsPlayerAHider(class APlayerController* Player_Controller, bool* IsPlayerAHider_0);
	void IndexToTeamIndex(int32 Index_0, uint8* TeamIndex);
	void HideScoreboardPanel();
	void HandleStateChanged(class AFortMinigame* ChangedMinigame, EFortMinigameState MinigameState);
	void HandleMinigameStarted();
	void HandleMinigameEnded();
	void GetRandomlyOrderedParticipatingPlayers(TArray<class AFortPlayerState*>* RandomizedPlayers);
	void ExecuteUbergraph_Minigame_PlayerCreated(int32 EntryPoint);
	void End_Scoreboard_Sound();
	void ClientHandleStartEndgame();
	void Check_ForHidingPlayers();
	void AssignTeams();

	bool ShouldDropOrDestroyItem(bool& bShouldDrop, bool& bShouldDestroy, class AFortPlayerController* PC, const class UFortWorldItemDefinition* ItemDef) const;
	bool HasPlayerStartPads(const class AFortPlayerState* InPlayerState) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Minigame_PlayerCreated_C">();
	}
	static class AMinigame_PlayerCreated_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMinigame_PlayerCreated_C>();
	}
};
static_assert(alignof(AMinigame_PlayerCreated_C) == 0x000008, "Wrong alignment on AMinigame_PlayerCreated_C");
static_assert(sizeof(AMinigame_PlayerCreated_C) == 0x000E10, "Wrong size on AMinigame_PlayerCreated_C");
static_assert(offsetof(AMinigame_PlayerCreated_C, UberGraphFrame) == 0x000D40, "Member 'AMinigame_PlayerCreated_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMinigame_PlayerCreated_C, CreativeMinigameMutatorList) == 0x000D48, "Member 'AMinigame_PlayerCreated_C::CreativeMinigameMutatorList' has a wrong offset!");
static_assert(offsetof(AMinigame_PlayerCreated_C, FortPickupInstigatorRegistry) == 0x000D50, "Member 'AMinigame_PlayerCreated_C::FortPickupInstigatorRegistry' has a wrong offset!");
static_assert(offsetof(AMinigame_PlayerCreated_C, FortMinigameObjectiveTracker) == 0x000D58, "Member 'AMinigame_PlayerCreated_C::FortMinigameObjectiveTracker' has a wrong offset!");
static_assert(offsetof(AMinigame_PlayerCreated_C, MaxTeams) == 0x000D60, "Member 'AMinigame_PlayerCreated_C::MaxTeams' has a wrong offset!");
static_assert(offsetof(AMinigame_PlayerCreated_C, ScoreboardPanel) == 0x000D68, "Member 'AMinigame_PlayerCreated_C::ScoreboardPanel' has a wrong offset!");
static_assert(offsetof(AMinigame_PlayerCreated_C, Is_Current_A_Round) == 0x000D70, "Member 'AMinigame_PlayerCreated_C::Is_Current_A_Round' has a wrong offset!");
static_assert(offsetof(AMinigame_PlayerCreated_C, NumberOfHidersGameStart) == 0x000D74, "Member 'AMinigame_PlayerCreated_C::NumberOfHidersGameStart' has a wrong offset!");
static_assert(offsetof(AMinigame_PlayerCreated_C, OnStartingNumberOfHidersChanged) == 0x000D78, "Member 'AMinigame_PlayerCreated_C::OnStartingNumberOfHidersChanged' has a wrong offset!");
static_assert(offsetof(AMinigame_PlayerCreated_C, OnCurrentNumberOfHidersChanged) == 0x000D88, "Member 'AMinigame_PlayerCreated_C::OnCurrentNumberOfHidersChanged' has a wrong offset!");
static_assert(offsetof(AMinigame_PlayerCreated_C, NumberOfHidersInProgress) == 0x000D98, "Member 'AMinigame_PlayerCreated_C::NumberOfHidersInProgress' has a wrong offset!");
static_assert(offsetof(AMinigame_PlayerCreated_C, PropCheckTimerHandle) == 0x000DA0, "Member 'AMinigame_PlayerCreated_C::PropCheckTimerHandle' has a wrong offset!");
static_assert(offsetof(AMinigame_PlayerCreated_C, PropHuntSettings) == 0x000DA8, "Member 'AMinigame_PlayerCreated_C::PropHuntSettings' has a wrong offset!");
static_assert(offsetof(AMinigame_PlayerCreated_C, OnPropHuntSettingsReady) == 0x000DB0, "Member 'AMinigame_PlayerCreated_C::OnPropHuntSettingsReady' has a wrong offset!");
static_assert(offsetof(AMinigame_PlayerCreated_C, ItemDropOverride) == 0x000DC0, "Member 'AMinigame_PlayerCreated_C::ItemDropOverride' has a wrong offset!");

}

