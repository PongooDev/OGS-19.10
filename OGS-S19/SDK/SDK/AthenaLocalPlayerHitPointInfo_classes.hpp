#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaLocalPlayerHitPointInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaLocalPlayerHitPointInfo.AthenaLocalPlayerHitPointInfo_C
// 0x0068 (0x0328 - 0x02C0)
class UAthenaLocalPlayerHitPointInfo_C final : public UAthenaPlayerHitPointInfo
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeVehicle;                                       // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeStatus;                                        // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UAthenaCurieStatusWidget_C*             AthenaCurieStatusWidget;                           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaHitPointBar_CNStorm2_C*          AthenaHitPointBar_CNStorm2;                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortHUDElementWrapper_C*               FortHUDElementWrapper_Health;                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortHUDElementWrapper_C*               FortHUDElementWrapper_Shield;                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortHUDElementWrapper_C*               FortHUDElementWrapper_Vehicle;                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaHitPointBar_C*                   HitPointBarHealth;                                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaHitPointBar_C*                   HitPointBarShield;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaHitPointBar_C*                   HitPointBarVehicleHealth;                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Use_Large_Format;                                  // 0x0318(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VehicleHealthBarWidthOverride;                     // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VehicleHealthBarHeightOverride;                    // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InVehicle;                                         // 0x0324(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isFaded;                                           // 0x0325(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fade_on_Full;                                      // 0x0326(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	void OnPawnHealthChanged_Event();
	void OnCreativeQuickbarEquippedChanged(bool bIsEquipped);
	void OnCreativeModeEnabledChanged(bool bIsEnabled_0);
	void ExecuteUbergraph_AthenaLocalPlayerHitPointInfo(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaLocalPlayerHitPointInfo_C">();
	}
	static class UAthenaLocalPlayerHitPointInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaLocalPlayerHitPointInfo_C>();
	}
};
static_assert(alignof(UAthenaLocalPlayerHitPointInfo_C) == 0x000008, "Wrong alignment on UAthenaLocalPlayerHitPointInfo_C");
static_assert(sizeof(UAthenaLocalPlayerHitPointInfo_C) == 0x000328, "Wrong size on UAthenaLocalPlayerHitPointInfo_C");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, UberGraphFrame) == 0x0002C0, "Member 'UAthenaLocalPlayerHitPointInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, FadeVehicle) == 0x0002C8, "Member 'UAthenaLocalPlayerHitPointInfo_C::FadeVehicle' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, FadeStatus) == 0x0002D0, "Member 'UAthenaLocalPlayerHitPointInfo_C::FadeStatus' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, AthenaCurieStatusWidget) == 0x0002D8, "Member 'UAthenaLocalPlayerHitPointInfo_C::AthenaCurieStatusWidget' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, AthenaHitPointBar_CNStorm2) == 0x0002E0, "Member 'UAthenaLocalPlayerHitPointInfo_C::AthenaHitPointBar_CNStorm2' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, FortHUDElementWrapper_Health) == 0x0002E8, "Member 'UAthenaLocalPlayerHitPointInfo_C::FortHUDElementWrapper_Health' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, FortHUDElementWrapper_Shield) == 0x0002F0, "Member 'UAthenaLocalPlayerHitPointInfo_C::FortHUDElementWrapper_Shield' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, FortHUDElementWrapper_Vehicle) == 0x0002F8, "Member 'UAthenaLocalPlayerHitPointInfo_C::FortHUDElementWrapper_Vehicle' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, HitPointBarHealth) == 0x000300, "Member 'UAthenaLocalPlayerHitPointInfo_C::HitPointBarHealth' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, HitPointBarShield) == 0x000308, "Member 'UAthenaLocalPlayerHitPointInfo_C::HitPointBarShield' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, HitPointBarVehicleHealth) == 0x000310, "Member 'UAthenaLocalPlayerHitPointInfo_C::HitPointBarVehicleHealth' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, Use_Large_Format) == 0x000318, "Member 'UAthenaLocalPlayerHitPointInfo_C::Use_Large_Format' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, VehicleHealthBarWidthOverride) == 0x00031C, "Member 'UAthenaLocalPlayerHitPointInfo_C::VehicleHealthBarWidthOverride' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, VehicleHealthBarHeightOverride) == 0x000320, "Member 'UAthenaLocalPlayerHitPointInfo_C::VehicleHealthBarHeightOverride' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, InVehicle) == 0x000324, "Member 'UAthenaLocalPlayerHitPointInfo_C::InVehicle' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, isFaded) == 0x000325, "Member 'UAthenaLocalPlayerHitPointInfo_C::isFaded' has a wrong offset!");
static_assert(offsetof(UAthenaLocalPlayerHitPointInfo_C, Fade_on_Full) == 0x000326, "Member 'UAthenaLocalPlayerHitPointInfo_C::Fade_on_Full' has a wrong offset!");

}

