#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_ValetMod_OffRoadTire_BouncePlayer

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GCN_ValetMod_OffRoadTire_BouncePlayer.GCN_ValetMod_OffRoadTire_BouncePlayer_C.OnBurstNiagara
// 0x00F8 (0x00F8 - 0x0000)
struct GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UNiagaraComponent*>              ParticleComponents;                                // 0x00C8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UMatineeCameraShake*                    BurstCameraShakeInstance;                          // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x00F0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara) == 0x000008, "Wrong alignment on GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara");
static_assert(sizeof(GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara) == 0x0000F8, "Wrong size on GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara");
static_assert(offsetof(GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara, MyTarget) == 0x000000, "Member 'GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara::MyTarget' has a wrong offset!");
static_assert(offsetof(GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara, Parameters) == 0x000008, "Member 'GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara::Parameters' has a wrong offset!");
static_assert(offsetof(GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara, ParticleComponents) == 0x0000C8, "Member 'GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara, AudioComponents) == 0x0000D8, "Member 'GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara, BurstCameraShakeInstance) == 0x0000E8, "Member 'GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara, BurstDecalInstance) == 0x0000F0, "Member 'GCN_ValetMod_OffRoadTire_BouncePlayer_C_OnBurstNiagara::BurstDecalInstance' has a wrong offset!");

}

