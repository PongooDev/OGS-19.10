#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaHitPointBar

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaHitPointBar.AthenaHitPointBar_C
// 0x00E8 (0x03D8 - 0x02F0)
class UAthenaHitPointBar_C final : public UAthenaPlayerHitPointBarBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ValueImpact;                                       // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BarShake_2;                                        // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BarShake_1;                                        // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BarShake;                                          // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               BarSizeBox;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_Max;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CurrentValue;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ExtensionWidgetOverlay;                            // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_MaxValue;                            // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               IconFixedSpacing;                                  // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              IconScale;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BarBG;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_CastShadow;                                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Limit_Overlay;                                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LimitMark_Image;                                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       MaxValue;                                          // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USimpleMaterialProgressBar_C*           ProgressBarDelta;                                  // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USimpleMaterialProgressBar_C*           ProgressBarFill;                                   // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Value;                                     // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         TextArea;                                          // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          DBNOStateCache;                                    // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           HealthIcon;                                        // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           ShieldIcon;                                        // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           VehicleHealthIcon;                                 // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           shieldColor;                                       // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          hideShieldOnEmpty;                                 // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIcon_isVisible;                                   // 0x03D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bValue_isVisible;                                  // 0x03D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void UpdateMaxValue();
	void UpdateLimit(bool ShowLimitMarker, float LimitPercentage);
	void UpdateDBNOState(bool bIsDBNO);
	void UpdateCurrentValue();
	void Update_Delta_Bar();
	void SetSize(bool useLargeSize);
	void SetProgressBarFillColors(const struct FLinearColor& ColorA, const struct FLinearColor& ColorB);
	void SetInformationVisibility(bool Icon_Visibility, bool Value_Visibility);
	void PreConstruct(bool IsDesignTime);
	void OnValueChangedWithReason(float Value, EFortHitPointModificationReason Reason);
	void OnMaxValueChanged(float Value);
	void OnExtensionWidgetAdded(const EUIExtensionSlot ExtensionSlot, class UUserWidget* ExtensionWidget);
	void OnDeltaChanged();
	void OnDBNOStateChanged(bool IsDBNO);
	void OnBarShakeAnimationFinished();
	void Initialize_Bar();
	void ExecuteUbergraph_AthenaHitPointBar(int32 EntryPoint);
	void Destruct();
	void Construct();
	void Update_Fill_Bar();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaHitPointBar_C">();
	}
	static class UAthenaHitPointBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaHitPointBar_C>();
	}
};
static_assert(alignof(UAthenaHitPointBar_C) == 0x000008, "Wrong alignment on UAthenaHitPointBar_C");
static_assert(sizeof(UAthenaHitPointBar_C) == 0x0003D8, "Wrong size on UAthenaHitPointBar_C");
static_assert(offsetof(UAthenaHitPointBar_C, UberGraphFrame) == 0x0002F0, "Member 'UAthenaHitPointBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, ValueImpact) == 0x0002F8, "Member 'UAthenaHitPointBar_C::ValueImpact' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, BarShake_2) == 0x000300, "Member 'UAthenaHitPointBar_C::BarShake_2' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, BarShake_1) == 0x000308, "Member 'UAthenaHitPointBar_C::BarShake_1' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, BarShake) == 0x000310, "Member 'UAthenaHitPointBar_C::BarShake' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, BarSizeBox) == 0x000318, "Member 'UAthenaHitPointBar_C::BarSizeBox' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, CommonBorder_Max) == 0x000320, "Member 'UAthenaHitPointBar_C::CommonBorder_Max' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, CurrentValue) == 0x000328, "Member 'UAthenaHitPointBar_C::CurrentValue' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, ExtensionWidgetOverlay) == 0x000330, "Member 'UAthenaHitPointBar_C::ExtensionWidgetOverlay' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, HorizontalBox_MaxValue) == 0x000338, "Member 'UAthenaHitPointBar_C::HorizontalBox_MaxValue' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, Icon) == 0x000340, "Member 'UAthenaHitPointBar_C::Icon' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, IconFixedSpacing) == 0x000348, "Member 'UAthenaHitPointBar_C::IconFixedSpacing' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, IconScale) == 0x000350, "Member 'UAthenaHitPointBar_C::IconScale' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, Image_BarBG) == 0x000358, "Member 'UAthenaHitPointBar_C::Image_BarBG' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, Image_CastShadow) == 0x000360, "Member 'UAthenaHitPointBar_C::Image_CastShadow' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, Limit_Overlay) == 0x000368, "Member 'UAthenaHitPointBar_C::Limit_Overlay' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, LimitMark_Image) == 0x000370, "Member 'UAthenaHitPointBar_C::LimitMark_Image' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, MaxValue) == 0x000378, "Member 'UAthenaHitPointBar_C::MaxValue' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, ProgressBarDelta) == 0x000380, "Member 'UAthenaHitPointBar_C::ProgressBarDelta' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, ProgressBarFill) == 0x000388, "Member 'UAthenaHitPointBar_C::ProgressBarFill' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, SizeBox_Value) == 0x000390, "Member 'UAthenaHitPointBar_C::SizeBox_Value' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, TextArea) == 0x000398, "Member 'UAthenaHitPointBar_C::TextArea' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, DBNOStateCache) == 0x0003A0, "Member 'UAthenaHitPointBar_C::DBNOStateCache' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, HealthIcon) == 0x0003A8, "Member 'UAthenaHitPointBar_C::HealthIcon' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, ShieldIcon) == 0x0003B0, "Member 'UAthenaHitPointBar_C::ShieldIcon' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, VehicleHealthIcon) == 0x0003B8, "Member 'UAthenaHitPointBar_C::VehicleHealthIcon' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, shieldColor) == 0x0003C0, "Member 'UAthenaHitPointBar_C::shieldColor' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, hideShieldOnEmpty) == 0x0003D0, "Member 'UAthenaHitPointBar_C::hideShieldOnEmpty' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, bIcon_isVisible) == 0x0003D1, "Member 'UAthenaHitPointBar_C::bIcon_isVisible' has a wrong offset!");
static_assert(offsetof(UAthenaHitPointBar_C, bValue_isVisible) == 0x0003D2, "Member 'UAthenaHitPointBar_C::bValue_isVisible' has a wrong offset!");

}

