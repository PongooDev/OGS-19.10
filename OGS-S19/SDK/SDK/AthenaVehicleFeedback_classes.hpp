#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaVehicleFeedback

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AthenaHUDSituationalFeedback_classes.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaVehicleFeedback.AthenaVehicleFeedback_C
// 0x0030 (0x0320 - 0x02F0)
class UAthenaVehicleFeedback_C final : public UAthenaHUDSituationalFeedback_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_AthenaVehicleFeedback_C;            // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class FText>                           SeatActionLabels;                                  // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           SeatActionNames;                                   // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          DriverEntered;                                     // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ShowFeedback();
	void OnPiPBlockPlayer(bool PIPIsBlocking);
	void OnLocalChallengesVisibilityChanged(bool bIsVisible);
	void OnKeybindsChanged_Bind();
	void OnExitVehicle_Bind();
	void OnEnterVehiclePassenger_Bind();
	void OnEnterVehicleDriver_Bind();
	void HideFeedback();
	void ExecuteUbergraph_AthenaVehicleFeedback(int32 EntryPoint);
	void Construct();

	void GetKeybindInputType(ECommonInputType* InputType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaVehicleFeedback_C">();
	}
	static class UAthenaVehicleFeedback_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaVehicleFeedback_C>();
	}
};
static_assert(alignof(UAthenaVehicleFeedback_C) == 0x000008, "Wrong alignment on UAthenaVehicleFeedback_C");
static_assert(sizeof(UAthenaVehicleFeedback_C) == 0x000320, "Wrong size on UAthenaVehicleFeedback_C");
static_assert(offsetof(UAthenaVehicleFeedback_C, UberGraphFrame_AthenaVehicleFeedback_C) == 0x0002F0, "Member 'UAthenaVehicleFeedback_C::UberGraphFrame_AthenaVehicleFeedback_C' has a wrong offset!");
static_assert(offsetof(UAthenaVehicleFeedback_C, SeatActionLabels) == 0x0002F8, "Member 'UAthenaVehicleFeedback_C::SeatActionLabels' has a wrong offset!");
static_assert(offsetof(UAthenaVehicleFeedback_C, SeatActionNames) == 0x000308, "Member 'UAthenaVehicleFeedback_C::SeatActionNames' has a wrong offset!");
static_assert(offsetof(UAthenaVehicleFeedback_C, DriverEntered) == 0x000318, "Member 'UAthenaVehicleFeedback_C::DriverEntered' has a wrong offset!");

}

