#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaInventoryScreenContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AthenaDragDropAction_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.UpdateStyle
// 0x000C (0x000C - 0x0000)
struct AthenaInventoryScreenContainer_C_UpdateStyle final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_UpdateStyle) == 0x000004, "Wrong alignment on AthenaInventoryScreenContainer_C_UpdateStyle");
static_assert(sizeof(AthenaInventoryScreenContainer_C_UpdateStyle) == 0x00000C, "Wrong size on AthenaInventoryScreenContainer_C_UpdateStyle");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateStyle, TabId) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_UpdateStyle::TabId' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateStyle, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000008, "Member 'AthenaInventoryScreenContainer_C_UpdateStyle::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateStyle, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000009, "Member 'AthenaInventoryScreenContainer_C_UpdateStyle::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateStyle, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'AthenaInventoryScreenContainer_C_UpdateStyle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.UpdateChannelBrowserInput
// 0x0098 (0x0098 - 0x0000)
struct AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput final
{
public:
	class FName                                   CallFunc_GetActiveTab_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasInputActionHandler_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            K2Node_DynamicCast_AsFort_Player_Controller_Athena; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortGameStateAthena*                   K2Node_DynamicCast_AsFort_Game_State_Athena;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleLabModePlaylist_ReturnValue;      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            CallFunc_CanPlayerCreateInCurrentVolume_OutCurrentVolume; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayerCreateInCurrentVolume_ReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMinigame*                          CallFunc_GetMinigameForVolume_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCreativeOrPlaygroundModePlaylist_ReturnValue; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasStarted_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortVolume*                            CallFunc_GetCurrentVolume_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput");
static_assert(sizeof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput) == 0x000098, "Wrong size on AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_GetActiveTab_ReturnValue) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_GetActiveTab_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000008, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_HasInputActionHandler_ReturnValue) == 0x000009, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_HasInputActionHandler_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, K2Node_DynamicCast_AsFort_Player_Controller_Athena) == 0x000018, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::K2Node_DynamicCast_AsFort_Player_Controller_Athena' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_GetPlayerPawn_ReturnValue) == 0x000030, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, K2Node_DynamicCast_AsFort_Game_State_Athena) == 0x000038, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::K2Node_DynamicCast_AsFort_Game_State_Athena' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000048, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_IsBattleLabModePlaylist_ReturnValue) == 0x000051, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_IsBattleLabModePlaylist_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_CanPlayerCreateInCurrentVolume_OutCurrentVolume) == 0x000058, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_CanPlayerCreateInCurrentVolume_OutCurrentVolume' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_CanPlayerCreateInCurrentVolume_ReturnValue) == 0x000060, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_CanPlayerCreateInCurrentVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_GetMinigameForVolume_ReturnValue) == 0x000068, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_GetMinigameForVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_IsCreativeOrPlaygroundModePlaylist_ReturnValue) == 0x000070, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_IsCreativeOrPlaygroundModePlaylist_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_HasStarted_ReturnValue) == 0x000071, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_HasStarted_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_BooleanAND_ReturnValue_1) == 0x000073, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_GetCurrentVolume_ReturnValue) == 0x000078, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_GetCurrentVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput, K2Node_CreateDelegate_OutputDelegate) == 0x000084, "Member 'AthenaInventoryScreenContainer_C_UpdateChannelBrowserInput::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.RegisterBack
// 0x0020 (0x0020 - 0x0000)
struct AthenaInventoryScreenContainer_C_RegisterBack final
{
public:
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0010(0x0010)(NoDestructor)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_RegisterBack) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_RegisterBack");
static_assert(sizeof(AthenaInventoryScreenContainer_C_RegisterBack) == 0x000020, "Wrong size on AthenaInventoryScreenContainer_C_RegisterBack");
static_assert(offsetof(AthenaInventoryScreenContainer_C_RegisterBack, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_RegisterBack::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_RegisterBack, K2Node_MakeStruct_DataTableRowHandle) == 0x000010, "Member 'AthenaInventoryScreenContainer_C_RegisterBack::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.OnDrop
// 0x00F0 (0x00F0 - 0x0000)
struct AthenaInventoryScreenContainer_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaInventoryDragDrop_C*             K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop;   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDragItemDroppable_bIsDroppable;         // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorldItem*                         K2Node_DynamicCast_AsFort_World_Item;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumInStack_ReturnValue;                // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DropItem_ReturnValue;                     // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_OnDrop) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_OnDrop");
static_assert(sizeof(AthenaInventoryScreenContainer_C_OnDrop) == 0x0000F0, "Wrong size on AthenaInventoryScreenContainer_C_OnDrop");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, MyGeometry) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, PointerEvent) == 0x000038, "Member 'AthenaInventoryScreenContainer_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, Operation) == 0x0000A8, "Member 'AthenaInventoryScreenContainer_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, ReturnValue) == 0x0000B0, "Member 'AthenaInventoryScreenContainer_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, Temp_bool_Variable) == 0x0000B1, "Member 'AthenaInventoryScreenContainer_C_OnDrop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop) == 0x0000B8, "Member 'AthenaInventoryScreenContainer_C_OnDrop::K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'AthenaInventoryScreenContainer_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, CallFunc_IsDragItemDroppable_bIsDroppable) == 0x0000C1, "Member 'AthenaInventoryScreenContainer_C_OnDrop::CallFunc_IsDragItemDroppable_bIsDroppable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, CallFunc_GetContext_ReturnValue) == 0x0000C8, "Member 'AthenaInventoryScreenContainer_C_OnDrop::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, K2Node_DynamicCast_AsFort_World_Item) == 0x0000D0, "Member 'AthenaInventoryScreenContainer_C_OnDrop::K2Node_DynamicCast_AsFort_World_Item' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'AthenaInventoryScreenContainer_C_OnDrop::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, CallFunc_GetNumInStack_ReturnValue) == 0x0000DC, "Member 'AthenaInventoryScreenContainer_C_OnDrop::CallFunc_GetNumInStack_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, CallFunc_Divide_IntInt_ReturnValue) == 0x0000E0, "Member 'AthenaInventoryScreenContainer_C_OnDrop::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, CallFunc_Max_ReturnValue) == 0x0000E4, "Member 'AthenaInventoryScreenContainer_C_OnDrop::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, K2Node_Select_Default) == 0x0000E8, "Member 'AthenaInventoryScreenContainer_C_OnDrop::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDrop, CallFunc_DropItem_ReturnValue) == 0x0000EC, "Member 'AthenaInventoryScreenContainer_C_OnDrop::CallFunc_DropItem_ReturnValue' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.OnDragOver
// 0x00C8 (0x00C8 - 0x0000)
struct AthenaInventoryScreenContainer_C_OnDragOver final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaInventoryDragDrop_C*             K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop;   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaDragDropAction                         Temp_byte_Variable;                                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDragItemDroppable_bIsDroppable;         // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaDragDropAction                         Temp_byte_Variable_1;                              // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaDragDropAction                         K2Node_Select_Default;                             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_OnDragOver) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_OnDragOver");
static_assert(sizeof(AthenaInventoryScreenContainer_C_OnDragOver) == 0x0000C8, "Wrong size on AthenaInventoryScreenContainer_C_OnDragOver");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, MyGeometry) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, PointerEvent) == 0x000038, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::PointerEvent' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, Operation) == 0x0000A8, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::Operation' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, ReturnValue) == 0x0000B0, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, Temp_bool_Variable) == 0x0000B1, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop) == 0x0000B8, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, Temp_byte_Variable) == 0x0000C1, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, CallFunc_IsDragItemDroppable_bIsDroppable) == 0x0000C2, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::CallFunc_IsDragItemDroppable_bIsDroppable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, Temp_byte_Variable_1) == 0x0000C3, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_OnDragOver, K2Node_Select_Default) == 0x0000C4, "Member 'AthenaInventoryScreenContainer_C_OnDragOver::K2Node_Select_Default' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.IsDragItemDroppable
// 0x0030 (0x0030 - 0x0000)
struct AthenaInventoryScreenContainer_C_IsDragItemDroppable final
{
public:
	class UDragDropOperation*                     DragDropOperation;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDroppable;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaInventoryDragDrop_C*             K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItem*                         K2Node_DynamicCast_AsFort_World_Item;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeDropped_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_IsDragItemDroppable) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_IsDragItemDroppable");
static_assert(sizeof(AthenaInventoryScreenContainer_C_IsDragItemDroppable) == 0x000030, "Wrong size on AthenaInventoryScreenContainer_C_IsDragItemDroppable");
static_assert(offsetof(AthenaInventoryScreenContainer_C_IsDragItemDroppable, DragDropOperation) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_IsDragItemDroppable::DragDropOperation' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_IsDragItemDroppable, bIsDroppable) == 0x000008, "Member 'AthenaInventoryScreenContainer_C_IsDragItemDroppable::bIsDroppable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_IsDragItemDroppable, K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop) == 0x000010, "Member 'AthenaInventoryScreenContainer_C_IsDragItemDroppable::K2Node_DynamicCast_AsAthena_Inventory_Drag_Drop' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_IsDragItemDroppable, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AthenaInventoryScreenContainer_C_IsDragItemDroppable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_IsDragItemDroppable, K2Node_DynamicCast_AsFort_World_Item) == 0x000020, "Member 'AthenaInventoryScreenContainer_C_IsDragItemDroppable::K2Node_DynamicCast_AsFort_World_Item' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_IsDragItemDroppable, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'AthenaInventoryScreenContainer_C_IsDragItemDroppable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_IsDragItemDroppable, CallFunc_CanBeDropped_ReturnValue) == 0x000029, "Member 'AthenaInventoryScreenContainer_C_IsDragItemDroppable::CallFunc_CanBeDropped_ReturnValue' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.HandleCreativePanels
// 0x0090 (0x0090 - 0x0000)
struct AthenaInventoryScreenContainer_C_HandleCreativePanels final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetCreativeInventoryWidget_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICreativeInventoryInterface_C> K2Node_DynamicCast_AsCreative_Inventory_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICreativeInventoryInterface_C> K2Node_DynamicCast_AsCreative_Inventory_Interface_1; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetMyIslandWidget_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICreativeInventoryInterface_C> K2Node_DynamicCast_AsCreative_Inventory_Interface_2; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICreativeInventoryInterface_C> K2Node_DynamicCast_AsCreative_Inventory_Interface_3; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_HandleCreativePanels) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_HandleCreativePanels");
static_assert(sizeof(AthenaInventoryScreenContainer_C_HandleCreativePanels) == 0x000090, "Wrong size on AthenaInventoryScreenContainer_C_HandleCreativePanels");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, TabId) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::TabId' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000008, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, CallFunc_GetCreativeInventoryWidget_ReturnValue) == 0x000010, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::CallFunc_GetCreativeInventoryWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000018, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, K2Node_DynamicCast_AsCreative_Inventory_Interface) == 0x000020, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::K2Node_DynamicCast_AsCreative_Inventory_Interface' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, K2Node_DynamicCast_AsCreative_Inventory_Interface_1) == 0x000038, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::K2Node_DynamicCast_AsCreative_Inventory_Interface_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, CallFunc_GetMyIslandWidget_ReturnValue) == 0x000050, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::CallFunc_GetMyIslandWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, K2Node_DynamicCast_AsCreative_Inventory_Interface_2) == 0x000060, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::K2Node_DynamicCast_AsCreative_Inventory_Interface_2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, CallFunc_BooleanAND_ReturnValue_1) == 0x000071, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, K2Node_DynamicCast_AsCreative_Inventory_Interface_3) == 0x000078, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::K2Node_DynamicCast_AsCreative_Inventory_Interface_3' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleCreativePanels, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'AthenaInventoryScreenContainer_C_HandleCreativePanels::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.HandleClose
// 0x0028 (0x0028 - 0x0000)
struct AthenaInventoryScreenContainer_C_HandleClose final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetCreativeInventoryWidget_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortCreativeItemListMenu*              K2Node_DynamicCast_AsFort_Creative_Item_List_Menu; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSubTabOpened_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_HandleClose) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_HandleClose");
static_assert(sizeof(AthenaInventoryScreenContainer_C_HandleClose) == 0x000028, "Wrong size on AthenaInventoryScreenContainer_C_HandleClose");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleClose, PassThrough) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_HandleClose::PassThrough' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleClose, CallFunc_GetCreativeInventoryWidget_ReturnValue) == 0x000008, "Member 'AthenaInventoryScreenContainer_C_HandleClose::CallFunc_GetCreativeInventoryWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleClose, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'AthenaInventoryScreenContainer_C_HandleClose::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleClose, K2Node_DynamicCast_AsFort_Creative_Item_List_Menu) == 0x000018, "Member 'AthenaInventoryScreenContainer_C_HandleClose::K2Node_DynamicCast_AsFort_Creative_Item_List_Menu' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleClose, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AthenaInventoryScreenContainer_C_HandleClose::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleClose, CallFunc_IsSubTabOpened_ReturnValue) == 0x000021, "Member 'AthenaInventoryScreenContainer_C_HandleClose::CallFunc_IsSubTabOpened_ReturnValue' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.HandleChannelBrowser
// 0x0028 (0x0028 - 0x0000)
struct AthenaInventoryScreenContainer_C_HandleChannelBrowser final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCr_ChannelBrowser_C*                   CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_HandleChannelBrowser) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_HandleChannelBrowser");
static_assert(sizeof(AthenaInventoryScreenContainer_C_HandleChannelBrowser) == 0x000028, "Wrong size on AthenaInventoryScreenContainer_C_HandleChannelBrowser");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleChannelBrowser, bPassThrough) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_HandleChannelBrowser::bPassThrough' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleChannelBrowser, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'AthenaInventoryScreenContainer_C_HandleChannelBrowser::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleChannelBrowser, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'AthenaInventoryScreenContainer_C_HandleChannelBrowser::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_HandleChannelBrowser, CallFunc_Create_ReturnValue) == 0x000020, "Member 'AthenaInventoryScreenContainer_C_HandleChannelBrowser::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.ExecuteUbergraph_AthenaInventoryScreenContainer
// 0x0070 (0x0070 - 0x0000)
struct AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_TabId;                  // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_TabButton;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_TabId_1;                // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleClose_PassThrough;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetMyIslandWidget_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonLegacy*                    K2Node_ComponentBoundEvent_Button;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICreativeInventoryInterface_C> K2Node_DynamicCast_AsCreative_Inventory_Interface; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTabCount_ReturnValue;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingTouch_ReturnValue;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer");
static_assert(sizeof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer) == 0x000070, "Wrong size on AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, EntryPoint) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, K2Node_ComponentBoundEvent_TabId) == 0x000004, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::K2Node_ComponentBoundEvent_TabId' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, K2Node_ComponentBoundEvent_TabButton) == 0x000010, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::K2Node_ComponentBoundEvent_TabButton' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, Temp_byte_Variable) == 0x000018, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, Temp_byte_Variable_1) == 0x000019, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, K2Node_ComponentBoundEvent_TabId_1) == 0x00001C, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::K2Node_ComponentBoundEvent_TabId_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, Temp_bool_Variable) == 0x000024, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, CallFunc_HandleClose_PassThrough) == 0x000025, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::CallFunc_HandleClose_PassThrough' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, CallFunc_GetMyIslandWidget_ReturnValue) == 0x000028, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::CallFunc_GetMyIslandWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, K2Node_ComponentBoundEvent_Button) == 0x000030, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, K2Node_DynamicCast_AsCreative_Inventory_Interface) == 0x000038, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::K2Node_DynamicCast_AsCreative_Inventory_Interface' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, CallFunc_IsActivated_ReturnValue) == 0x000049, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, CallFunc_GetTabCount_ReturnValue) == 0x00004C, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::CallFunc_GetTabCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, K2Node_Select_Default) == 0x000051, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, CallFunc_PlayAnimation_ReturnValue) == 0x000058, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, CallFunc_PlayAnimation_ReturnValue_1) == 0x000060, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer, CallFunc_IsUsingTouch_ReturnValue) == 0x000068, "Member 'AthenaInventoryScreenContainer_C_ExecuteUbergraph_AthenaInventoryScreenContainer::CallFunc_IsUsingTouch_ReturnValue' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.CloseFromChannelBrowser
// 0x0001 (0x0001 - 0x0000)
struct AthenaInventoryScreenContainer_C_CloseFromChannelBrowser final
{
public:
	bool                                          CallFunc_HandleClose_PassThrough;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_CloseFromChannelBrowser) == 0x000001, "Wrong alignment on AthenaInventoryScreenContainer_C_CloseFromChannelBrowser");
static_assert(sizeof(AthenaInventoryScreenContainer_C_CloseFromChannelBrowser) == 0x000001, "Wrong size on AthenaInventoryScreenContainer_C_CloseFromChannelBrowser");
static_assert(offsetof(AthenaInventoryScreenContainer_C_CloseFromChannelBrowser, CallFunc_HandleClose_PassThrough) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_CloseFromChannelBrowser::CallFunc_HandleClose_PassThrough' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AthenaInventoryScreenContainer_C_BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature) == 0x000004, "Wrong alignment on AthenaInventoryScreenContainer_C_BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature");
static_assert(sizeof(AthenaInventoryScreenContainer_C_BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature) == 0x000008, "Wrong size on AthenaInventoryScreenContainer_C_BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature");
static_assert(offsetof(AthenaInventoryScreenContainer_C_BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature, TabId) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_BndEvt__TabsMajor_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature::TabId' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.BndEvt__TabList_Inventory_K2Node_ComponentBoundEvent_3_OnTabButtonCreation__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct AthenaInventoryScreenContainer_C_BndEvt__TabList_Inventory_K2Node_ComponentBoundEvent_3_OnTabButtonCreation__DelegateSignature final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      TabButton;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_BndEvt__TabList_Inventory_K2Node_ComponentBoundEvent_3_OnTabButtonCreation__DelegateSignature) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_BndEvt__TabList_Inventory_K2Node_ComponentBoundEvent_3_OnTabButtonCreation__DelegateSignature");
static_assert(sizeof(AthenaInventoryScreenContainer_C_BndEvt__TabList_Inventory_K2Node_ComponentBoundEvent_3_OnTabButtonCreation__DelegateSignature) == 0x000010, "Wrong size on AthenaInventoryScreenContainer_C_BndEvt__TabList_Inventory_K2Node_ComponentBoundEvent_3_OnTabButtonCreation__DelegateSignature");
static_assert(offsetof(AthenaInventoryScreenContainer_C_BndEvt__TabList_Inventory_K2Node_ComponentBoundEvent_3_OnTabButtonCreation__DelegateSignature, TabId) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_BndEvt__TabList_Inventory_K2Node_ComponentBoundEvent_3_OnTabButtonCreation__DelegateSignature::TabId' has a wrong offset!");
static_assert(offsetof(AthenaInventoryScreenContainer_C_BndEvt__TabList_Inventory_K2Node_ComponentBoundEvent_3_OnTabButtonCreation__DelegateSignature, TabButton) == 0x000008, "Member 'AthenaInventoryScreenContainer_C_BndEvt__TabList_Inventory_K2Node_ComponentBoundEvent_3_OnTabButtonCreation__DelegateSignature::TabButton' has a wrong offset!");

// Function AthenaInventoryScreenContainer.AthenaInventoryScreenContainer_C.BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct AthenaInventoryScreenContainer_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButtonLegacy*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaInventoryScreenContainer_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on AthenaInventoryScreenContainer_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(AthenaInventoryScreenContainer_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on AthenaInventoryScreenContainer_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(AthenaInventoryScreenContainer_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'AthenaInventoryScreenContainer_C_BndEvt__CloseButton_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

}

