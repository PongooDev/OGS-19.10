#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cr_ChBrowserDeviceTile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUILegacy_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Cr_ChBrowserDeviceTile.Cr_ChBrowserDeviceTile_C
// 0x0050 (0x0F50 - 0x0F00)
class UCr_ChBrowserDeviceTile_C final : public UCommonButtonLegacy
{
public:
	uint8                                         Pad_EF8[0x8];                                      // 0x0EF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0F00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_Border;                                      // 0x0F08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Device;                                      // 0x0F10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_InputAction;                               // 0x0F18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Teleport;                                  // 0x0F20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_DeviceName;                                   // 0x0F28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VBox_Messages;                                     // 0x0F30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0F38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              CloseUI;                                           // 0x0F40(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void UpdateName(const class FText& InName);
	void UpdateArt(class UTexture2D* inTexture2D, const struct FSlateBrush& inSlateBrush);
	void Populate(const class FText& InName, TArray<class FText>& inTxMessages, TArray<class FText>& inRxMessages);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void Focus();
	void ExecuteUbergraph_Cr_ChBrowserDeviceTile(int32 EntryPoint);
	void BP_OnUnhovered();
	void BP_OnSelected();
	void BP_OnHovered();
	void BP_OnDeselected();
	void BP_OnClicked();
	void BeginFlying();
	void AddTxMessage(const class FText& InMessage, const class FText& InChannel);
	void Add_Rx_Message(const class FText& InMessage, const class FText& InChannel);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Cr_ChBrowserDeviceTile_C">();
	}
	static class UCr_ChBrowserDeviceTile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCr_ChBrowserDeviceTile_C>();
	}
};
static_assert(alignof(UCr_ChBrowserDeviceTile_C) == 0x000010, "Wrong alignment on UCr_ChBrowserDeviceTile_C");
static_assert(sizeof(UCr_ChBrowserDeviceTile_C) == 0x000F50, "Wrong size on UCr_ChBrowserDeviceTile_C");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, UberGraphFrame) == 0x000F00, "Member 'UCr_ChBrowserDeviceTile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, Image_Border) == 0x000F08, "Member 'UCr_ChBrowserDeviceTile_C::Image_Border' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, Image_Device) == 0x000F10, "Member 'UCr_ChBrowserDeviceTile_C::Image_Device' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, Overlay_InputAction) == 0x000F18, "Member 'UCr_ChBrowserDeviceTile_C::Overlay_InputAction' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, Overlay_Teleport) == 0x000F20, "Member 'UCr_ChBrowserDeviceTile_C::Overlay_Teleport' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, Text_DeviceName) == 0x000F28, "Member 'UCr_ChBrowserDeviceTile_C::Text_DeviceName' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, VBox_Messages) == 0x000F30, "Member 'UCr_ChBrowserDeviceTile_C::VBox_Messages' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, ActorRef) == 0x000F38, "Member 'UCr_ChBrowserDeviceTile_C::ActorRef' has a wrong offset!");
static_assert(offsetof(UCr_ChBrowserDeviceTile_C, CloseUI) == 0x000F40, "Member 'UCr_ChBrowserDeviceTile_C::CloseUI' has a wrong offset!");

}

