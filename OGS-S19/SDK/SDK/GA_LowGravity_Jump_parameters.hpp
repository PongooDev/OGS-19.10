#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_LowGravity_Jump

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_LowGravity_Jump.GA_LowGravity_Jump_C.ExecuteUbergraph_GA_LowGravity_Jump
// 0x02A8 (0x02A8 - 0x0000)
struct GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0008(0x00B0)(ConstParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   K2Node_DynamicCast_AsPlayer_Pawn_Athena;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSprinting_ReturnValue;                  // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Select_Default;                             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMovementComp_Character*            K2Node_DynamicCast_AsFort_Movement_Comp_Character; // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwingingGround_ReturnValue;             // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwingingAir_ReturnValue;                // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Yaw;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x00F8(0x00C0)(ContainsInstancedReference)
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue_1;  // 0x01B8(0x00C0)(ContainsInstancedReference)
	uint8                                         Temp_byte_Variable_1;                              // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump) == 0x000008, "Wrong alignment on GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump");
static_assert(sizeof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump) == 0x0002A8, "Wrong size on GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, EntryPoint) == 0x000000, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, Temp_bool_Variable) == 0x000004, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, K2Node_Event_EventData) == 0x000008, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000B8, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, K2Node_DynamicCast_AsPlayer_Pawn_Athena) == 0x0000C0, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::K2Node_DynamicCast_AsPlayer_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0000C9, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_IsSprinting_ReturnValue) == 0x0000CA, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_IsSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x0000CB, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, K2Node_Select_Default) == 0x0000CC, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, Temp_byte_Variable) == 0x0000CD, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, K2Node_Select_Default_1) == 0x0000D0, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, K2Node_DynamicCast_AsFort_Movement_Comp_Character) == 0x0000D8, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::K2Node_DynamicCast_AsFort_Movement_Comp_Character' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_IsCrouching_ReturnValue) == 0x0000E1, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_IsSwingingGround_ReturnValue) == 0x0000E2, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_IsSwingingGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_IsSwingingAir_ReturnValue) == 0x0000E3, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_IsSwingingAir_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_IsFalling_ReturnValue) == 0x0000E4, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_BooleanOR_ReturnValue) == 0x0000E5, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_BooleanOR_ReturnValue_1) == 0x0000E6, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_BooleanOR_ReturnValue_2) == 0x0000E7, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_GetYawPitchFromVector_Yaw) == 0x0000E8, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_GetYawPitchFromVector_Yaw' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_GetYawPitchFromVector_Pitch) == 0x0000EC, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_GetYawPitchFromVector_Pitch' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_Not_PreBool_ReturnValue) == 0x0000F0, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x0000F8, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_MakeGameplayCueParameters_ReturnValue_1) == 0x0001B8, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_MakeGameplayCueParameters_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, Temp_byte_Variable_1) == 0x000278, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, K2Node_Select_Default_2) == 0x00027C, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_MakeRotator_ReturnValue) == 0x000280, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_GetForwardVector_ReturnValue) == 0x00028C, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000298, "Member 'GA_LowGravity_Jump_C_ExecuteUbergraph_GA_LowGravity_Jump::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function GA_LowGravity_Jump.GA_LowGravity_Jump_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_LowGravity_Jump_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_LowGravity_Jump_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_LowGravity_Jump_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_LowGravity_Jump_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_LowGravity_Jump_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_LowGravity_Jump_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_LowGravity_Jump_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_LowGravity_Jump.GA_LowGravity_Jump_C.SetVariablesFromRows
// 0x0034 (0x0034 - 0x0000)
struct GA_LowGravity_Jump_C_SetVariablesFromRows final
{
public:
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_1;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_2;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_2;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_3;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_3;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_4;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_4;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_5;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_5;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LowGravity_Jump_C_SetVariablesFromRows) == 0x000004, "Wrong alignment on GA_LowGravity_Jump_C_SetVariablesFromRows");
static_assert(sizeof(GA_LowGravity_Jump_C_SetVariablesFromRows) == 0x000034, "Wrong size on GA_LowGravity_Jump_C_SetVariablesFromRows");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutResult) == 0x000000, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutXY) == 0x000004, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutResult_1) == 0x000008, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutResult_1' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutXY_1) == 0x00000C, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutXY_1' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, K2Node_SwitchEnum_CmpSuccess_1) == 0x000011, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutResult_2) == 0x000012, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutResult_2' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutXY_2) == 0x000014, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutXY_2' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutResult_3) == 0x000018, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutResult_3' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutXY_3) == 0x00001C, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutXY_3' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, K2Node_SwitchEnum_CmpSuccess_2) == 0x000020, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, K2Node_SwitchEnum_CmpSuccess_3) == 0x000021, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutResult_4) == 0x000022, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutResult_4' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutXY_4) == 0x000024, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutXY_4' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutResult_5) == 0x000028, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutResult_5' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, CallFunc_EvaluateCurveTableRow_OutXY_5) == 0x00002C, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::CallFunc_EvaluateCurveTableRow_OutXY_5' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, K2Node_SwitchEnum_CmpSuccess_4) == 0x000030, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_SetVariablesFromRows, K2Node_SwitchEnum_CmpSuccess_5) == 0x000031, "Member 'GA_LowGravity_Jump_C_SetVariablesFromRows::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");

// Function GA_LowGravity_Jump.GA_LowGravity_Jump_C.K2_ShouldAbilityRespondToEvent
// 0x0100 (0x0100 - 0x0000)
struct GA_LowGravity_Jump_C_K2_ShouldAbilityRespondToEvent final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayEventData                     Payload;                                           // 0x0048(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_LowGravity_Jump_C_K2_ShouldAbilityRespondToEvent) == 0x000008, "Wrong alignment on GA_LowGravity_Jump_C_K2_ShouldAbilityRespondToEvent");
static_assert(sizeof(GA_LowGravity_Jump_C_K2_ShouldAbilityRespondToEvent) == 0x000100, "Wrong size on GA_LowGravity_Jump_C_K2_ShouldAbilityRespondToEvent");
static_assert(offsetof(GA_LowGravity_Jump_C_K2_ShouldAbilityRespondToEvent, ActorInfo) == 0x000000, "Member 'GA_LowGravity_Jump_C_K2_ShouldAbilityRespondToEvent::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_K2_ShouldAbilityRespondToEvent, Payload) == 0x000048, "Member 'GA_LowGravity_Jump_C_K2_ShouldAbilityRespondToEvent::Payload' has a wrong offset!");
static_assert(offsetof(GA_LowGravity_Jump_C_K2_ShouldAbilityRespondToEvent, ReturnValue) == 0x0000F8, "Member 'GA_LowGravity_Jump_C_K2_ShouldAbilityRespondToEvent::ReturnValue' has a wrong offset!");

}

